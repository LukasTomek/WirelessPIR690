gplink-1.4.0 #1107 (May  9 2015)
Copyright (c) 1998-2014 gputils project
Listing File Generated: 1-7-2017  10:50:45
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.0 #9615 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"main.c"
                                           	list	p=16f690
                                           	radix dec
                                           	include "p16f690.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F690 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; config word(s)
                                           ;--------------------------------------------------------
002007   3fd4     addlw   0xd4             	__config 0x3fd4
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_init
                                           	extern	__moduint
                                           	extern	__divuint
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_PWM1CONbits
                                           	extern	_ECCPASbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_OSCCONbits
                                           	extern	_OSCTUNEbits
                                           	extern	_MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSPSTATbits
                                           	extern	_WPUbits
                                           	extern	_WPUAbits
                                           	extern	_IOCbits
                                           	extern	_IOCAbits
                                           	extern	_WDTCONbits
                                           	extern	_TXSTAbits
                                           	extern	_SPBRGbits
                                           	extern	_SPBRGHbits
                                           	extern	_BAUDCTLbits
                                           	extern	_ADCON1bits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_VRCONbits
                                           	extern	_CM1CON0bits
                                           	extern	_CM2CON0bits
                                           	extern	_CM2CON1bits
                                           	extern	_ANSELbits
                                           	extern	_ANSELHbits
                                           	extern	_EECON1bits
                                           	extern	_PSTRCONbits
                                           	extern	_SRCONbits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_PWM1CON
                                           	extern	_ECCPAS
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_OSCCON
                                           	extern	_OSCTUNE
                                           	extern	_PR2
                                           	extern	_MSK
                                           	extern	_SSPADD
                                           	extern	_SSPMSK
                                           	extern	_SSPSTAT
                                           	extern	_WPU
                                           	extern	_WPUA
                                           	extern	_IOC
                                           	extern	_IOCA
                                           	extern	_WDTCON
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_BAUDCTL
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDAT
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_VRCON
                                           	extern	_CM1CON0
                                           	extern	_CM2CON0
                                           	extern	_CM2CON1
                                           	extern	_ANSEL
                                           	extern	_ANSELH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_PSTRCON
                                           	extern	_SRCON
                                           	extern	___sdcc_saved_fsr
                                           	extern	__gptrget1
                                           	extern	__sdcc_gsinit_startup
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_SP_send_error
                                           	global	_SP_send
                                           	global	_dec_to_ascii
                                           	global	_circBufPush
                                           	global	_receive_intr
                                           	global	_main
                                           	global	_bitfield
                                           	global	_w
                                           	global	_t
                                           	global	_w1
                                           	global	_t1
                                           	global	_buf
                                           	global	_buf_head
                                           	global	_buf_tail
                                           	global	_int_error_cnt
                                           	global	_strV0
                                           	global	_strV1
                                           	global	_strVF
                                           	global	_strw
                                           	global	_strt
                                           	global	_strw1
                                           	global	_strt1
                                           	global	_tab
                                           	global	_enter
                                           	global	_sync
                                           	global	_int_err
                                           	global	_buf_err
                                           
                                           	global PSAVE
                                           	global SSAVE
                                           	global WSAVE
                                           	global STK12
                                           	global STK11
                                           	global STK10
                                           	global STK09
                                           	global STK08
                                           	global STK07
                                           	global STK06
                                           	global STK05
                                           	global STK04
                                           	global STK03
                                           	global STK02
                                           	global STK01
                                           	global STK00
                                           
                                           sharebank udata_ovr 0x0070
                                           PSAVE	res 1
                                           SSAVE	res 1
                                           WSAVE	res 1
                                           STK12	res 1
                                           STK11	res 1
                                           STK10	res 1
                                           STK09	res 1
                                           STK08	res 1
                                           STK07	res 1
                                           STK06	res 1
                                           STK05	res 1
                                           STK04	res 1
                                           STK03	res 1
                                           STK02	res 1
                                           STK01	res 1
                                           STK00	res 1
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           UD_main_0	udata
                                           _bitfield	res	1
                                           
                                           UD_main_1	udata
                                           _buf	res	16
                                           
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_main_0	udata
                                           r0x103D	res	1
                                           r0x103E	res	1
                                           r0x103F	res	1
                                           r0x103B	res	1
                                           r0x103A	res	1
                                           r0x103C	res	1
                                           r0x1025	res	1
                                           r0x1026	res	1
                                           r0x1028	res	1
                                           r0x1027	res	1
                                           r0x1029	res	1
                                           r0x1033	res	1
                                           r0x1032	res	1
                                           r0x1034	res	1
                                           r0x1035	res	1
                                           r0x1036	res	1
                                           r0x1039	res	1
                                           r0x102C	res	1
                                           r0x102B	res	1
                                           r0x102A	res	1
                                           r0x102D	res	1
                                           r0x102E	res	1
                                           r0x102F	res	1
                                           r0x1030	res	1
                                           r0x1031	res	1
                                           r0x101F	res	1
                                           r0x101E	res	1
                                           r0x101D	res	1
                                           r0x1020	res	1
                                           r0x1021	res	1
                                           r0x1022	res	1
                                           r0x1023	res	1
                                           r0x1024	res	1
                                           _dec_to_ascii_number_1_20	res	4
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           
                                           ID_main_0	idata
                                           _w
                                           	db	0x00, 0x00
                                           
                                           
                                           ID_main_1	idata
                                           _t
                                           	db	0x00, 0x00
                                           
                                           
                                           ID_main_2	idata
                                           _w1
                                           	db	0x00, 0x00
                                           
                                           
                                           ID_main_3	idata
                                           _t1
                                           	db	0x00, 0x00
                                           
                                           
                                           ID_main_4	idata
                                           _buf_head
                                           	db	0x00
                                           
                                           
                                           ID_main_5	idata
                                           _buf_tail
                                           	db	0x00
                                           
                                           
                                           ID_main_6	idata
                                           _int_error_cnt
                                           	db	0x00
                                           
                                           
                                           ID_main_7	code
                                           _strV0
000420   3430     retlw   0x30             	retlw 0x30
000421   3420     retlw   0x20             	retlw 0x20
000422   340a     retlw   0x0a             	retlw 0x0a
000423   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_8	code
                                           _strV1
000424   3431     retlw   0x31             	retlw 0x31
000425   3420     retlw   0x20             	retlw 0x20
000426   340a     retlw   0x0a             	retlw 0x0a
000427   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_9	code
                                           _strVF
000428   3446     retlw   0x46             	retlw 0x46
000429   3420     retlw   0x20             	retlw 0x20
00042a   340a     retlw   0x0a             	retlw 0x0a
00042b   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_10	code
                                           _strw
00042c   3477     retlw   0x77             	retlw 0x77
00042d   343a     retlw   0x3a             	retlw 0x3a
00042e   3420     retlw   0x20             	retlw 0x20
00042f   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_11	code
                                           _strt
000430   3474     retlw   0x74             	retlw 0x74
000431   343a     retlw   0x3a             	retlw 0x3a
000432   3420     retlw   0x20             	retlw 0x20
000433   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_12	code
                                           _strw1
000416   3477     retlw   0x77             	retlw 0x77
000417   3431     retlw   0x31             	retlw 0x31
000418   343a     retlw   0x3a             	retlw 0x3a
000419   3420     retlw   0x20             	retlw 0x20
00041a   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_13	code
                                           _strt1
00041b   3474     retlw   0x74             	retlw 0x74
00041c   3431     retlw   0x31             	retlw 0x31
00041d   343a     retlw   0x3a             	retlw 0x3a
00041e   3420     retlw   0x20             	retlw 0x20
00041f   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_14	code
                                           _tab
00043c   3409     retlw   0x09             	retlw 0x09
00043d   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_15	code
                                           _enter
00043e   340a     retlw   0x0a             	retlw 0x0a
00043f   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_16	code
                                           _sync
000410   3453     retlw   0x53             	retlw 0x53
000411   3459     retlw   0x59             	retlw 0x59
000412   344e     retlw   0x4e             	retlw 0x4e
000413   3443     retlw   0x43             	retlw 0x43
000414   340a     retlw   0x0a             	retlw 0x0a
000415   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_17	code
                                           _int_err
000407   3449     retlw   0x49             	retlw 0x49
000408   344e     retlw   0x4e             	retlw 0x4e
000409   3454     retlw   0x54             	retlw 0x54
00040a   3420     retlw   0x20             	retlw 0x20
00040b   3445     retlw   0x45             	retlw 0x45
00040c   3452     retlw   0x52             	retlw 0x52
00040d   3452     retlw   0x52             	retlw 0x52
00040e   340a     retlw   0x0a             	retlw 0x0a
00040f   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_18	code
                                           _buf_err
0003f6   3442     retlw   0x42             	retlw 0x42
0003f7   3455     retlw   0x55             	retlw 0x55
0003f8   3446     retlw   0x46             	retlw 0x46
0003f9   3446     retlw   0x46             	retlw 0x46
0003fa   3445     retlw   0x45             	retlw 0x45
0003fb   3452     retlw   0x52             	retlw 0x52
0003fc   3420     retlw   0x20             	retlw 0x20
0003fd   344f     retlw   0x4f             	retlw 0x4f
0003fe   3457     retlw   0x57             	retlw 0x57
0003ff   3445     retlw   0x45             	retlw 0x45
000400   3452     retlw   0x52             	retlw 0x52
000401   3446     retlw   0x46             	retlw 0x46
000402   344c     retlw   0x4c             	retlw 0x4c
000403   344f     retlw   0x4f             	retlw 0x4f
000404   3457     retlw   0x57             	retlw 0x57
000405   340a     retlw   0x0a             	retlw 0x0a
000406   3400     retlw   0x00             	retlw 0x00
                                           
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; reset vector 
                                           ;--------------------------------------------------------
                                           STARTUP	code 0x0000
000000   0000     nop                      	nop
000001   118a     bcf     0x0a, 0x3        	pagesel __sdcc_gsinit_startup
000002   28c9     goto    0x00c9           	goto	__sdcc_gsinit_startup
                                           ;--------------------------------------------------------
                                           ; interrupt and initialization code
                                           ;--------------------------------------------------------
                                           c_interrupt	code	0x0004
                                           __sdcc_interrupt:
                                           ;***
                                           ;  pBlock Stats: dbName = I
                                           ;***
                                           ;functions called:
                                           ;   _SP_send_error
                                           ;   _SP_send_error
                                           ;5 compiler assigned registers:
                                           ;   r0x103D
                                           ;   r0x103E
                                           ;   r0x103F
                                           ;   STK01
                                           ;   STK00
                                           ;; Starting pCode block
                                           _receive_intr:
                                           ; 0 exit points
                                           ;	.line	84; "main.c"	void receive_intr() __interrupt 0 {
000004   00f2     movwf   0x72             	MOVWF	WSAVE
000005   0e03     swapf   0x03, 0x0        	SWAPF	STATUS,W
000006   0183     clrf    0x03             	CLRF	STATUS
000007   00f1     movwf   0x71             	MOVWF	SSAVE
000008   080a     movf    0x0a, 0x0        	MOVF	PCLATH,W
000009   018a     clrf    0x0a             	CLRF	PCLATH
00000a   00f0     movwf   0x70             	MOVWF	PSAVE
00000b   0804     movf    0x04, 0x0        	MOVF	FSR,W
00000c   1683     bsf     0x03, 0x5        	BANKSEL	___sdcc_saved_fsr
00000d   1303     bcf     0x03, 0x6        
00000e   00ac     movwf   0x2c             	MOVWF	___sdcc_saved_fsr
                                           ;	.line	86; "main.c"	if(TXIF){
00000f   1283     bcf     0x03, 0x5        	BANKSEL	_PIR1bits
000010   1303     bcf     0x03, 0x6        
000011   1e0c     btfss   0x0c, 0x4        	BTFSS	_PIR1bits,4
000012   2863     goto    0x0063           	GOTO	_00111_DS_
                                           ;	.line	88; "main.c"	if (buf_head == buf_tail){
000013   1683     bsf     0x03, 0x5        	BANKSEL	_buf_tail
000014   1303     bcf     0x03, 0x6        
000015   082a     movf    0x2a, 0x0        	MOVF	_buf_tail,W
000016   1683     bsf     0x03, 0x5        	BANKSEL	_buf_head
000017   1303     bcf     0x03, 0x6        
000018   0629     xorwf   0x29, 0x0        	XORWF	_buf_head,W
000019   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00001a   281f     goto    0x001f           	GOTO	_00108_DS_
                                           ;	.line	89; "main.c"	TXIE = 0;
00001b   1683     bsf     0x03, 0x5        	BANKSEL	_PIE1bits
00001c   1303     bcf     0x03, 0x6        
00001d   120c     bcf     0x0c, 0x4        	BCF	_PIE1bits,4
00001e   2863     goto    0x0063           	GOTO	_00111_DS_
                                           _00108_DS_:
                                           ;	.line	94; "main.c"	TXREG = buf[buf_tail];
00001f   1683     bsf     0x03, 0x5        	BANKSEL	_buf_tail
000020   1303     bcf     0x03, 0x6        
000021   082a     movf    0x2a, 0x0        	MOVF	_buf_tail,W
000022   3e45     addlw   0x45             	ADDLW	(_buf + 0)
000023   1283     bcf     0x03, 0x5        	BANKSEL	r0x103D
000024   1303     bcf     0x03, 0x6        
000025   00a0     movwf   0x20             	MOVWF	r0x103D
000026   3000     movlw   0x00             	MOVLW	high (_buf + 0)
000027   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000028   3e01     addlw   0x01             	ADDLW	0x01
000029   00a1     movwf   0x21             	MOVWF	r0x103E
00002a   0820     movf    0x20, 0x0        	MOVF	r0x103D,W
00002b   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00002c   1303     bcf     0x03, 0x6        
00002d   0084     movwf   0x04             	MOVWF	FSR
00002e   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00002f   1283     bcf     0x03, 0x5        	BANKSEL	r0x103E
000030   1303     bcf     0x03, 0x6        
000031   1821     btfsc   0x21, 0x0        	BTFSC	r0x103E,0
000032   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000033   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000034   1303     bcf     0x03, 0x6        
000035   0800     movf    0x00, 0x0        	MOVF	INDF,W
000036   0099     movwf   0x19             	MOVWF	_TXREG
                                           ;	.line	95; "main.c"	buf[buf_tail] = 0;  // clear the data (optional)
000037   1283     bcf     0x03, 0x5        	BANKSEL	r0x103D
000038   1303     bcf     0x03, 0x6        
000039   0820     movf    0x20, 0x0        	MOVF	r0x103D,W
00003a   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00003b   1303     bcf     0x03, 0x6        
00003c   0084     movwf   0x04             	MOVWF	FSR
00003d   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00003e   1283     bcf     0x03, 0x5        	BANKSEL	r0x103E
00003f   1303     bcf     0x03, 0x6        
000040   1821     btfsc   0x21, 0x0        	BTFSC	r0x103E,0
000041   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000042   3000     movlw   0x00             	MOVLW	0x00
000043   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000044   1303     bcf     0x03, 0x6        
000045   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	97; "main.c"	next = buf_tail + 1;
000046   1683     bsf     0x03, 0x5        	BANKSEL	_buf_tail
000047   1303     bcf     0x03, 0x6        
000048   082a     movf    0x2a, 0x0        	MOVF	_buf_tail,W
000049   1283     bcf     0x03, 0x5        	BANKSEL	r0x103D
00004a   1303     bcf     0x03, 0x6        
00004b   00a0     movwf   0x20             	MOVWF	r0x103D
00004c   01a1     clrf    0x21             	CLRF	r0x103E
00004d   0aa0     incf    0x20, 0x1        	INCF	r0x103D,F
00004e   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00004f   0aa1     incf    0x21, 0x1        	INCF	r0x103E,F
                                           ;;signed compare: left < lit(0x10=16), size=2, mask=ffff
                                           ;	.line	98; "main.c"	if(next >= BUF_SIZE)
000050   0821     movf    0x21, 0x0        	MOVF	r0x103E,W
000051   3e80     addlw   0x80             	ADDLW	0x80
000052   3e80     addlw   0x80             	ADDLW	0x80
000053   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000054   2857     goto    0x0057           	GOTO	_00139_DS_
000055   3010     movlw   0x10             	MOVLW	0x10
000056   0220     subwf   0x20, 0x0        	SUBWF	r0x103D,W
                                           _00139_DS_:
000057   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000058   285d     goto    0x005d           	GOTO	_00106_DS_
                                           ;;genSkipc:3257: created from rifx:0x7fffa7ea1670
                                           ;	.line	99; "main.c"	next = 0;
000059   1283     bcf     0x03, 0x5        	BANKSEL	r0x103D
00005a   1303     bcf     0x03, 0x6        
00005b   01a0     clrf    0x20             	CLRF	r0x103D
00005c   01a1     clrf    0x21             	CLRF	r0x103E
                                           _00106_DS_:
                                           ;	.line	101; "main.c"	buf_tail = next;
00005d   1283     bcf     0x03, 0x5        	BANKSEL	r0x103D
00005e   1303     bcf     0x03, 0x6        
00005f   0820     movf    0x20, 0x0        	MOVF	r0x103D,W
000060   1683     bsf     0x03, 0x5        	BANKSEL	_buf_tail
000061   1303     bcf     0x03, 0x6        
000062   00aa     movwf   0x2a             	MOVWF	_buf_tail
                                           _00111_DS_:
                                           ;	.line	105; "main.c"	if(CCP1IF){
000063   1283     bcf     0x03, 0x5        	BANKSEL	_PIR1bits
000064   1303     bcf     0x03, 0x6        
000065   1d0c     btfss   0x0c, 0x2        	BTFSS	_PIR1bits,2
000066   28a4     goto    0x00a4           	GOTO	_00116_DS_
                                           ;	.line	106; "main.c"	CCP1IF = 0;                     //Clear interrupt flag
000067   110c     bcf     0x0c, 0x2        	BCF	_PIR1bits,2
                                           ;	.line	109; "main.c"	if(CCP1M0){                     // if ECCP mode is Rising edge CCP1M0
000068   1c17     btfss   0x17, 0x0        	BTFSS	_CCP1CONbits,0
000069   2889     goto    0x0089           	GOTO	_00113_DS_
                                           ;	.line	110; "main.c"	CCP1M0 = FALING;                 // set falling edge
00006a   1017     bcf     0x17, 0x0        	BCF	_CCP1CONbits,0
                                           ;	.line	111; "main.c"	TMR1H = 0;
00006b   018f     clrf    0x0f             	CLRF	_TMR1H
                                           ;	.line	112; "main.c"	TMR1L = 0;
00006c   018e     clrf    0x0e             	CLRF	_TMR1L
                                           ;	.line	114; "main.c"	t = 0x0000 | CCPR1H;        //ECCP result higher 8 bits
00006d   0816     movf    0x16, 0x0        	MOVF	_CCPR1H,W
00006e   1283     bcf     0x03, 0x5        	BANKSEL	r0x103D
00006f   1303     bcf     0x03, 0x6        
000070   00a0     movwf   0x20             	MOVWF	r0x103D
000071   1683     bsf     0x03, 0x5        	BANKSEL	_t
000072   1303     bcf     0x03, 0x6        
000073   00a2     movwf   0x22             	MOVWF	_t
000074   01a3     clrf    0x23             	CLRF	(_t + 1)
                                           ;	.line	115; "main.c"	t = t << 8;
000075   0822     movf    0x22, 0x0        	MOVF	_t,W
000076   00a3     movwf   0x23             	MOVWF	(_t + 1)
000077   01a2     clrf    0x22             	CLRF	_t
                                           ;	.line	116; "main.c"	t = t | CCPR1L;             //ECCP combined 16 bit number formation
000078   1283     bcf     0x03, 0x5        	BANKSEL	_CCPR1L
000079   1303     bcf     0x03, 0x6        
00007a   0815     movf    0x15, 0x0        	MOVF	_CCPR1L,W
00007b   1283     bcf     0x03, 0x5        	BANKSEL	r0x103D
00007c   1303     bcf     0x03, 0x6        
00007d   00a0     movwf   0x20             	MOVWF	r0x103D
00007e   01a1     clrf    0x21             	CLRF	r0x103E
00007f   0820     movf    0x20, 0x0        	MOVF	r0x103D,W
000080   1683     bsf     0x03, 0x5        	BANKSEL	_t
000081   1303     bcf     0x03, 0x6        
000082   04a2     iorwf   0x22, 0x1        	IORWF	_t,F
000083   3000     movlw   0x00             	MOVLW	0x00
000084   04a3     iorwf   0x23, 0x1        	IORWF	(_t + 1),F
                                           ;	.line	117; "main.c"	bitfield.Capture = TRUE;
000085   1683     bsf     0x03, 0x5        	BANKSEL	_bitfield
000086   1303     bcf     0x03, 0x6        
000087   1428     bsf     0x28, 0x0        	BSF	_bitfield,0
000088   28a4     goto    0x00a4           	GOTO	_00116_DS_
                                           _00113_DS_:
                                           ;	.line	120; "main.c"	CCP1M0 = RISING;
000089   1283     bcf     0x03, 0x5        	BANKSEL	_CCP1CONbits
00008a   1303     bcf     0x03, 0x6        
00008b   1417     bsf     0x17, 0x0        	BSF	_CCP1CONbits,0
                                           ;	.line	122; "main.c"	w = 0x0000 | CCPR1H;        //ECCP result higher 8 bits
00008c   0816     movf    0x16, 0x0        	MOVF	_CCPR1H,W
00008d   1283     bcf     0x03, 0x5        	BANKSEL	r0x103D
00008e   1303     bcf     0x03, 0x6        
00008f   00a0     movwf   0x20             	MOVWF	r0x103D
000090   1683     bsf     0x03, 0x5        	BANKSEL	_w
000091   1303     bcf     0x03, 0x6        
000092   00a0     movwf   0x20             	MOVWF	_w
000093   01a1     clrf    0x21             	CLRF	(_w + 1)
                                           ;	.line	123; "main.c"	w = w << 8;
000094   0820     movf    0x20, 0x0        	MOVF	_w,W
000095   00a1     movwf   0x21             	MOVWF	(_w + 1)
000096   01a0     clrf    0x20             	CLRF	_w
                                           ;	.line	124; "main.c"	w = w | CCPR1L;             //ECCP combined 16 bit number formation
000097   1283     bcf     0x03, 0x5        	BANKSEL	_CCPR1L
000098   1303     bcf     0x03, 0x6        
000099   0815     movf    0x15, 0x0        	MOVF	_CCPR1L,W
00009a   1283     bcf     0x03, 0x5        	BANKSEL	r0x103D
00009b   1303     bcf     0x03, 0x6        
00009c   00a0     movwf   0x20             	MOVWF	r0x103D
00009d   01a1     clrf    0x21             	CLRF	r0x103E
00009e   0820     movf    0x20, 0x0        	MOVF	r0x103D,W
00009f   1683     bsf     0x03, 0x5        	BANKSEL	_w
0000a0   1303     bcf     0x03, 0x6        
0000a1   04a0     iorwf   0x20, 0x1        	IORWF	_w,F
0000a2   3000     movlw   0x00             	MOVLW	0x00
0000a3   04a1     iorwf   0x21, 0x1        	IORWF	(_w + 1),F
                                           _00116_DS_:
                                           ;	.line	130; "main.c"	int_error_cnt++;
0000a4   1683     bsf     0x03, 0x5        	BANKSEL	_int_error_cnt
0000a5   1303     bcf     0x03, 0x6        
0000a6   0aab     incf    0x2b, 0x1        	INCF	_int_error_cnt,F
                                           ;;swapping arguments (AOP_TYPEs 1/3)
                                           ;;unsigned compare: left >= lit(0x65=101), size=1
                                           ;	.line	131; "main.c"	if (int_error_cnt > 100)
0000a7   3065     movlw   0x65             	MOVLW	0x65
0000a8   022b     subwf   0x2b, 0x0        	SUBWF	_int_error_cnt,W
0000a9   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0000aa   28bb     goto    0x00bb           	GOTO	_00119_DS_
                                           ;;genSkipc:3257: created from rifx:0x7fffa7ea1670
                                           ;	.line	132; "main.c"	SP_send_error(int_err);
0000ab   3004     movlw   0x04             	MOVLW	high (_int_err + 0)
0000ac   1283     bcf     0x03, 0x5        	BANKSEL	r0x103E
0000ad   1303     bcf     0x03, 0x6        
0000ae   00a1     movwf   0x21             	MOVWF	r0x103E
0000af   3007     movlw   0x07             	MOVLW	(_int_err + 0)
0000b0   00a0     movwf   0x20             	MOVWF	r0x103D
0000b1   3080     movlw   0x80             	MOVLW	0x80
0000b2   00a2     movwf   0x22             	MOVWF	r0x103F
0000b3   0820     movf    0x20, 0x0        	MOVF	r0x103D,W
0000b4   00fe     movwf   0x7e             	MOVWF	STK01
0000b5   0821     movf    0x21, 0x0        	MOVF	r0x103E,W
0000b6   00ff     movwf   0x7f             	MOVWF	STK00
0000b7   0822     movf    0x22, 0x0        	MOVF	r0x103F,W
0000b8   118a     bcf     0x0a, 0x3        	PAGESEL	_SP_send_error
0000b9   22fe     call    0x02fe           	CALL	_SP_send_error
0000ba   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           _00119_DS_:
0000bb   1683     bsf     0x03, 0x5        	BANKSEL	___sdcc_saved_fsr
0000bc   1303     bcf     0x03, 0x6        
0000bd   082c     movf    0x2c, 0x0        	MOVF	___sdcc_saved_fsr,W
0000be   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0000bf   1303     bcf     0x03, 0x6        
0000c0   0084     movwf   0x04             	MOVWF	FSR
0000c1   0870     movf    0x70, 0x0        	MOVF	PSAVE,W
0000c2   008a     movwf   0x0a             	MOVWF	PCLATH
0000c3   0183     clrf    0x03             	CLRF	STATUS
0000c4   0e71     swapf   0x71, 0x0        	SWAPF	SSAVE,W
0000c5   0083     movwf   0x03             	MOVWF	STATUS
0000c6   0ef2     swapf   0x72, 0x1        	SWAPF	WSAVE,F
0000c7   0e72     swapf   0x72, 0x0        	SWAPF	WSAVE,W
                                           END_OF_INTERRUPT:
0000c8   0009     retfie                   	RETFIE	
                                           
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_main	code
                                           ;***
                                           ;  pBlock Stats: dbName = M
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _init
                                           ;   _dec_to_ascii
                                           ;   _SP_send
                                           ;   _dec_to_ascii
                                           ;   _SP_send
                                           ;   _init
                                           ;   _dec_to_ascii
                                           ;   _SP_send
                                           ;   _dec_to_ascii
                                           ;   _SP_send
                                           ;5 compiler assigned registers:
                                           ;   STK00
                                           ;   r0x103A
                                           ;   r0x103B
                                           ;   r0x103C
                                           ;   STK01
                                           ;; Starting pCode block
                                           S_main__main	code
                                           _main:
                                           ; 2 exit points
                                           ;	.line	138; "main.c"	init();
0002c1   118a     bcf     0x0a, 0x3        	PAGESEL	_init
0002c2   2399     call    0x0399           	CALL	_init
0002c3   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           _00147_DS_:
                                           ;	.line	142; "main.c"	if (bitfield.Capture){
0002c4   1683     bsf     0x03, 0x5        	BANKSEL	_bitfield
0002c5   1303     bcf     0x03, 0x6        
0002c6   1c28     btfss   0x28, 0x0        	BTFSS	_bitfield,0
0002c7   2af9     goto    0x02f9           	GOTO	_00145_DS_
                                           ;	.line	143; "main.c"	bitfield.Capture = FALSE;
0002c8   1028     bcf     0x28, 0x0        	BCF	_bitfield,0
                                           ;	.line	164; "main.c"	dec_to_ascii(w);
0002c9   1683     bsf     0x03, 0x5        	BANKSEL	_w
0002ca   1303     bcf     0x03, 0x6        
0002cb   0820     movf    0x20, 0x0        	MOVF	_w,W
0002cc   00ff     movwf   0x7f             	MOVWF	STK00
0002cd   0821     movf    0x21, 0x0        	MOVF	(_w + 1),W
0002ce   118a     bcf     0x0a, 0x3        	PAGESEL	_dec_to_ascii
0002cf   2165     call    0x0165           	CALL	_dec_to_ascii
0002d0   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	165; "main.c"	SP_send(tab);
0002d1   3004     movlw   0x04             	MOVLW	high (_tab + 0)
0002d2   1283     bcf     0x03, 0x5        	BANKSEL	r0x103A
0002d3   1303     bcf     0x03, 0x6        
0002d4   00a4     movwf   0x24             	MOVWF	r0x103A
0002d5   303c     movlw   0x3c             	MOVLW	(_tab + 0)
0002d6   00a3     movwf   0x23             	MOVWF	r0x103B
0002d7   3080     movlw   0x80             	MOVLW	0x80
0002d8   00a5     movwf   0x25             	MOVWF	r0x103C
0002d9   0823     movf    0x23, 0x0        	MOVF	r0x103B,W
0002da   00fe     movwf   0x7e             	MOVWF	STK01
0002db   0824     movf    0x24, 0x0        	MOVF	r0x103A,W
0002dc   00ff     movwf   0x7f             	MOVWF	STK00
0002dd   0825     movf    0x25, 0x0        	MOVF	r0x103C,W
0002de   118a     bcf     0x0a, 0x3        	PAGESEL	_SP_send
0002df   23ca     call    0x03ca           	CALL	_SP_send
0002e0   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	166; "main.c"	dec_to_ascii(t);
0002e1   1683     bsf     0x03, 0x5        	BANKSEL	_t
0002e2   1303     bcf     0x03, 0x6        
0002e3   0822     movf    0x22, 0x0        	MOVF	_t,W
0002e4   00ff     movwf   0x7f             	MOVWF	STK00
0002e5   0823     movf    0x23, 0x0        	MOVF	(_t + 1),W
0002e6   118a     bcf     0x0a, 0x3        	PAGESEL	_dec_to_ascii
0002e7   2165     call    0x0165           	CALL	_dec_to_ascii
0002e8   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	167; "main.c"	SP_send(enter);
0002e9   3004     movlw   0x04             	MOVLW	high (_enter + 0)
0002ea   1283     bcf     0x03, 0x5        	BANKSEL	r0x103A
0002eb   1303     bcf     0x03, 0x6        
0002ec   00a4     movwf   0x24             	MOVWF	r0x103A
0002ed   303e     movlw   0x3e             	MOVLW	(_enter + 0)
0002ee   00a3     movwf   0x23             	MOVWF	r0x103B
0002ef   3080     movlw   0x80             	MOVLW	0x80
0002f0   00a5     movwf   0x25             	MOVWF	r0x103C
0002f1   0823     movf    0x23, 0x0        	MOVF	r0x103B,W
0002f2   00fe     movwf   0x7e             	MOVWF	STK01
0002f3   0824     movf    0x24, 0x0        	MOVF	r0x103A,W
0002f4   00ff     movwf   0x7f             	MOVWF	STK00
0002f5   0825     movf    0x25, 0x0        	MOVF	r0x103C,W
0002f6   118a     bcf     0x0a, 0x3        	PAGESEL	_SP_send
0002f7   23ca     call    0x03ca           	CALL	_SP_send
0002f8   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           _00145_DS_:
                                           ;	.line	185; "main.c"	int_error_cnt = 0;
0002f9   1683     bsf     0x03, 0x5        	BANKSEL	_int_error_cnt
0002fa   1303     bcf     0x03, 0x6        
0002fb   01ab     clrf    0x2b             	CLRF	_int_error_cnt
0002fc   2ac4     goto    0x02c4           	GOTO	_00147_DS_
0002fd   0008     return                   	RETURN	
                                           ; exit point of _main
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   __gptrget1
                                           ;   __gptrget1
                                           ;10 compiler assigned registers:
                                           ;   r0x101D
                                           ;   STK00
                                           ;   r0x101E
                                           ;   STK01
                                           ;   r0x101F
                                           ;   r0x1020
                                           ;   r0x1021
                                           ;   r0x1022
                                           ;   r0x1023
                                           ;   r0x1024
                                           ;; Starting pCode block
                                           S_main__SP_send_error	code
                                           _SP_send_error:
                                           ; 2 exit points
                                           ;	.line	244; "main.c"	void SP_send_error(char str[])
0002fe   1283     bcf     0x03, 0x5        	BANKSEL	r0x101D
0002ff   1303     bcf     0x03, 0x6        
000300   00bb     movwf   0x3b             	MOVWF	r0x101D
000301   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000302   00ba     movwf   0x3a             	MOVWF	r0x101E
000303   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000304   00b9     movwf   0x39             	MOVWF	r0x101F
                                           ;	.line	247; "main.c"	GIE = FALSE;	// Disable all interrupts.
000305   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
000306   1303     bcf     0x03, 0x6        
000307   138b     bcf     0x0b, 0x7        	BCF	_INTCONbits,7
                                           ;	.line	248; "main.c"	for(i=0; str[i] != '\0'; i++)
000308   1283     bcf     0x03, 0x5        	BANKSEL	r0x1020
000309   1303     bcf     0x03, 0x6        
00030a   01bc     clrf    0x3c             	CLRF	r0x1020
                                           _00193_DS_:
00030b   1283     bcf     0x03, 0x5        	BANKSEL	r0x1020
00030c   1303     bcf     0x03, 0x6        
00030d   083c     movf    0x3c, 0x0        	MOVF	r0x1020,W
00030e   0739     addwf   0x39, 0x0        	ADDWF	r0x101F,W
00030f   00bd     movwf   0x3d             	MOVWF	r0x1021
000310   083a     movf    0x3a, 0x0        	MOVF	r0x101E,W
000311   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000312   3e01     addlw   0x01             	ADDLW	0x01
000313   00be     movwf   0x3e             	MOVWF	r0x1022
000314   083b     movf    0x3b, 0x0        	MOVF	r0x101D,W
000315   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000316   3e01     addlw   0x01             	ADDLW	0x01
000317   00bf     movwf   0x3f             	MOVWF	r0x1023
000318   083d     movf    0x3d, 0x0        	MOVF	r0x1021,W
000319   00fe     movwf   0x7e             	MOVWF	STK01
00031a   083e     movf    0x3e, 0x0        	MOVF	r0x1022,W
00031b   00ff     movwf   0x7f             	MOVWF	STK00
00031c   083f     movf    0x3f, 0x0        	MOVF	r0x1023,W
00031d   118a     bcf     0x0a, 0x3        	PAGESEL	__gptrget1
00031e   2333     call    0x0333           	CALL	__gptrget1
00031f   118a     bcf     0x0a, 0x3        	PAGESEL	$
000320   1283     bcf     0x03, 0x5        	BANKSEL	r0x1024
000321   1303     bcf     0x03, 0x6        
000322   00c0     movwf   0x40             	MOVWF	r0x1024
000323   0840     movf    0x40, 0x0        	MOVF	r0x1024,W
000324   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000325   2b32     goto    0x0332           	GOTO	_00195_DS_
                                           ;	.line	250; "main.c"	TXREG=str[i];	// Add a character to the output buffer
000326   0840     movf    0x40, 0x0        	MOVF	r0x1024,W
000327   1283     bcf     0x03, 0x5        	BANKSEL	_TXREG
000328   1303     bcf     0x03, 0x6        
000329   0099     movwf   0x19             	MOVWF	_TXREG
                                           _00188_DS_:
                                           ;	.line	251; "main.c"	while(!TXIF);	// Wait while the output buffer is full
00032a   1283     bcf     0x03, 0x5        	BANKSEL	_PIR1bits
00032b   1303     bcf     0x03, 0x6        
00032c   1e0c     btfss   0x0c, 0x4        	BTFSS	_PIR1bits,4
00032d   2b2a     goto    0x032a           	GOTO	_00188_DS_
                                           ;	.line	248; "main.c"	for(i=0; str[i] != '\0'; i++)
00032e   1283     bcf     0x03, 0x5        	BANKSEL	r0x1020
00032f   1303     bcf     0x03, 0x6        
000330   0abc     incf    0x3c, 0x1        	INCF	r0x1020,F
000331   2b0b     goto    0x030b           	GOTO	_00193_DS_
                                           _00195_DS_:
000332   0008     return                   	RETURN	
                                           ; exit point of _SP_send_error
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   __gptrget1
                                           ;   _circBufPush
                                           ;   __gptrget1
                                           ;   _circBufPush
                                           ;10 compiler assigned registers:
                                           ;   r0x102A
                                           ;   STK00
                                           ;   r0x102B
                                           ;   STK01
                                           ;   r0x102C
                                           ;   r0x102D
                                           ;   r0x102E
                                           ;   r0x102F
                                           ;   r0x1030
                                           ;   r0x1031
                                           ;; Starting pCode block
                                           S_main__SP_send	code
                                           _SP_send:
                                           ; 2 exit points
                                           ;	.line	236; "main.c"	void SP_send(char str[]){
0003ca   1283     bcf     0x03, 0x5        	BANKSEL	r0x102A
0003cb   1303     bcf     0x03, 0x6        
0003cc   00b3     movwf   0x33             	MOVWF	r0x102A
0003cd   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0003ce   00b2     movwf   0x32             	MOVWF	r0x102B
0003cf   087e     movf    0x7e, 0x0        	MOVF	STK01,W
0003d0   00b1     movwf   0x31             	MOVWF	r0x102C
                                           ;	.line	238; "main.c"	for(i=0; str[i] != '\0'; i++)
0003d1   01b4     clrf    0x34             	CLRF	r0x102D
                                           _00181_DS_:
0003d2   1283     bcf     0x03, 0x5        	BANKSEL	r0x102D
0003d3   1303     bcf     0x03, 0x6        
0003d4   0834     movf    0x34, 0x0        	MOVF	r0x102D,W
0003d5   0731     addwf   0x31, 0x0        	ADDWF	r0x102C,W
0003d6   00b5     movwf   0x35             	MOVWF	r0x102E
0003d7   0832     movf    0x32, 0x0        	MOVF	r0x102B,W
0003d8   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0003d9   3e01     addlw   0x01             	ADDLW	0x01
0003da   00b6     movwf   0x36             	MOVWF	r0x102F
0003db   0833     movf    0x33, 0x0        	MOVF	r0x102A,W
0003dc   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0003dd   3e01     addlw   0x01             	ADDLW	0x01
0003de   00b7     movwf   0x37             	MOVWF	r0x1030
0003df   0835     movf    0x35, 0x0        	MOVF	r0x102E,W
0003e0   00fe     movwf   0x7e             	MOVWF	STK01
0003e1   0836     movf    0x36, 0x0        	MOVF	r0x102F,W
0003e2   00ff     movwf   0x7f             	MOVWF	STK00
0003e3   0837     movf    0x37, 0x0        	MOVF	r0x1030,W
0003e4   118a     bcf     0x0a, 0x3        	PAGESEL	__gptrget1
0003e5   2333     call    0x0333           	CALL	__gptrget1
0003e6   118a     bcf     0x0a, 0x3        	PAGESEL	$
0003e7   1283     bcf     0x03, 0x5        	BANKSEL	r0x1031
0003e8   1303     bcf     0x03, 0x6        
0003e9   00b8     movwf   0x38             	MOVWF	r0x1031
0003ea   0838     movf    0x38, 0x0        	MOVF	r0x1031,W
0003eb   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0003ec   2bf5     goto    0x03f5           	GOTO	_00183_DS_
                                           ;	.line	240; "main.c"	circBufPush(str[i]);
0003ed   0838     movf    0x38, 0x0        	MOVF	r0x1031,W
0003ee   118a     bcf     0x0a, 0x3        	PAGESEL	_circBufPush
0003ef   2232     call    0x0232           	CALL	_circBufPush
0003f0   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	238; "main.c"	for(i=0; str[i] != '\0'; i++)
0003f1   1283     bcf     0x03, 0x5        	BANKSEL	r0x102D
0003f2   1303     bcf     0x03, 0x6        
0003f3   0ab4     incf    0x34, 0x1        	INCF	r0x102D,F
0003f4   2bd2     goto    0x03d2           	GOTO	_00181_DS_
                                           _00183_DS_:
0003f5   0008     return                   	RETURN	
                                           ; exit point of _SP_send
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   __moduint
                                           ;   __divuint
                                           ;   _circBufPush
                                           ;   __moduint
                                           ;   __divuint
                                           ;   _circBufPush
                                           ;11 compiler assigned registers:
                                           ;   r0x1032
                                           ;   STK00
                                           ;   r0x1033
                                           ;   r0x1034
                                           ;   r0x1035
                                           ;   r0x1036
                                           ;   STK02
                                           ;   STK01
                                           ;   r0x1037
                                           ;   r0x1038
                                           ;   r0x1039
                                           ;; Starting pCode block
                                           S_main__dec_to_ascii	code
                                           _dec_to_ascii:
                                           ; 2 exit points
                                           ;	.line	218; "main.c"	void dec_to_ascii(unsigned short dec)
000165   1283     bcf     0x03, 0x5        	BANKSEL	r0x1032
000166   1303     bcf     0x03, 0x6        
000167   00ac     movwf   0x2c             	MOVWF	r0x1032
000168   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000169   00ab     movwf   0x2b             	MOVWF	r0x1033
                                           ;	.line	223; "main.c"	for (i=0; dec!=0 || i==0; i++)
00016a   01ad     clrf    0x2d             	CLRF	r0x1034
                                           _00167_DS_:
00016b   1283     bcf     0x03, 0x5        	BANKSEL	r0x1033
00016c   1303     bcf     0x03, 0x6        
00016d   082b     movf    0x2b, 0x0        	MOVF	r0x1033,W
00016e   042c     iorwf   0x2c, 0x0        	IORWF	r0x1032,W
00016f   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000170   2974     goto    0x0174           	GOTO	_00166_DS_
000171   082d     movf    0x2d, 0x0        	MOVF	r0x1034,W
000172   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000173   29bc     goto    0x01bc           	GOTO	_00174_DS_
                                           _00166_DS_:
                                           ;	.line	225; "main.c"	number[i]=(dec % 10);
000174   1283     bcf     0x03, 0x5        	BANKSEL	r0x1034
000175   1303     bcf     0x03, 0x6        
000176   082d     movf    0x2d, 0x0        	MOVF	r0x1034,W
000177   3e41     addlw   0x41             	ADDLW	(_dec_to_ascii_number_1_20 + 0)
000178   00ae     movwf   0x2e             	MOVWF	r0x1035
000179   3000     movlw   0x00             	MOVLW	high (_dec_to_ascii_number_1_20 + 0)
00017a   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00017b   3e01     addlw   0x01             	ADDLW	0x01
00017c   00af     movwf   0x2f             	MOVWF	r0x1036
00017d   300a     movlw   0x0a             	MOVLW	0x0a
00017e   00fd     movwf   0x7d             	MOVWF	STK02
00017f   3000     movlw   0x00             	MOVLW	0x00
000180   00fe     movwf   0x7e             	MOVWF	STK01
000181   082b     movf    0x2b, 0x0        	MOVF	r0x1033,W
000182   00ff     movwf   0x7f             	MOVWF	STK00
000183   082c     movf    0x2c, 0x0        	MOVF	r0x1032,W
000184   118a     bcf     0x0a, 0x3        	PAGESEL	__moduint
000185   227e     call    0x027e           	CALL	__moduint
000186   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;;1	MOVWF	r0x1037
000187   087f     movf    0x7f, 0x0        	MOVF	STK00,W
                                           ;;1	MOVWF	r0x1038
000188   1283     bcf     0x03, 0x5        	BANKSEL	r0x1039
000189   1303     bcf     0x03, 0x6        
00018a   00b0     movwf   0x30             	MOVWF	r0x1039
00018b   082e     movf    0x2e, 0x0        	MOVF	r0x1035,W
00018c   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00018d   1303     bcf     0x03, 0x6        
00018e   0084     movwf   0x04             	MOVWF	FSR
00018f   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000190   1283     bcf     0x03, 0x5        	BANKSEL	r0x1036
000191   1303     bcf     0x03, 0x6        
000192   182f     btfsc   0x2f, 0x0        	BTFSC	r0x1036,0
000193   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000194   0830     movf    0x30, 0x0        	MOVF	r0x1039,W
000195   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000196   1303     bcf     0x03, 0x6        
000197   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	226; "main.c"	dec /=10;
000198   300a     movlw   0x0a             	MOVLW	0x0a
000199   00fd     movwf   0x7d             	MOVWF	STK02
00019a   3000     movlw   0x00             	MOVLW	0x00
00019b   00fe     movwf   0x7e             	MOVWF	STK01
00019c   1283     bcf     0x03, 0x5        	BANKSEL	r0x1033
00019d   1303     bcf     0x03, 0x6        
00019e   082b     movf    0x2b, 0x0        	MOVF	r0x1033,W
00019f   00ff     movwf   0x7f             	MOVWF	STK00
0001a0   082c     movf    0x2c, 0x0        	MOVF	r0x1032,W
0001a1   118a     bcf     0x0a, 0x3        	PAGESEL	__divuint
0001a2   21e3     call    0x01e3           	CALL	__divuint
0001a3   118a     bcf     0x0a, 0x3        	PAGESEL	$
0001a4   1283     bcf     0x03, 0x5        	BANKSEL	r0x1032
0001a5   1303     bcf     0x03, 0x6        
0001a6   00ac     movwf   0x2c             	MOVWF	r0x1032
0001a7   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0001a8   00ab     movwf   0x2b             	MOVWF	r0x1033
                                           ;	.line	227; "main.c"	number[i] +=48;
0001a9   3030     movlw   0x30             	MOVLW	0x30
0001aa   07b0     addwf   0x30, 0x1        	ADDWF	r0x1039,F
0001ab   082e     movf    0x2e, 0x0        	MOVF	r0x1035,W
0001ac   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0001ad   1303     bcf     0x03, 0x6        
0001ae   0084     movwf   0x04             	MOVWF	FSR
0001af   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0001b0   1283     bcf     0x03, 0x5        	BANKSEL	r0x1036
0001b1   1303     bcf     0x03, 0x6        
0001b2   182f     btfsc   0x2f, 0x0        	BTFSC	r0x1036,0
0001b3   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0001b4   0830     movf    0x30, 0x0        	MOVF	r0x1039,W
0001b5   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0001b6   1303     bcf     0x03, 0x6        
0001b7   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	223; "main.c"	for (i=0; dec!=0 || i==0; i++)
0001b8   1283     bcf     0x03, 0x5        	BANKSEL	r0x1034
0001b9   1303     bcf     0x03, 0x6        
0001ba   0aad     incf    0x2d, 0x1        	INCF	r0x1034,F
0001bb   296b     goto    0x016b           	GOTO	_00167_DS_
                                           _00174_DS_:
                                           ;	.line	229; "main.c"	while (i--)
0001bc   1283     bcf     0x03, 0x5        	BANKSEL	r0x1034
0001bd   1303     bcf     0x03, 0x6        
0001be   082d     movf    0x2d, 0x0        	MOVF	r0x1034,W
0001bf   00ab     movwf   0x2b             	MOVWF	r0x1033
                                           _00162_DS_:
0001c0   1283     bcf     0x03, 0x5        	BANKSEL	r0x1033
0001c1   1303     bcf     0x03, 0x6        
0001c2   082b     movf    0x2b, 0x0        	MOVF	r0x1033,W
0001c3   00ac     movwf   0x2c             	MOVWF	r0x1032
0001c4   03ab     decf    0x2b, 0x1        	DECF	r0x1033,F
0001c5   082c     movf    0x2c, 0x0        	MOVF	r0x1032,W
0001c6   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0001c7   29e2     goto    0x01e2           	GOTO	_00169_DS_
                                           ;	.line	231; "main.c"	circBufPush(number[i]);	// Add a character to the output buffer
0001c8   082b     movf    0x2b, 0x0        	MOVF	r0x1033,W
0001c9   3e41     addlw   0x41             	ADDLW	(_dec_to_ascii_number_1_20 + 0)
0001ca   00ac     movwf   0x2c             	MOVWF	r0x1032
0001cb   3000     movlw   0x00             	MOVLW	high (_dec_to_ascii_number_1_20 + 0)
0001cc   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0001cd   3e01     addlw   0x01             	ADDLW	0x01
0001ce   00ad     movwf   0x2d             	MOVWF	r0x1034
0001cf   082c     movf    0x2c, 0x0        	MOVF	r0x1032,W
0001d0   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0001d1   1303     bcf     0x03, 0x6        
0001d2   0084     movwf   0x04             	MOVWF	FSR
0001d3   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0001d4   1283     bcf     0x03, 0x5        	BANKSEL	r0x1034
0001d5   1303     bcf     0x03, 0x6        
0001d6   182d     btfsc   0x2d, 0x0        	BTFSC	r0x1034,0
0001d7   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0001d8   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0001d9   1303     bcf     0x03, 0x6        
0001da   0800     movf    0x00, 0x0        	MOVF	INDF,W
0001db   1283     bcf     0x03, 0x5        	BANKSEL	r0x1035
0001dc   1303     bcf     0x03, 0x6        
0001dd   00ae     movwf   0x2e             	MOVWF	r0x1035
0001de   118a     bcf     0x0a, 0x3        	PAGESEL	_circBufPush
0001df   2232     call    0x0232           	CALL	_circBufPush
0001e0   118a     bcf     0x0a, 0x3        	PAGESEL	$
0001e1   29c0     goto    0x01c0           	GOTO	_00162_DS_
                                           _00169_DS_:
0001e2   0008     return                   	RETURN	
                                           ; exit point of _dec_to_ascii
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _SP_send_error
                                           ;   _SP_send_error
                                           ;7 compiler assigned registers:
                                           ;   r0x1025
                                           ;   r0x1026
                                           ;   r0x1027
                                           ;   r0x1028
                                           ;   r0x1029
                                           ;   STK01
                                           ;   STK00
                                           ;; Starting pCode block
                                           S_main__circBufPush	code
                                           _circBufPush:
                                           ; 2 exit points
                                           ;	.line	189; "main.c"	int circBufPush(uint8_t data){
000232   1283     bcf     0x03, 0x5        	BANKSEL	r0x1025
000233   1303     bcf     0x03, 0x6        
000234   00a6     movwf   0x26             	MOVWF	r0x1025
                                           ;	.line	190; "main.c"	uint8_t next = buf_head + 1;
000235   1683     bsf     0x03, 0x5        	BANKSEL	_buf_head
000236   1303     bcf     0x03, 0x6        
000237   0a29     incf    0x29, 0x0        	INCF	_buf_head,W
000238   1283     bcf     0x03, 0x5        	BANKSEL	r0x1026
000239   1303     bcf     0x03, 0x6        
00023a   00a7     movwf   0x27             	MOVWF	r0x1026
                                           ;;unsigned compare: left < lit(0x10=16), size=1
                                           ;	.line	191; "main.c"	if (next >= BUF_SIZE)
00023b   3010     movlw   0x10             	MOVLW	0x10
                                           ;	.line	192; "main.c"	next = 0;
00023c   0227     subwf   0x27, 0x0        	SUBWF	r0x1026,W
                                           ;	.line	195; "main.c"	if (next == buf_tail){
00023d   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00023e   01a7     clrf    0x27             	CLRF	r0x1026
00023f   1683     bsf     0x03, 0x5        	BANKSEL	_buf_tail
000240   1303     bcf     0x03, 0x6        
000241   082a     movf    0x2a, 0x0        	MOVF	_buf_tail,W
000242   1283     bcf     0x03, 0x5        	BANKSEL	r0x1026
000243   1303     bcf     0x03, 0x6        
000244   0627     xorwf   0x27, 0x0        	XORWF	r0x1026,W
000245   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000246   2a59     goto    0x0259           	GOTO	_00155_DS_
                                           ;	.line	196; "main.c"	SP_send_error(buf_err);
000247   3003     movlw   0x03             	MOVLW	high (_buf_err + 0)
000248   00a9     movwf   0x29             	MOVWF	r0x1027
000249   30f6     movlw   0xf6             	MOVLW	(_buf_err + 0)
00024a   00a8     movwf   0x28             	MOVWF	r0x1028
00024b   3080     movlw   0x80             	MOVLW	0x80
00024c   00aa     movwf   0x2a             	MOVWF	r0x1029
00024d   0828     movf    0x28, 0x0        	MOVF	r0x1028,W
00024e   00fe     movwf   0x7e             	MOVWF	STK01
00024f   0829     movf    0x29, 0x0        	MOVF	r0x1027,W
000250   00ff     movwf   0x7f             	MOVWF	STK00
000251   082a     movf    0x2a, 0x0        	MOVF	r0x1029,W
000252   118a     bcf     0x0a, 0x3        	PAGESEL	_SP_send_error
000253   22fe     call    0x02fe           	CALL	_SP_send_error
000254   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	197; "main.c"	return -1;  // quit with an error
000255   30ff     movlw   0xff             	MOVLW	0xff
000256   00ff     movwf   0x7f             	MOVWF	STK00
000257   30ff     movlw   0xff             	MOVLW	0xff
000258   2a7d     goto    0x027d           	GOTO	_00156_DS_
                                           _00155_DS_:
                                           ;	.line	200; "main.c"	buf[buf_head] = data;
000259   1683     bsf     0x03, 0x5        	BANKSEL	_buf_head
00025a   1303     bcf     0x03, 0x6        
00025b   0829     movf    0x29, 0x0        	MOVF	_buf_head,W
00025c   3e45     addlw   0x45             	ADDLW	(_buf + 0)
00025d   1283     bcf     0x03, 0x5        	BANKSEL	r0x1028
00025e   1303     bcf     0x03, 0x6        
00025f   00a8     movwf   0x28             	MOVWF	r0x1028
000260   3000     movlw   0x00             	MOVLW	high (_buf + 0)
000261   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000262   3e01     addlw   0x01             	ADDLW	0x01
000263   00a9     movwf   0x29             	MOVWF	r0x1027
000264   0828     movf    0x28, 0x0        	MOVF	r0x1028,W
000265   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000266   1303     bcf     0x03, 0x6        
000267   0084     movwf   0x04             	MOVWF	FSR
000268   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000269   1283     bcf     0x03, 0x5        	BANKSEL	r0x1027
00026a   1303     bcf     0x03, 0x6        
00026b   1829     btfsc   0x29, 0x0        	BTFSC	r0x1027,0
00026c   1783     bsf     0x03, 0x7        	BSF	STATUS,7
00026d   0826     movf    0x26, 0x0        	MOVF	r0x1025,W
00026e   1283     bcf     0x03, 0x5        	BANKSEL	INDF
00026f   1303     bcf     0x03, 0x6        
000270   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	201; "main.c"	buf_head = next;
000271   1283     bcf     0x03, 0x5        	BANKSEL	r0x1026
000272   1303     bcf     0x03, 0x6        
000273   0827     movf    0x27, 0x0        	MOVF	r0x1026,W
000274   1683     bsf     0x03, 0x5        	BANKSEL	_buf_head
000275   1303     bcf     0x03, 0x6        
000276   00a9     movwf   0x29             	MOVWF	_buf_head
                                           ;	.line	202; "main.c"	TXIE = 1;       //Enables the EUSART transmit interrupt
000277   1683     bsf     0x03, 0x5        	BANKSEL	_PIE1bits
000278   1303     bcf     0x03, 0x6        
000279   160c     bsf     0x0c, 0x4        	BSF	_PIE1bits,4
                                           ;	.line	203; "main.c"	return 0;
00027a   3000     movlw   0x00             	MOVLW	0x00
00027b   00ff     movwf   0x7f             	MOVWF	STK00
00027c   3000     movlw   0x00             	MOVLW	0x00
                                           _00156_DS_:
00027d   0008     return                   	RETURN	
                                           ; exit point of _circBufPush
                                           
                                           
                                           ;	code size estimation:
                                           ;	  359+  112 =   471 instructions ( 1166 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.0 #9615 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"init.c"
                                           	list	p=16f690
                                           	radix dec
                                           	include "p16f690.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F690 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_PWM1CONbits
                                           	extern	_ECCPASbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_OSCCONbits
                                           	extern	_OSCTUNEbits
                                           	extern	_MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSPSTATbits
                                           	extern	_WPUbits
                                           	extern	_WPUAbits
                                           	extern	_IOCbits
                                           	extern	_IOCAbits
                                           	extern	_WDTCONbits
                                           	extern	_TXSTAbits
                                           	extern	_SPBRGbits
                                           	extern	_SPBRGHbits
                                           	extern	_BAUDCTLbits
                                           	extern	_ADCON1bits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_VRCONbits
                                           	extern	_CM1CON0bits
                                           	extern	_CM2CON0bits
                                           	extern	_CM2CON1bits
                                           	extern	_ANSELbits
                                           	extern	_ANSELHbits
                                           	extern	_EECON1bits
                                           	extern	_PSTRCONbits
                                           	extern	_SRCONbits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_PWM1CON
                                           	extern	_ECCPAS
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_OSCCON
                                           	extern	_OSCTUNE
                                           	extern	_PR2
                                           	extern	_MSK
                                           	extern	_SSPADD
                                           	extern	_SSPMSK
                                           	extern	_SSPSTAT
                                           	extern	_WPU
                                           	extern	_WPUA
                                           	extern	_IOC
                                           	extern	_IOCA
                                           	extern	_WDTCON
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_BAUDCTL
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDAT
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_VRCON
                                           	extern	_CM1CON0
                                           	extern	_CM2CON0
                                           	extern	_CM2CON1
                                           	extern	_ANSEL
                                           	extern	_ANSELH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_PSTRCON
                                           	extern	_SRCON
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_init
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_init	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;; Starting pCode block
                                           S_init__init	code
                                           _init:
                                           ; 2 exit points
                                           ;	.line	8; "init.c"	ADC2_TRIS = 1;
000399   1683     bsf     0x03, 0x5        	BANKSEL	_TRISAbits
00039a   1303     bcf     0x03, 0x6        
00039b   1505     bsf     0x05, 0x2        	BSF	_TRISAbits,2
                                           ;	.line	9; "init.c"	ADC4_TRIS = 1;
00039c   1605     bsf     0x05, 0x4        	BSF	_TRISAbits,4
                                           ;	.line	11; "init.c"	RCIN_TRIS=1;            //Input
00039d   1687     bsf     0x07, 0x5        	BSF	_TRISCbits,5
                                           ;	.line	13; "init.c"	TX_TRIS=0;               // These need to be 0 for USART to work
00039e   1386     bcf     0x06, 0x7        	BCF	_TRISBbits,7
                                           ;	.line	14; "init.c"	RX_TRIS=1;               // These need to be 1 for USART to work
00039f   1686     bsf     0x06, 0x5        	BSF	_TRISBbits,5
                                           ;	.line	15; "init.c"	ADCON1=0x50;             //ADC Settings
0003a0   3050     movlw   0x50             	MOVLW	0x50
0003a1   009f     movwf   0x1f             	MOVWF	_ADCON1
                                           ;	.line	16; "init.c"	ANS11=0;                 // Turn off Analog input it necessary to function serial port RX
0003a2   1283     bcf     0x03, 0x5        	BANKSEL	_ANSELHbits
0003a3   1703     bsf     0x03, 0x6        
0003a4   119f     bcf     0x1f, 0x3        	BCF	_ANSELHbits,3
                                           ;	.line	17; "init.c"	ANS10=0;
0003a5   111f     bcf     0x1f, 0x2        	BCF	_ANSELHbits,2
                                           ;	.line	18; "init.c"	ANS7=0;
0003a6   139e     bcf     0x1e, 0x7        	BCF	_ANSELbits,7
                                           ;	.line	19; "init.c"	ANS8=0;
0003a7   101f     bcf     0x1f, 0x0        	BCF	_ANSELHbits,0
                                           ;	.line	20; "init.c"	ANS9=0;
0003a8   109f     bcf     0x1f, 0x1        	BCF	_ANSELHbits,1
                                           ;	.line	21; "init.c"	ANS4=0;
0003a9   121e     bcf     0x1e, 0x4        	BCF	_ANSELbits,4
                                           ;	.line	22; "init.c"	ANS2=1;                      //Zapnuti Analogovych vstupu
0003aa   151e     bsf     0x1e, 0x2        	BSF	_ANSELbits,2
                                           ;	.line	23; "init.c"	ANS3=1;
0003ab   159e     bsf     0x1e, 0x3        	BSF	_ANSELbits,3
                                           ;	.line	26; "init.c"	SPBRG=8;                // Baud Rate
0003ac   3008     movlw   0x08             	MOVLW	0x08
0003ad   1683     bsf     0x03, 0x5        	BANKSEL	_SPBRG
0003ae   1303     bcf     0x03, 0x6        
0003af   0099     movwf   0x19             	MOVWF	_SPBRG
                                           ;	.line	27; "init.c"	BRGH=1;                 // 115.2k
0003b0   1518     bsf     0x18, 0x2        	BSF	_TXSTAbits,2
                                           ;	.line	28; "init.c"	BRG16=1;
0003b1   159b     bsf     0x1b, 0x3        	BSF	_BAUDCTLbits,3
                                           ;	.line	30; "init.c"	TXEN=1;			// Enable transmission mode
0003b2   1698     bsf     0x18, 0x5        	BSF	_TXSTAbits,5
                                           ;	.line	31; "init.c"	SYNC=0;			// Disable Synchronous/Enable Asynchronous
0003b3   1218     bcf     0x18, 0x4        	BCF	_TXSTAbits,4
                                           ;	.line	32; "init.c"	SPEN=1;			// Enable serial port
0003b4   1283     bcf     0x03, 0x5        	BANKSEL	_RCSTAbits
0003b5   1303     bcf     0x03, 0x6        
0003b6   1798     bsf     0x18, 0x7        	BSF	_RCSTAbits,7
                                           ;	.line	46; "init.c"	CCP1CON = 5; // Setup ENHANCED CAPTURE MODULE
0003b7   3005     movlw   0x05             	MOVLW	0x05
0003b8   0097     movwf   0x17             	MOVWF	_CCP1CON
                                           ;	.line	47; "init.c"	CCP1IE = 0;     // ENHANCED CAPTURE MODULE Interrupt Disabled
0003b9   1683     bsf     0x03, 0x5        	BANKSEL	_PIE1bits
0003ba   1303     bcf     0x03, 0x6        
0003bb   110c     bcf     0x0c, 0x2        	BCF	_PIE1bits,2
                                           ;	.line	53; "init.c"	T1CON = 0;  // TIMER1 presccaler 1
0003bc   1283     bcf     0x03, 0x5        	BANKSEL	_T1CON
0003bd   1303     bcf     0x03, 0x6        
0003be   0190     clrf    0x10             	CLRF	_T1CON
                                           ;	.line	55; "init.c"	PEIE = 1;       // Enable peripheral interrupts.
0003bf   170b     bsf     0x0b, 0x6        	BSF	_INTCONbits,6
                                           ;	.line	56; "init.c"	GIE = 1;	// Enable all interrupts.
0003c0   178b     bsf     0x0b, 0x7        	BSF	_INTCONbits,7
                                           ;	.line	59; "init.c"	TMR1H = 0;
0003c1   018f     clrf    0x0f             	CLRF	_TMR1H
                                           ;	.line	60; "init.c"	TMR1L = 0;
0003c2   018e     clrf    0x0e             	CLRF	_TMR1L
                                           ;	.line	61; "init.c"	CCP1IE = 1;
0003c3   1683     bsf     0x03, 0x5        	BANKSEL	_PIE1bits
0003c4   1303     bcf     0x03, 0x6        
0003c5   150c     bsf     0x0c, 0x2        	BSF	_PIE1bits,2
                                           ;	.line	62; "init.c"	TMR1ON = 1;
0003c6   1283     bcf     0x03, 0x5        	BANKSEL	_T1CONbits
0003c7   1303     bcf     0x03, 0x6        
0003c8   1410     bsf     0x10, 0x0        	BSF	_T1CONbits,0
0003c9   0008     return                   	RETURN	
                                           ; exit point of _init
                                           
                                           
                                           ;	code size estimation:
                                           ;	   33+    8 =    41 instructions (   98 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.0 #9615 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"str.c"
                                           	list	p=16f690
                                           	radix dec
                                           	include "p16f690.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F690 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_str	code
                                           
                                           ;	code size estimation:
                                           ;	    0+    0 =     0 instructions (    0 byte)
                                           
                                           	end
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F690 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST

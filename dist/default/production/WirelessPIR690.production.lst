gplink-1.4.0 #1107 (May  9 2015)
Copyright (c) 1998-2014 gputils project
Listing File Generated: 1-5-2017  21:37:40
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.0 #9615 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"main.c"
                                           	list	p=16f690
                                           	radix dec
                                           	include "p16f690.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F690 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; config word(s)
                                           ;--------------------------------------------------------
002007   3fd4     addlw   0xd4             	__config 0x3fd4
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_init
                                           	extern	__moduint
                                           	extern	__divuint
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_PWM1CONbits
                                           	extern	_ECCPASbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_OSCCONbits
                                           	extern	_OSCTUNEbits
                                           	extern	_MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSPSTATbits
                                           	extern	_WPUbits
                                           	extern	_WPUAbits
                                           	extern	_IOCbits
                                           	extern	_IOCAbits
                                           	extern	_WDTCONbits
                                           	extern	_TXSTAbits
                                           	extern	_SPBRGbits
                                           	extern	_SPBRGHbits
                                           	extern	_BAUDCTLbits
                                           	extern	_ADCON1bits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_VRCONbits
                                           	extern	_CM1CON0bits
                                           	extern	_CM2CON0bits
                                           	extern	_CM2CON1bits
                                           	extern	_ANSELbits
                                           	extern	_ANSELHbits
                                           	extern	_EECON1bits
                                           	extern	_PSTRCONbits
                                           	extern	_SRCONbits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_PWM1CON
                                           	extern	_ECCPAS
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_OSCCON
                                           	extern	_OSCTUNE
                                           	extern	_PR2
                                           	extern	_MSK
                                           	extern	_SSPADD
                                           	extern	_SSPMSK
                                           	extern	_SSPSTAT
                                           	extern	_WPU
                                           	extern	_WPUA
                                           	extern	_IOC
                                           	extern	_IOCA
                                           	extern	_WDTCON
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_BAUDCTL
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDAT
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_VRCON
                                           	extern	_CM1CON0
                                           	extern	_CM2CON0
                                           	extern	_CM2CON1
                                           	extern	_ANSEL
                                           	extern	_ANSELH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_PSTRCON
                                           	extern	_SRCON
                                           	extern	___sdcc_saved_fsr
                                           	extern	__gptrget1
                                           	extern	__sdcc_gsinit_startup
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_SP_send_error
                                           	global	_SP_send
                                           	global	_dec_to_ascii
                                           	global	_circBufPush
                                           	global	_receive_intr
                                           	global	_main
                                           	global	_bitfield
                                           	global	_w
                                           	global	_t
                                           	global	_w1
                                           	global	_t1
                                           	global	_buf
                                           	global	_buf_head
                                           	global	_buf_tail
                                           	global	_int_error_cnt
                                           	global	_strV0
                                           	global	_strV1
                                           	global	_strVF
                                           	global	_strw
                                           	global	_strt
                                           	global	_strw1
                                           	global	_strt1
                                           	global	_tab
                                           	global	_enter
                                           	global	_sync
                                           	global	_int_err
                                           	global	_buf_err
                                           
                                           	global PSAVE
                                           	global SSAVE
                                           	global WSAVE
                                           	global STK12
                                           	global STK11
                                           	global STK10
                                           	global STK09
                                           	global STK08
                                           	global STK07
                                           	global STK06
                                           	global STK05
                                           	global STK04
                                           	global STK03
                                           	global STK02
                                           	global STK01
                                           	global STK00
                                           
                                           sharebank udata_ovr 0x0070
                                           PSAVE	res 1
                                           SSAVE	res 1
                                           WSAVE	res 1
                                           STK12	res 1
                                           STK11	res 1
                                           STK10	res 1
                                           STK09	res 1
                                           STK08	res 1
                                           STK07	res 1
                                           STK06	res 1
                                           STK05	res 1
                                           STK04	res 1
                                           STK03	res 1
                                           STK02	res 1
                                           STK01	res 1
                                           STK00	res 1
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           UD_main_0	udata
                                           _bitfield	res	1
                                           
                                           UD_main_1	udata
                                           _buf	res	16
                                           
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_main_0	udata
                                           r0x1042	res	1
                                           r0x1043	res	1
                                           r0x1044	res	1
                                           r0x103E	res	1
                                           r0x1040	res	1
                                           r0x103F	res	1
                                           r0x1041	res	1
                                           r0x102A	res	1
                                           r0x102B	res	1
                                           r0x102D	res	1
                                           r0x102C	res	1
                                           r0x102E	res	1
                                           r0x1038	res	1
                                           r0x1037	res	1
                                           r0x1039	res	1
                                           r0x103A	res	1
                                           r0x103C	res	1
                                           r0x103D	res	1
                                           r0x1031	res	1
                                           r0x1030	res	1
                                           r0x102F	res	1
                                           r0x1032	res	1
                                           r0x1033	res	1
                                           r0x1034	res	1
                                           r0x1035	res	1
                                           r0x1036	res	1
                                           r0x1024	res	1
                                           r0x1023	res	1
                                           r0x1022	res	1
                                           r0x1025	res	1
                                           r0x1026	res	1
                                           r0x1027	res	1
                                           r0x1028	res	1
                                           r0x1029	res	1
                                           _dec_to_ascii_i_1_22	res	1
                                           _dec_to_ascii_number_1_22	res	4
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           
                                           ID_main_0	idata
                                           _w
                                           	db	0x00, 0x00
                                           
                                           
                                           ID_main_1	idata
                                           _t
                                           	db	0x00, 0x00
                                           
                                           
                                           ID_main_2	idata
                                           _w1
                                           	db	0x00, 0x00
                                           
                                           
                                           ID_main_3	idata
                                           _t1
                                           	db	0x00, 0x00
                                           
                                           
                                           ID_main_4	idata
                                           _buf_head
                                           	db	0x00
                                           
                                           
                                           ID_main_5	idata
                                           _buf_tail
                                           	db	0x00
                                           
                                           
                                           ID_main_6	idata
                                           _int_error_cnt
                                           	db	0x00
                                           
                                           
                                           ID_main_7	code
                                           _strV0
0004d1   3430     retlw   0x30             	retlw 0x30
0004d2   3420     retlw   0x20             	retlw 0x20
0004d3   340a     retlw   0x0a             	retlw 0x0a
0004d4   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_8	code
                                           _strV1
0004d5   3431     retlw   0x31             	retlw 0x31
0004d6   3420     retlw   0x20             	retlw 0x20
0004d7   340a     retlw   0x0a             	retlw 0x0a
0004d8   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_9	code
                                           _strVF
0004d9   3446     retlw   0x46             	retlw 0x46
0004da   3420     retlw   0x20             	retlw 0x20
0004db   340a     retlw   0x0a             	retlw 0x0a
0004dc   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_10	code
                                           _strw
0004dd   3477     retlw   0x77             	retlw 0x77
0004de   343a     retlw   0x3a             	retlw 0x3a
0004df   3420     retlw   0x20             	retlw 0x20
0004e0   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_11	code
                                           _strt
0004e1   3474     retlw   0x74             	retlw 0x74
0004e2   343a     retlw   0x3a             	retlw 0x3a
0004e3   3420     retlw   0x20             	retlw 0x20
0004e4   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_12	code
                                           _strw1
0004c7   3477     retlw   0x77             	retlw 0x77
0004c8   3431     retlw   0x31             	retlw 0x31
0004c9   343a     retlw   0x3a             	retlw 0x3a
0004ca   3420     retlw   0x20             	retlw 0x20
0004cb   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_13	code
                                           _strt1
0004cc   3474     retlw   0x74             	retlw 0x74
0004cd   3431     retlw   0x31             	retlw 0x31
0004ce   343a     retlw   0x3a             	retlw 0x3a
0004cf   3420     retlw   0x20             	retlw 0x20
0004d0   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_14	code
                                           _tab
0004ed   3409     retlw   0x09             	retlw 0x09
0004ee   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_15	code
                                           _enter
0004ef   340a     retlw   0x0a             	retlw 0x0a
0004f0   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_16	code
                                           _sync
0004c1   3453     retlw   0x53             	retlw 0x53
0004c2   3459     retlw   0x59             	retlw 0x59
0004c3   344e     retlw   0x4e             	retlw 0x4e
0004c4   3443     retlw   0x43             	retlw 0x43
0004c5   340a     retlw   0x0a             	retlw 0x0a
0004c6   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_17	code
                                           _int_err
0004b8   3449     retlw   0x49             	retlw 0x49
0004b9   344e     retlw   0x4e             	retlw 0x4e
0004ba   3454     retlw   0x54             	retlw 0x54
0004bb   3420     retlw   0x20             	retlw 0x20
0004bc   3445     retlw   0x45             	retlw 0x45
0004bd   3452     retlw   0x52             	retlw 0x52
0004be   3452     retlw   0x52             	retlw 0x52
0004bf   340a     retlw   0x0a             	retlw 0x0a
0004c0   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_18	code
                                           _buf_err
0004a7   3442     retlw   0x42             	retlw 0x42
0004a8   3455     retlw   0x55             	retlw 0x55
0004a9   3446     retlw   0x46             	retlw 0x46
0004aa   3446     retlw   0x46             	retlw 0x46
0004ab   3445     retlw   0x45             	retlw 0x45
0004ac   3452     retlw   0x52             	retlw 0x52
0004ad   3420     retlw   0x20             	retlw 0x20
0004ae   344f     retlw   0x4f             	retlw 0x4f
0004af   3457     retlw   0x57             	retlw 0x57
0004b0   3445     retlw   0x45             	retlw 0x45
0004b1   3452     retlw   0x52             	retlw 0x52
0004b2   3446     retlw   0x46             	retlw 0x46
0004b3   344c     retlw   0x4c             	retlw 0x4c
0004b4   344f     retlw   0x4f             	retlw 0x4f
0004b5   3457     retlw   0x57             	retlw 0x57
0004b6   340a     retlw   0x0a             	retlw 0x0a
0004b7   3400     retlw   0x00             	retlw 0x00
                                           
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; reset vector 
                                           ;--------------------------------------------------------
                                           STARTUP	code 0x0000
000000   0000     nop                      	nop
000001   118a     bcf     0x0a, 0x3        	pagesel __sdcc_gsinit_startup
000002   2a35     goto    0x0235           	goto	__sdcc_gsinit_startup
                                           ;--------------------------------------------------------
                                           ; interrupt and initialization code
                                           ;--------------------------------------------------------
                                           c_interrupt	code	0x0004
                                           __sdcc_interrupt:
                                           ;***
                                           ;  pBlock Stats: dbName = I
                                           ;***
                                           ;functions called:
                                           ;   _SP_send_error
                                           ;   _SP_send_error
                                           ;5 compiler assigned registers:
                                           ;   r0x1042
                                           ;   r0x1043
                                           ;   r0x1044
                                           ;   STK01
                                           ;   STK00
                                           ;; Starting pCode block
                                           _receive_intr:
                                           ; 0 exit points
                                           ;	.line	84; "main.c"	void receive_intr() __interrupt 0 {
000004   00f2     movwf   0x72             	MOVWF	WSAVE
000005   0e03     swapf   0x03, 0x0        	SWAPF	STATUS,W
000006   0183     clrf    0x03             	CLRF	STATUS
000007   00f1     movwf   0x71             	MOVWF	SSAVE
000008   080a     movf    0x0a, 0x0        	MOVF	PCLATH,W
000009   018a     clrf    0x0a             	CLRF	PCLATH
00000a   00f0     movwf   0x70             	MOVWF	PSAVE
00000b   0804     movf    0x04, 0x0        	MOVF	FSR,W
00000c   1683     bsf     0x03, 0x5        	BANKSEL	___sdcc_saved_fsr
00000d   1303     bcf     0x03, 0x6        
00000e   00ae     movwf   0x2e             	MOVWF	___sdcc_saved_fsr
                                           ;	.line	86; "main.c"	if(TXIF){
00000f   1283     bcf     0x03, 0x5        	BANKSEL	_PIR1bits
000010   1303     bcf     0x03, 0x6        
000011   1e0c     btfss   0x0c, 0x4        	BTFSS	_PIR1bits,4
000012   2863     goto    0x0063           	GOTO	_00111_DS_
                                           ;	.line	88; "main.c"	if (buf_head == buf_tail){
000013   1683     bsf     0x03, 0x5        	BANKSEL	_buf_tail
000014   1303     bcf     0x03, 0x6        
000015   082c     movf    0x2c, 0x0        	MOVF	_buf_tail,W
000016   1683     bsf     0x03, 0x5        	BANKSEL	_buf_head
000017   1303     bcf     0x03, 0x6        
000018   062b     xorwf   0x2b, 0x0        	XORWF	_buf_head,W
000019   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00001a   281f     goto    0x001f           	GOTO	_00108_DS_
                                           ;	.line	89; "main.c"	TXIE = 0;
00001b   1683     bsf     0x03, 0x5        	BANKSEL	_PIE1bits
00001c   1303     bcf     0x03, 0x6        
00001d   120c     bcf     0x0c, 0x4        	BCF	_PIE1bits,4
00001e   2863     goto    0x0063           	GOTO	_00111_DS_
                                           _00108_DS_:
                                           ;	.line	94; "main.c"	TXREG = buf[buf_tail];
00001f   1683     bsf     0x03, 0x5        	BANKSEL	_buf_tail
000020   1303     bcf     0x03, 0x6        
000021   082c     movf    0x2c, 0x0        	MOVF	_buf_tail,W
000022   3e47     addlw   0x47             	ADDLW	(_buf + 0)
000023   1283     bcf     0x03, 0x5        	BANKSEL	r0x1042
000024   1303     bcf     0x03, 0x6        
000025   00a0     movwf   0x20             	MOVWF	r0x1042
000026   3000     movlw   0x00             	MOVLW	high (_buf + 0)
000027   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000028   3e01     addlw   0x01             	ADDLW	0x01
000029   00a1     movwf   0x21             	MOVWF	r0x1043
00002a   0820     movf    0x20, 0x0        	MOVF	r0x1042,W
00002b   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00002c   1303     bcf     0x03, 0x6        
00002d   0084     movwf   0x04             	MOVWF	FSR
00002e   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00002f   1283     bcf     0x03, 0x5        	BANKSEL	r0x1043
000030   1303     bcf     0x03, 0x6        
000031   1821     btfsc   0x21, 0x0        	BTFSC	r0x1043,0
000032   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000033   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000034   1303     bcf     0x03, 0x6        
000035   0800     movf    0x00, 0x0        	MOVF	INDF,W
000036   0099     movwf   0x19             	MOVWF	_TXREG
                                           ;	.line	95; "main.c"	buf[buf_tail] = 0;  // clear the data (optional)
000037   1283     bcf     0x03, 0x5        	BANKSEL	r0x1042
000038   1303     bcf     0x03, 0x6        
000039   0820     movf    0x20, 0x0        	MOVF	r0x1042,W
00003a   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00003b   1303     bcf     0x03, 0x6        
00003c   0084     movwf   0x04             	MOVWF	FSR
00003d   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00003e   1283     bcf     0x03, 0x5        	BANKSEL	r0x1043
00003f   1303     bcf     0x03, 0x6        
000040   1821     btfsc   0x21, 0x0        	BTFSC	r0x1043,0
000041   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000042   3000     movlw   0x00             	MOVLW	0x00
000043   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000044   1303     bcf     0x03, 0x6        
000045   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	97; "main.c"	next = buf_tail + 1;
000046   1683     bsf     0x03, 0x5        	BANKSEL	_buf_tail
000047   1303     bcf     0x03, 0x6        
000048   082c     movf    0x2c, 0x0        	MOVF	_buf_tail,W
000049   1283     bcf     0x03, 0x5        	BANKSEL	r0x1042
00004a   1303     bcf     0x03, 0x6        
00004b   00a0     movwf   0x20             	MOVWF	r0x1042
00004c   01a1     clrf    0x21             	CLRF	r0x1043
00004d   0aa0     incf    0x20, 0x1        	INCF	r0x1042,F
00004e   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00004f   0aa1     incf    0x21, 0x1        	INCF	r0x1043,F
                                           ;;signed compare: left < lit(0x10=16), size=2, mask=ffff
                                           ;	.line	98; "main.c"	if(next >= BUF_SIZE)
000050   0821     movf    0x21, 0x0        	MOVF	r0x1043,W
000051   3e80     addlw   0x80             	ADDLW	0x80
000052   3e80     addlw   0x80             	ADDLW	0x80
000053   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000054   2857     goto    0x0057           	GOTO	_00139_DS_
000055   3010     movlw   0x10             	MOVLW	0x10
000056   0220     subwf   0x20, 0x0        	SUBWF	r0x1042,W
                                           _00139_DS_:
000057   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000058   285d     goto    0x005d           	GOTO	_00106_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffc8cbcdf40
                                           ;	.line	99; "main.c"	next = 0;
000059   1283     bcf     0x03, 0x5        	BANKSEL	r0x1042
00005a   1303     bcf     0x03, 0x6        
00005b   01a0     clrf    0x20             	CLRF	r0x1042
00005c   01a1     clrf    0x21             	CLRF	r0x1043
                                           _00106_DS_:
                                           ;	.line	101; "main.c"	buf_tail = next;
00005d   1283     bcf     0x03, 0x5        	BANKSEL	r0x1042
00005e   1303     bcf     0x03, 0x6        
00005f   0820     movf    0x20, 0x0        	MOVF	r0x1042,W
000060   1683     bsf     0x03, 0x5        	BANKSEL	_buf_tail
000061   1303     bcf     0x03, 0x6        
000062   00ac     movwf   0x2c             	MOVWF	_buf_tail
                                           _00111_DS_:
                                           ;	.line	105; "main.c"	if(CCP1IF){
000063   1283     bcf     0x03, 0x5        	BANKSEL	_PIR1bits
000064   1303     bcf     0x03, 0x6        
000065   1d0c     btfss   0x0c, 0x2        	BTFSS	_PIR1bits,2
000066   28ae     goto    0x00ae           	GOTO	_00116_DS_
                                           ;	.line	106; "main.c"	CCP1IE = FALSE;
000067   1683     bsf     0x03, 0x5        	BANKSEL	_PIE1bits
000068   1303     bcf     0x03, 0x6        
000069   110c     bcf     0x0c, 0x2        	BCF	_PIE1bits,2
                                           ;	.line	108; "main.c"	if(CCP1M0){                     // if ECCP mode is Rising edge CCP1M0
00006a   1283     bcf     0x03, 0x5        	BANKSEL	_CCP1CONbits
00006b   1303     bcf     0x03, 0x6        
00006c   1c17     btfss   0x17, 0x0        	BTFSS	_CCP1CONbits,0
00006d   288d     goto    0x008d           	GOTO	_00113_DS_
                                           ;	.line	109; "main.c"	CCP1M0 = FALING;                 // set falling edge
00006e   1017     bcf     0x17, 0x0        	BCF	_CCP1CONbits,0
                                           ;	.line	110; "main.c"	TMR1H = 0;
00006f   018f     clrf    0x0f             	CLRF	_TMR1H
                                           ;	.line	111; "main.c"	TMR1L = 0;
000070   018e     clrf    0x0e             	CLRF	_TMR1L
                                           ;	.line	112; "main.c"	t = 0x0000 | CCPR1H;        //ECCP result higher 8 bits
000071   0816     movf    0x16, 0x0        	MOVF	_CCPR1H,W
000072   1283     bcf     0x03, 0x5        	BANKSEL	r0x1042
000073   1303     bcf     0x03, 0x6        
000074   00a0     movwf   0x20             	MOVWF	r0x1042
000075   1283     bcf     0x03, 0x5        	BANKSEL	_t
000076   1303     bcf     0x03, 0x6        
000077   00ee     movwf   0x6e             	MOVWF	_t
000078   01ef     clrf    0x6f             	CLRF	(_t + 1)
                                           ;	.line	113; "main.c"	t = t << 8;
000079   086e     movf    0x6e, 0x0        	MOVF	_t,W
00007a   00ef     movwf   0x6f             	MOVWF	(_t + 1)
00007b   01ee     clrf    0x6e             	CLRF	_t
                                           ;	.line	114; "main.c"	t = t | CCPR1L;             //ECCP combined 16 bit number formation
00007c   1283     bcf     0x03, 0x5        	BANKSEL	_CCPR1L
00007d   1303     bcf     0x03, 0x6        
00007e   0815     movf    0x15, 0x0        	MOVF	_CCPR1L,W
00007f   1283     bcf     0x03, 0x5        	BANKSEL	r0x1042
000080   1303     bcf     0x03, 0x6        
000081   00a0     movwf   0x20             	MOVWF	r0x1042
000082   01a1     clrf    0x21             	CLRF	r0x1043
000083   0820     movf    0x20, 0x0        	MOVF	r0x1042,W
000084   1283     bcf     0x03, 0x5        	BANKSEL	_t
000085   1303     bcf     0x03, 0x6        
000086   04ee     iorwf   0x6e, 0x1        	IORWF	_t,F
000087   3000     movlw   0x00             	MOVLW	0x00
000088   04ef     iorwf   0x6f, 0x1        	IORWF	(_t + 1),F
                                           ;	.line	115; "main.c"	bitfield.Capture = TRUE;
000089   1683     bsf     0x03, 0x5        	BANKSEL	_bitfield
00008a   1303     bcf     0x03, 0x6        
00008b   142a     bsf     0x2a, 0x0        	BSF	_bitfield,0
00008c   28a8     goto    0x00a8           	GOTO	_00114_DS_
                                           _00113_DS_:
                                           ;	.line	118; "main.c"	CCP1M0 = RISING;
00008d   1283     bcf     0x03, 0x5        	BANKSEL	_CCP1CONbits
00008e   1303     bcf     0x03, 0x6        
00008f   1417     bsf     0x17, 0x0        	BSF	_CCP1CONbits,0
                                           ;	.line	119; "main.c"	w = 0x0000 | CCPR1H;        //ECCP result higher 8 bits
000090   0816     movf    0x16, 0x0        	MOVF	_CCPR1H,W
000091   1283     bcf     0x03, 0x5        	BANKSEL	r0x1042
000092   1303     bcf     0x03, 0x6        
000093   00a0     movwf   0x20             	MOVWF	r0x1042
000094   1283     bcf     0x03, 0x5        	BANKSEL	_w
000095   1303     bcf     0x03, 0x6        
000096   00ec     movwf   0x6c             	MOVWF	_w
000097   01ed     clrf    0x6d             	CLRF	(_w + 1)
                                           ;	.line	120; "main.c"	w = w << 8;
000098   086c     movf    0x6c, 0x0        	MOVF	_w,W
000099   00ed     movwf   0x6d             	MOVWF	(_w + 1)
00009a   01ec     clrf    0x6c             	CLRF	_w
                                           ;	.line	121; "main.c"	w = w | CCPR1L;             //ECCP combined 16 bit number formation
00009b   1283     bcf     0x03, 0x5        	BANKSEL	_CCPR1L
00009c   1303     bcf     0x03, 0x6        
00009d   0815     movf    0x15, 0x0        	MOVF	_CCPR1L,W
00009e   1283     bcf     0x03, 0x5        	BANKSEL	r0x1042
00009f   1303     bcf     0x03, 0x6        
0000a0   00a0     movwf   0x20             	MOVWF	r0x1042
0000a1   01a1     clrf    0x21             	CLRF	r0x1043
0000a2   0820     movf    0x20, 0x0        	MOVF	r0x1042,W
0000a3   1283     bcf     0x03, 0x5        	BANKSEL	_w
0000a4   1303     bcf     0x03, 0x6        
0000a5   04ec     iorwf   0x6c, 0x1        	IORWF	_w,F
0000a6   3000     movlw   0x00             	MOVLW	0x00
0000a7   04ed     iorwf   0x6d, 0x1        	IORWF	(_w + 1),F
                                           _00114_DS_:
                                           ;	.line	124; "main.c"	CCP1IE = 1;
0000a8   1683     bsf     0x03, 0x5        	BANKSEL	_PIE1bits
0000a9   1303     bcf     0x03, 0x6        
0000aa   150c     bsf     0x0c, 0x2        	BSF	_PIE1bits,2
                                           ;	.line	125; "main.c"	CCP1IF = 0;                     //Clear interrupt flag
0000ab   1283     bcf     0x03, 0x5        	BANKSEL	_PIR1bits
0000ac   1303     bcf     0x03, 0x6        
0000ad   110c     bcf     0x0c, 0x2        	BCF	_PIR1bits,2
                                           _00116_DS_:
                                           ;	.line	127; "main.c"	int_error_cnt++;
0000ae   1683     bsf     0x03, 0x5        	BANKSEL	_int_error_cnt
0000af   1303     bcf     0x03, 0x6        
0000b0   0aad     incf    0x2d, 0x1        	INCF	_int_error_cnt,F
                                           ;;swapping arguments (AOP_TYPEs 1/3)
                                           ;;unsigned compare: left >= lit(0x65=101), size=1
                                           ;	.line	128; "main.c"	if (int_error_cnt > 100)
0000b1   3065     movlw   0x65             	MOVLW	0x65
0000b2   022d     subwf   0x2d, 0x0        	SUBWF	_int_error_cnt,W
0000b3   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0000b4   28c5     goto    0x00c5           	GOTO	_00119_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffc8cbcdf40
                                           ;	.line	129; "main.c"	SP_send_error(int_err);
0000b5   3004     movlw   0x04             	MOVLW	high (_int_err + 0)
0000b6   1283     bcf     0x03, 0x5        	BANKSEL	r0x1043
0000b7   1303     bcf     0x03, 0x6        
0000b8   00a1     movwf   0x21             	MOVWF	r0x1043
0000b9   30b8     movlw   0xb8             	MOVLW	(_int_err + 0)
0000ba   00a0     movwf   0x20             	MOVWF	r0x1042
0000bb   3080     movlw   0x80             	MOVLW	0x80
0000bc   00a2     movwf   0x22             	MOVWF	r0x1044
0000bd   0820     movf    0x20, 0x0        	MOVF	r0x1042,W
0000be   00fe     movwf   0x7e             	MOVWF	STK01
0000bf   0821     movf    0x21, 0x0        	MOVF	r0x1043,W
0000c0   00ff     movwf   0x7f             	MOVWF	STK00
0000c1   0822     movf    0x22, 0x0        	MOVF	r0x1044,W
0000c2   118a     bcf     0x0a, 0x3        	PAGESEL	_SP_send_error
0000c3   23af     call    0x03af           	CALL	_SP_send_error
0000c4   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           _00119_DS_:
0000c5   1683     bsf     0x03, 0x5        	BANKSEL	___sdcc_saved_fsr
0000c6   1303     bcf     0x03, 0x6        
0000c7   082e     movf    0x2e, 0x0        	MOVF	___sdcc_saved_fsr,W
0000c8   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0000c9   1303     bcf     0x03, 0x6        
0000ca   0084     movwf   0x04             	MOVWF	FSR
0000cb   0870     movf    0x70, 0x0        	MOVF	PSAVE,W
0000cc   008a     movwf   0x0a             	MOVWF	PCLATH
0000cd   0183     clrf    0x03             	CLRF	STATUS
0000ce   0e71     swapf   0x71, 0x0        	SWAPF	SSAVE,W
0000cf   0083     movwf   0x03             	MOVWF	STATUS
0000d0   0ef2     swapf   0x72, 0x1        	SWAPF	WSAVE,F
0000d1   0e72     swapf   0x72, 0x0        	SWAPF	WSAVE,W
                                           END_OF_INTERRUPT:
0000d2   0009     retfie                   	RETFIE	
                                           
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_main	code
                                           ;***
                                           ;  pBlock Stats: dbName = M
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _init
                                           ;   _dec_to_ascii
                                           ;   _SP_send
                                           ;   _dec_to_ascii
                                           ;   _SP_send
                                           ;   _dec_to_ascii
                                           ;   _SP_send
                                           ;   _dec_to_ascii
                                           ;   _SP_send
                                           ;   _init
                                           ;   _dec_to_ascii
                                           ;   _SP_send
                                           ;   _dec_to_ascii
                                           ;   _SP_send
                                           ;   _dec_to_ascii
                                           ;   _SP_send
                                           ;   _dec_to_ascii
                                           ;   _SP_send
                                           ;6 compiler assigned registers:
                                           ;   r0x103E
                                           ;   STK00
                                           ;   r0x103F
                                           ;   r0x1040
                                           ;   r0x1041
                                           ;   STK01
                                           ;; Starting pCode block
                                           S_main__main	code
                                           _main:
                                           ; 2 exit points
                                           ;	.line	135; "main.c"	init();
0000d3   118a     bcf     0x0a, 0x3        	PAGESEL	_init
0000d4   244a     call    0x044a           	CALL	_init
0000d5   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	136; "main.c"	while(1)
0000d6   1283     bcf     0x03, 0x5        	BANKSEL	r0x103E
0000d7   1303     bcf     0x03, 0x6        
0000d8   01a3     clrf    0x23             	CLRF	r0x103E
                                           _00155_DS_:
                                           ;	.line	139; "main.c"	if (bitfield.Capture){
0000d9   1683     bsf     0x03, 0x5        	BANKSEL	_bitfield
0000da   1303     bcf     0x03, 0x6        
0000db   1c2a     btfss   0x2a, 0x0        	BTFSS	_bitfield,0
0000dc   2990     goto    0x0190           	GOTO	_00153_DS_
                                           ;	.line	140; "main.c"	dec_to_ascii(w);
0000dd   1283     bcf     0x03, 0x5        	BANKSEL	_w
0000de   1303     bcf     0x03, 0x6        
0000df   086c     movf    0x6c, 0x0        	MOVF	_w,W
0000e0   00ff     movwf   0x7f             	MOVWF	STK00
0000e1   086d     movf    0x6d, 0x0        	MOVF	(_w + 1),W
0000e2   118a     bcf     0x0a, 0x3        	PAGESEL	_dec_to_ascii
0000e3   2195     call    0x0195           	CALL	_dec_to_ascii
0000e4   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	141; "main.c"	SP_send(tab);
0000e5   3004     movlw   0x04             	MOVLW	high (_tab + 0)
0000e6   1283     bcf     0x03, 0x5        	BANKSEL	r0x103F
0000e7   1303     bcf     0x03, 0x6        
0000e8   00a5     movwf   0x25             	MOVWF	r0x103F
0000e9   30ed     movlw   0xed             	MOVLW	(_tab + 0)
0000ea   00a4     movwf   0x24             	MOVWF	r0x1040
0000eb   3080     movlw   0x80             	MOVLW	0x80
0000ec   00a6     movwf   0x26             	MOVWF	r0x1041
0000ed   0824     movf    0x24, 0x0        	MOVF	r0x1040,W
0000ee   00fe     movwf   0x7e             	MOVWF	STK01
0000ef   0825     movf    0x25, 0x0        	MOVF	r0x103F,W
0000f0   00ff     movwf   0x7f             	MOVWF	STK00
0000f1   0826     movf    0x26, 0x0        	MOVF	r0x1041,W
0000f2   118a     bcf     0x0a, 0x3        	PAGESEL	_SP_send
0000f3   247b     call    0x047b           	CALL	_SP_send
0000f4   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	142; "main.c"	dec_to_ascii(t);
0000f5   1283     bcf     0x03, 0x5        	BANKSEL	_t
0000f6   1303     bcf     0x03, 0x6        
0000f7   086e     movf    0x6e, 0x0        	MOVF	_t,W
0000f8   00ff     movwf   0x7f             	MOVWF	STK00
0000f9   086f     movf    0x6f, 0x0        	MOVF	(_t + 1),W
0000fa   118a     bcf     0x0a, 0x3        	PAGESEL	_dec_to_ascii
0000fb   2195     call    0x0195           	CALL	_dec_to_ascii
0000fc   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	143; "main.c"	SP_send(enter);
0000fd   3004     movlw   0x04             	MOVLW	high (_enter + 0)
0000fe   1283     bcf     0x03, 0x5        	BANKSEL	r0x103F
0000ff   1303     bcf     0x03, 0x6        
000100   00a5     movwf   0x25             	MOVWF	r0x103F
000101   30ef     movlw   0xef             	MOVLW	(_enter + 0)
000102   00a4     movwf   0x24             	MOVWF	r0x1040
000103   3080     movlw   0x80             	MOVLW	0x80
000104   00a6     movwf   0x26             	MOVWF	r0x1041
000105   0824     movf    0x24, 0x0        	MOVF	r0x1040,W
000106   00fe     movwf   0x7e             	MOVWF	STK01
000107   0825     movf    0x25, 0x0        	MOVF	r0x103F,W
000108   00ff     movwf   0x7f             	MOVWF	STK00
000109   0826     movf    0x26, 0x0        	MOVF	r0x1041,W
00010a   118a     bcf     0x0a, 0x3        	PAGESEL	_SP_send
00010b   247b     call    0x047b           	CALL	_SP_send
00010c   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;;swapping arguments (AOP_TYPEs 1/3)
                                           ;;unsigned compare: left >= lit(0x759=1881), size=2
                                           ;	.line	147; "main.c"	if (t > MIN_T && t < MAX_T && t1 > MIN_T && t1 < MAX_T){
00010d   3007     movlw   0x07             	MOVLW	0x07
00010e   1283     bcf     0x03, 0x5        	BANKSEL	_t
00010f   1303     bcf     0x03, 0x6        
000110   026f     subwf   0x6f, 0x0        	SUBWF	(_t + 1),W
000111   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000112   2915     goto    0x0115           	GOTO	_00183_DS_
000113   3059     movlw   0x59             	MOVLW	0x59
000114   026e     subwf   0x6e, 0x0        	SUBWF	_t,W
                                           _00183_DS_:
000115   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000116   2938     goto    0x0138           	GOTO	_00145_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffc8cbcdf40
                                           ;;unsigned compare: left < lit(0x79E=1950), size=2
000117   3007     movlw   0x07             	MOVLW	0x07
000118   1283     bcf     0x03, 0x5        	BANKSEL	_t
000119   1303     bcf     0x03, 0x6        
00011a   026f     subwf   0x6f, 0x0        	SUBWF	(_t + 1),W
00011b   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00011c   291f     goto    0x011f           	GOTO	_00184_DS_
00011d   309e     movlw   0x9e             	MOVLW	0x9e
00011e   026e     subwf   0x6e, 0x0        	SUBWF	_t,W
                                           _00184_DS_:
00011f   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000120   2938     goto    0x0138           	GOTO	_00145_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffc8cbcdf40
                                           ;;swapping arguments (AOP_TYPEs 1/3)
                                           ;;unsigned compare: left >= lit(0x759=1881), size=2
000121   3007     movlw   0x07             	MOVLW	0x07
000122   1683     bsf     0x03, 0x5        	BANKSEL	_t1
000123   1303     bcf     0x03, 0x6        
000124   0229     subwf   0x29, 0x0        	SUBWF	(_t1 + 1),W
000125   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000126   2929     goto    0x0129           	GOTO	_00185_DS_
000127   3059     movlw   0x59             	MOVLW	0x59
000128   0228     subwf   0x28, 0x0        	SUBWF	_t1,W
                                           _00185_DS_:
000129   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00012a   2938     goto    0x0138           	GOTO	_00145_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffc8cbcdf40
                                           ;;unsigned compare: left < lit(0x79E=1950), size=2
00012b   3007     movlw   0x07             	MOVLW	0x07
00012c   1683     bsf     0x03, 0x5        	BANKSEL	_t1
00012d   1303     bcf     0x03, 0x6        
00012e   0229     subwf   0x29, 0x0        	SUBWF	(_t1 + 1),W
00012f   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000130   2933     goto    0x0133           	GOTO	_00186_DS_
000131   309e     movlw   0x9e             	MOVLW	0x9e
000132   0228     subwf   0x28, 0x0        	SUBWF	_t1,W
                                           _00186_DS_:
000133   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000134   2938     goto    0x0138           	GOTO	_00145_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffc8cbcdf40
                                           ;	.line	148; "main.c"	bitfield.Hint = TRUE;
000135   1683     bsf     0x03, 0x5        	BANKSEL	_bitfield
000136   1303     bcf     0x03, 0x6        
000137   152a     bsf     0x2a, 0x2        	BSF	_bitfield,2
                                           ;;unsigned compare: left < lit(0x64=100), size=1
                                           _00145_DS_:
                                           ;	.line	150; "main.c"	if (i < 100 && bitfield.Hint){
000138   3064     movlw   0x64             	MOVLW	0x64
000139   1283     bcf     0x03, 0x5        	BANKSEL	r0x103E
00013a   1303     bcf     0x03, 0x6        
00013b   0223     subwf   0x23, 0x0        	SUBWF	r0x103E,W
00013c   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00013d   2975     goto    0x0175           	GOTO	_00150_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffc8cbcdf40
00013e   1683     bsf     0x03, 0x5        	BANKSEL	_bitfield
00013f   1303     bcf     0x03, 0x6        
000140   1d2a     btfss   0x2a, 0x2        	BTFSS	_bitfield,2
000141   2975     goto    0x0175           	GOTO	_00150_DS_
                                           ;	.line	151; "main.c"	dec_to_ascii(w);
000142   1283     bcf     0x03, 0x5        	BANKSEL	_w
000143   1303     bcf     0x03, 0x6        
000144   086c     movf    0x6c, 0x0        	MOVF	_w,W
000145   00ff     movwf   0x7f             	MOVWF	STK00
000146   086d     movf    0x6d, 0x0        	MOVF	(_w + 1),W
000147   118a     bcf     0x0a, 0x3        	PAGESEL	_dec_to_ascii
000148   2195     call    0x0195           	CALL	_dec_to_ascii
000149   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	152; "main.c"	SP_send(tab);
00014a   3004     movlw   0x04             	MOVLW	high (_tab + 0)
00014b   1283     bcf     0x03, 0x5        	BANKSEL	r0x103F
00014c   1303     bcf     0x03, 0x6        
00014d   00a5     movwf   0x25             	MOVWF	r0x103F
00014e   30ed     movlw   0xed             	MOVLW	(_tab + 0)
00014f   00a4     movwf   0x24             	MOVWF	r0x1040
000150   3080     movlw   0x80             	MOVLW	0x80
000151   00a6     movwf   0x26             	MOVWF	r0x1041
000152   0824     movf    0x24, 0x0        	MOVF	r0x1040,W
000153   00fe     movwf   0x7e             	MOVWF	STK01
000154   0825     movf    0x25, 0x0        	MOVF	r0x103F,W
000155   00ff     movwf   0x7f             	MOVWF	STK00
000156   0826     movf    0x26, 0x0        	MOVF	r0x1041,W
000157   118a     bcf     0x0a, 0x3        	PAGESEL	_SP_send
000158   247b     call    0x047b           	CALL	_SP_send
000159   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	153; "main.c"	dec_to_ascii(t);
00015a   1283     bcf     0x03, 0x5        	BANKSEL	_t
00015b   1303     bcf     0x03, 0x6        
00015c   086e     movf    0x6e, 0x0        	MOVF	_t,W
00015d   00ff     movwf   0x7f             	MOVWF	STK00
00015e   086f     movf    0x6f, 0x0        	MOVF	(_t + 1),W
00015f   118a     bcf     0x0a, 0x3        	PAGESEL	_dec_to_ascii
000160   2195     call    0x0195           	CALL	_dec_to_ascii
000161   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	154; "main.c"	SP_send(enter);
000162   3004     movlw   0x04             	MOVLW	high (_enter + 0)
000163   1283     bcf     0x03, 0x5        	BANKSEL	r0x103F
000164   1303     bcf     0x03, 0x6        
000165   00a5     movwf   0x25             	MOVWF	r0x103F
000166   30ef     movlw   0xef             	MOVLW	(_enter + 0)
000167   00a4     movwf   0x24             	MOVWF	r0x1040
000168   3080     movlw   0x80             	MOVLW	0x80
000169   00a6     movwf   0x26             	MOVWF	r0x1041
00016a   0824     movf    0x24, 0x0        	MOVF	r0x1040,W
00016b   00fe     movwf   0x7e             	MOVWF	STK01
00016c   0825     movf    0x25, 0x0        	MOVF	r0x103F,W
00016d   00ff     movwf   0x7f             	MOVWF	STK00
00016e   0826     movf    0x26, 0x0        	MOVF	r0x1041,W
00016f   118a     bcf     0x0a, 0x3        	PAGESEL	_SP_send
000170   247b     call    0x047b           	CALL	_SP_send
000171   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	155; "main.c"	i++;
000172   1283     bcf     0x03, 0x5        	BANKSEL	r0x103E
000173   1303     bcf     0x03, 0x6        
000174   0aa3     incf    0x23, 0x1        	INCF	r0x103E,F
                                           _00150_DS_:
                                           ;	.line	157; "main.c"	t1 = t;
000175   1283     bcf     0x03, 0x5        	BANKSEL	_t
000176   1303     bcf     0x03, 0x6        
000177   086e     movf    0x6e, 0x0        	MOVF	_t,W
000178   1683     bsf     0x03, 0x5        	BANKSEL	_t1
000179   1303     bcf     0x03, 0x6        
00017a   00a8     movwf   0x28             	MOVWF	_t1
00017b   1283     bcf     0x03, 0x5        	BANKSEL	_t
00017c   1303     bcf     0x03, 0x6        
00017d   086f     movf    0x6f, 0x0        	MOVF	(_t + 1),W
00017e   1683     bsf     0x03, 0x5        	BANKSEL	_t1
00017f   1303     bcf     0x03, 0x6        
000180   00a9     movwf   0x29             	MOVWF	(_t1 + 1)
                                           ;	.line	158; "main.c"	w1 = w;
000181   1283     bcf     0x03, 0x5        	BANKSEL	_w
000182   1303     bcf     0x03, 0x6        
000183   086c     movf    0x6c, 0x0        	MOVF	_w,W
000184   1683     bsf     0x03, 0x5        	BANKSEL	_w1
000185   1303     bcf     0x03, 0x6        
000186   00a6     movwf   0x26             	MOVWF	_w1
000187   1283     bcf     0x03, 0x5        	BANKSEL	_w
000188   1303     bcf     0x03, 0x6        
000189   086d     movf    0x6d, 0x0        	MOVF	(_w + 1),W
00018a   1683     bsf     0x03, 0x5        	BANKSEL	_w1
00018b   1303     bcf     0x03, 0x6        
00018c   00a7     movwf   0x27             	MOVWF	(_w1 + 1)
                                           ;	.line	159; "main.c"	bitfield.Capture = FALSE;
00018d   1683     bsf     0x03, 0x5        	BANKSEL	_bitfield
00018e   1303     bcf     0x03, 0x6        
00018f   102a     bcf     0x2a, 0x0        	BCF	_bitfield,0
                                           _00153_DS_:
                                           ;	.line	162; "main.c"	int_error_cnt = 0;
000190   1683     bsf     0x03, 0x5        	BANKSEL	_int_error_cnt
000191   1303     bcf     0x03, 0x6        
000192   01ad     clrf    0x2d             	CLRF	_int_error_cnt
000193   28d9     goto    0x00d9           	GOTO	_00155_DS_
000194   0008     return                   	RETURN	
                                           ; exit point of _main
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   __gptrget1
                                           ;   __gptrget1
                                           ;10 compiler assigned registers:
                                           ;   r0x1022
                                           ;   STK00
                                           ;   r0x1023
                                           ;   STK01
                                           ;   r0x1024
                                           ;   r0x1025
                                           ;   r0x1026
                                           ;   r0x1027
                                           ;   r0x1028
                                           ;   r0x1029
                                           ;; Starting pCode block
                                           S_main__SP_send_error	code
                                           _SP_send_error:
                                           ; 2 exit points
                                           ;	.line	221; "main.c"	void SP_send_error(char str[])
0003af   1283     bcf     0x03, 0x5        	BANKSEL	r0x1022
0003b0   1303     bcf     0x03, 0x6        
0003b1   00bc     movwf   0x3c             	MOVWF	r0x1022
0003b2   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0003b3   00bb     movwf   0x3b             	MOVWF	r0x1023
0003b4   087e     movf    0x7e, 0x0        	MOVF	STK01,W
0003b5   00ba     movwf   0x3a             	MOVWF	r0x1024
                                           ;	.line	224; "main.c"	GIE = FALSE;	// Disable all interrupts.
0003b6   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
0003b7   1303     bcf     0x03, 0x6        
0003b8   138b     bcf     0x0b, 0x7        	BCF	_INTCONbits,7
                                           ;	.line	225; "main.c"	for(i=0; str[i] != '\0'; i++)
0003b9   1283     bcf     0x03, 0x5        	BANKSEL	r0x1025
0003ba   1303     bcf     0x03, 0x6        
0003bb   01bd     clrf    0x3d             	CLRF	r0x1025
                                           _00226_DS_:
0003bc   1283     bcf     0x03, 0x5        	BANKSEL	r0x1025
0003bd   1303     bcf     0x03, 0x6        
0003be   083d     movf    0x3d, 0x0        	MOVF	r0x1025,W
0003bf   073a     addwf   0x3a, 0x0        	ADDWF	r0x1024,W
0003c0   00be     movwf   0x3e             	MOVWF	r0x1026
0003c1   083b     movf    0x3b, 0x0        	MOVF	r0x1023,W
0003c2   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0003c3   3e01     addlw   0x01             	ADDLW	0x01
0003c4   00bf     movwf   0x3f             	MOVWF	r0x1027
0003c5   083c     movf    0x3c, 0x0        	MOVF	r0x1022,W
0003c6   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0003c7   3e01     addlw   0x01             	ADDLW	0x01
0003c8   00c0     movwf   0x40             	MOVWF	r0x1028
0003c9   083e     movf    0x3e, 0x0        	MOVF	r0x1026,W
0003ca   00fe     movwf   0x7e             	MOVWF	STK01
0003cb   083f     movf    0x3f, 0x0        	MOVF	r0x1027,W
0003cc   00ff     movwf   0x7f             	MOVWF	STK00
0003cd   0840     movf    0x40, 0x0        	MOVF	r0x1028,W
0003ce   118a     bcf     0x0a, 0x3        	PAGESEL	__gptrget1
0003cf   23e4     call    0x03e4           	CALL	__gptrget1
0003d0   118a     bcf     0x0a, 0x3        	PAGESEL	$
0003d1   1283     bcf     0x03, 0x5        	BANKSEL	r0x1029
0003d2   1303     bcf     0x03, 0x6        
0003d3   00c1     movwf   0x41             	MOVWF	r0x1029
0003d4   0841     movf    0x41, 0x0        	MOVF	r0x1029,W
0003d5   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0003d6   2be3     goto    0x03e3           	GOTO	_00228_DS_
                                           ;	.line	227; "main.c"	TXREG=str[i];	// Add a character to the output buffer
0003d7   0841     movf    0x41, 0x0        	MOVF	r0x1029,W
0003d8   1283     bcf     0x03, 0x5        	BANKSEL	_TXREG
0003d9   1303     bcf     0x03, 0x6        
0003da   0099     movwf   0x19             	MOVWF	_TXREG
                                           _00221_DS_:
                                           ;	.line	228; "main.c"	while(!TXIF);	// Wait while the output buffer is full
0003db   1283     bcf     0x03, 0x5        	BANKSEL	_PIR1bits
0003dc   1303     bcf     0x03, 0x6        
0003dd   1e0c     btfss   0x0c, 0x4        	BTFSS	_PIR1bits,4
0003de   2bdb     goto    0x03db           	GOTO	_00221_DS_
                                           ;	.line	225; "main.c"	for(i=0; str[i] != '\0'; i++)
0003df   1283     bcf     0x03, 0x5        	BANKSEL	r0x1025
0003e0   1303     bcf     0x03, 0x6        
0003e1   0abd     incf    0x3d, 0x1        	INCF	r0x1025,F
0003e2   2bbc     goto    0x03bc           	GOTO	_00226_DS_
                                           _00228_DS_:
0003e3   0008     return                   	RETURN	
                                           ; exit point of _SP_send_error
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   __gptrget1
                                           ;   _circBufPush
                                           ;   __gptrget1
                                           ;   _circBufPush
                                           ;10 compiler assigned registers:
                                           ;   r0x102F
                                           ;   STK00
                                           ;   r0x1030
                                           ;   STK01
                                           ;   r0x1031
                                           ;   r0x1032
                                           ;   r0x1033
                                           ;   r0x1034
                                           ;   r0x1035
                                           ;   r0x1036
                                           ;; Starting pCode block
                                           S_main__SP_send	code
                                           _SP_send:
                                           ; 2 exit points
                                           ;	.line	213; "main.c"	void SP_send(char str[]){
00047b   1283     bcf     0x03, 0x5        	BANKSEL	r0x102F
00047c   1303     bcf     0x03, 0x6        
00047d   00b4     movwf   0x34             	MOVWF	r0x102F
00047e   087f     movf    0x7f, 0x0        	MOVF	STK00,W
00047f   00b3     movwf   0x33             	MOVWF	r0x1030
000480   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000481   00b2     movwf   0x32             	MOVWF	r0x1031
                                           ;	.line	215; "main.c"	for(i=0; str[i] != '\0'; i++)
000482   01b5     clrf    0x35             	CLRF	r0x1032
                                           _00214_DS_:
000483   1283     bcf     0x03, 0x5        	BANKSEL	r0x1032
000484   1303     bcf     0x03, 0x6        
000485   0835     movf    0x35, 0x0        	MOVF	r0x1032,W
000486   0732     addwf   0x32, 0x0        	ADDWF	r0x1031,W
000487   00b6     movwf   0x36             	MOVWF	r0x1033
000488   0833     movf    0x33, 0x0        	MOVF	r0x1030,W
000489   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00048a   3e01     addlw   0x01             	ADDLW	0x01
00048b   00b7     movwf   0x37             	MOVWF	r0x1034
00048c   0834     movf    0x34, 0x0        	MOVF	r0x102F,W
00048d   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00048e   3e01     addlw   0x01             	ADDLW	0x01
00048f   00b8     movwf   0x38             	MOVWF	r0x1035
000490   0836     movf    0x36, 0x0        	MOVF	r0x1033,W
000491   00fe     movwf   0x7e             	MOVWF	STK01
000492   0837     movf    0x37, 0x0        	MOVF	r0x1034,W
000493   00ff     movwf   0x7f             	MOVWF	STK00
000494   0838     movf    0x38, 0x0        	MOVF	r0x1035,W
000495   118a     bcf     0x0a, 0x3        	PAGESEL	__gptrget1
000496   23e4     call    0x03e4           	CALL	__gptrget1
000497   118a     bcf     0x0a, 0x3        	PAGESEL	$
000498   1283     bcf     0x03, 0x5        	BANKSEL	r0x1036
000499   1303     bcf     0x03, 0x6        
00049a   00b9     movwf   0x39             	MOVWF	r0x1036
00049b   0839     movf    0x39, 0x0        	MOVF	r0x1036,W
00049c   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00049d   2ca6     goto    0x04a6           	GOTO	_00216_DS_
                                           ;	.line	217; "main.c"	circBufPush(str[i]);
00049e   0839     movf    0x39, 0x0        	MOVF	r0x1036,W
00049f   118a     bcf     0x0a, 0x3        	PAGESEL	_circBufPush
0004a0   2320     call    0x0320           	CALL	_circBufPush
0004a1   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	215; "main.c"	for(i=0; str[i] != '\0'; i++)
0004a2   1283     bcf     0x03, 0x5        	BANKSEL	r0x1032
0004a3   1303     bcf     0x03, 0x6        
0004a4   0ab5     incf    0x35, 0x1        	INCF	r0x1032,F
0004a5   2c83     goto    0x0483           	GOTO	_00214_DS_
                                           _00216_DS_:
0004a6   0008     return                   	RETURN	
                                           ; exit point of _SP_send
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   __moduint
                                           ;   __divuint
                                           ;   _circBufPush
                                           ;   __moduint
                                           ;   __divuint
                                           ;   _circBufPush
                                           ;10 compiler assigned registers:
                                           ;   r0x1037
                                           ;   STK00
                                           ;   r0x1038
                                           ;   r0x1039
                                           ;   r0x103A
                                           ;   STK02
                                           ;   STK01
                                           ;   r0x103B
                                           ;   r0x103C
                                           ;   r0x103D
                                           ;; Starting pCode block
                                           S_main__dec_to_ascii	code
                                           _dec_to_ascii:
                                           ; 2 exit points
                                           ;	.line	195; "main.c"	void dec_to_ascii(unsigned short dec)
000195   1283     bcf     0x03, 0x5        	BANKSEL	r0x1037
000196   1303     bcf     0x03, 0x6        
000197   00ad     movwf   0x2d             	MOVWF	r0x1037
000198   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000199   00ac     movwf   0x2c             	MOVWF	r0x1038
                                           ;	.line	200; "main.c"	for (i=0 ; dec!=0; i++)
00019a   1283     bcf     0x03, 0x5        	BANKSEL	_dec_to_ascii_i_1_22
00019b   1303     bcf     0x03, 0x6        
00019c   01c2     clrf    0x42             	CLRF	_dec_to_ascii_i_1_22
                                           _00205_DS_:
00019d   1283     bcf     0x03, 0x5        	BANKSEL	r0x1038
00019e   1303     bcf     0x03, 0x6        
00019f   082c     movf    0x2c, 0x0        	MOVF	r0x1038,W
0001a0   042d     iorwf   0x2d, 0x0        	IORWF	r0x1037,W
0001a1   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0001a2   2a08     goto    0x0208           	GOTO	_00201_DS_
                                           ;	.line	202; "main.c"	number[i]=(dec % 10);
0001a3   1283     bcf     0x03, 0x5        	BANKSEL	_dec_to_ascii_i_1_22
0001a4   1303     bcf     0x03, 0x6        
0001a5   0842     movf    0x42, 0x0        	MOVF	_dec_to_ascii_i_1_22,W
0001a6   3e43     addlw   0x43             	ADDLW	(_dec_to_ascii_number_1_22 + 0)
0001a7   1283     bcf     0x03, 0x5        	BANKSEL	r0x1039
0001a8   1303     bcf     0x03, 0x6        
0001a9   00ae     movwf   0x2e             	MOVWF	r0x1039
0001aa   3000     movlw   0x00             	MOVLW	high (_dec_to_ascii_number_1_22 + 0)
0001ab   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0001ac   3e01     addlw   0x01             	ADDLW	0x01
0001ad   00af     movwf   0x2f             	MOVWF	r0x103A
0001ae   300a     movlw   0x0a             	MOVLW	0x0a
0001af   00fd     movwf   0x7d             	MOVWF	STK02
0001b0   3000     movlw   0x00             	MOVLW	0x00
0001b1   00fe     movwf   0x7e             	MOVWF	STK01
0001b2   082c     movf    0x2c, 0x0        	MOVF	r0x1038,W
0001b3   00ff     movwf   0x7f             	MOVWF	STK00
0001b4   082d     movf    0x2d, 0x0        	MOVF	r0x1037,W
0001b5   118a     bcf     0x0a, 0x3        	PAGESEL	__moduint
0001b6   236c     call    0x036c           	CALL	__moduint
0001b7   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;;1	MOVWF	r0x103B
0001b8   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0001b9   1283     bcf     0x03, 0x5        	BANKSEL	r0x103C
0001ba   1303     bcf     0x03, 0x6        
0001bb   00b0     movwf   0x30             	MOVWF	r0x103C
0001bc   00b1     movwf   0x31             	MOVWF	r0x103D
0001bd   082e     movf    0x2e, 0x0        	MOVF	r0x1039,W
0001be   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0001bf   1303     bcf     0x03, 0x6        
0001c0   0084     movwf   0x04             	MOVWF	FSR
0001c1   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0001c2   1283     bcf     0x03, 0x5        	BANKSEL	r0x103A
0001c3   1303     bcf     0x03, 0x6        
0001c4   182f     btfsc   0x2f, 0x0        	BTFSC	r0x103A,0
0001c5   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0001c6   0831     movf    0x31, 0x0        	MOVF	r0x103D,W
0001c7   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0001c8   1303     bcf     0x03, 0x6        
0001c9   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	203; "main.c"	dec /=10;
0001ca   300a     movlw   0x0a             	MOVLW	0x0a
0001cb   00fd     movwf   0x7d             	MOVWF	STK02
0001cc   3000     movlw   0x00             	MOVLW	0x00
0001cd   00fe     movwf   0x7e             	MOVWF	STK01
0001ce   1283     bcf     0x03, 0x5        	BANKSEL	r0x1038
0001cf   1303     bcf     0x03, 0x6        
0001d0   082c     movf    0x2c, 0x0        	MOVF	r0x1038,W
0001d1   00ff     movwf   0x7f             	MOVWF	STK00
0001d2   082d     movf    0x2d, 0x0        	MOVF	r0x1037,W
0001d3   118a     bcf     0x0a, 0x3        	PAGESEL	__divuint
0001d4   22d1     call    0x02d1           	CALL	__divuint
0001d5   118a     bcf     0x0a, 0x3        	PAGESEL	$
0001d6   1283     bcf     0x03, 0x5        	BANKSEL	r0x1037
0001d7   1303     bcf     0x03, 0x6        
0001d8   00ad     movwf   0x2d             	MOVWF	r0x1037
0001d9   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0001da   00ac     movwf   0x2c             	MOVWF	r0x1038
                                           ;	.line	204; "main.c"	number[i] +=48;
0001db   1283     bcf     0x03, 0x5        	BANKSEL	_dec_to_ascii_i_1_22
0001dc   1303     bcf     0x03, 0x6        
0001dd   0842     movf    0x42, 0x0        	MOVF	_dec_to_ascii_i_1_22,W
0001de   3e43     addlw   0x43             	ADDLW	(_dec_to_ascii_number_1_22 + 0)
0001df   1283     bcf     0x03, 0x5        	BANKSEL	r0x1039
0001e0   1303     bcf     0x03, 0x6        
0001e1   00ae     movwf   0x2e             	MOVWF	r0x1039
0001e2   3000     movlw   0x00             	MOVLW	high (_dec_to_ascii_number_1_22 + 0)
0001e3   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0001e4   3e01     addlw   0x01             	ADDLW	0x01
0001e5   00af     movwf   0x2f             	MOVWF	r0x103A
0001e6   082e     movf    0x2e, 0x0        	MOVF	r0x1039,W
0001e7   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0001e8   1303     bcf     0x03, 0x6        
0001e9   0084     movwf   0x04             	MOVWF	FSR
0001ea   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0001eb   1283     bcf     0x03, 0x5        	BANKSEL	r0x103A
0001ec   1303     bcf     0x03, 0x6        
0001ed   182f     btfsc   0x2f, 0x0        	BTFSC	r0x103A,0
0001ee   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0001ef   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0001f0   1303     bcf     0x03, 0x6        
0001f1   0800     movf    0x00, 0x0        	MOVF	INDF,W
0001f2   1283     bcf     0x03, 0x5        	BANKSEL	r0x103C
0001f3   1303     bcf     0x03, 0x6        
0001f4   00b0     movwf   0x30             	MOVWF	r0x103C
0001f5   3030     movlw   0x30             	MOVLW	0x30
0001f6   07b0     addwf   0x30, 0x1        	ADDWF	r0x103C,F
0001f7   082e     movf    0x2e, 0x0        	MOVF	r0x1039,W
0001f8   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0001f9   1303     bcf     0x03, 0x6        
0001fa   0084     movwf   0x04             	MOVWF	FSR
0001fb   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0001fc   1283     bcf     0x03, 0x5        	BANKSEL	r0x103A
0001fd   1303     bcf     0x03, 0x6        
0001fe   182f     btfsc   0x2f, 0x0        	BTFSC	r0x103A,0
0001ff   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000200   0830     movf    0x30, 0x0        	MOVF	r0x103C,W
000201   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000202   1303     bcf     0x03, 0x6        
000203   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	200; "main.c"	for (i=0 ; dec!=0; i++)
000204   1283     bcf     0x03, 0x5        	BANKSEL	_dec_to_ascii_i_1_22
000205   1303     bcf     0x03, 0x6        
000206   0ac2     incf    0x42, 0x1        	INCF	_dec_to_ascii_i_1_22,F
000207   299d     goto    0x019d           	GOTO	_00205_DS_
                                           _00201_DS_:
                                           ;	.line	206; "main.c"	while (i--)
000208   1283     bcf     0x03, 0x5        	BANKSEL	_dec_to_ascii_i_1_22
000209   1303     bcf     0x03, 0x6        
00020a   0842     movf    0x42, 0x0        	MOVF	_dec_to_ascii_i_1_22,W
00020b   1283     bcf     0x03, 0x5        	BANKSEL	r0x1038
00020c   1303     bcf     0x03, 0x6        
00020d   00ac     movwf   0x2c             	MOVWF	r0x1038
00020e   1283     bcf     0x03, 0x5        	BANKSEL	_dec_to_ascii_i_1_22
00020f   1303     bcf     0x03, 0x6        
000210   03c2     decf    0x42, 0x1        	DECF	_dec_to_ascii_i_1_22,F
000211   1283     bcf     0x03, 0x5        	BANKSEL	r0x1038
000212   1303     bcf     0x03, 0x6        
000213   082c     movf    0x2c, 0x0        	MOVF	r0x1038,W
000214   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000215   2a34     goto    0x0234           	GOTO	_00207_DS_
                                           ;	.line	208; "main.c"	circBufPush(number[i]);	// Add a character to the output buffer
000216   1283     bcf     0x03, 0x5        	BANKSEL	_dec_to_ascii_i_1_22
000217   1303     bcf     0x03, 0x6        
000218   0842     movf    0x42, 0x0        	MOVF	_dec_to_ascii_i_1_22,W
000219   3e43     addlw   0x43             	ADDLW	(_dec_to_ascii_number_1_22 + 0)
00021a   1283     bcf     0x03, 0x5        	BANKSEL	r0x1038
00021b   1303     bcf     0x03, 0x6        
00021c   00ac     movwf   0x2c             	MOVWF	r0x1038
00021d   3000     movlw   0x00             	MOVLW	high (_dec_to_ascii_number_1_22 + 0)
00021e   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00021f   3e01     addlw   0x01             	ADDLW	0x01
000220   00ad     movwf   0x2d             	MOVWF	r0x1037
000221   082c     movf    0x2c, 0x0        	MOVF	r0x1038,W
000222   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000223   1303     bcf     0x03, 0x6        
000224   0084     movwf   0x04             	MOVWF	FSR
000225   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000226   1283     bcf     0x03, 0x5        	BANKSEL	r0x1037
000227   1303     bcf     0x03, 0x6        
000228   182d     btfsc   0x2d, 0x0        	BTFSC	r0x1037,0
000229   1783     bsf     0x03, 0x7        	BSF	STATUS,7
00022a   1283     bcf     0x03, 0x5        	BANKSEL	INDF
00022b   1303     bcf     0x03, 0x6        
00022c   0800     movf    0x00, 0x0        	MOVF	INDF,W
00022d   1283     bcf     0x03, 0x5        	BANKSEL	r0x1039
00022e   1303     bcf     0x03, 0x6        
00022f   00ae     movwf   0x2e             	MOVWF	r0x1039
000230   118a     bcf     0x0a, 0x3        	PAGESEL	_circBufPush
000231   2320     call    0x0320           	CALL	_circBufPush
000232   118a     bcf     0x0a, 0x3        	PAGESEL	$
000233   2a08     goto    0x0208           	GOTO	_00201_DS_
                                           _00207_DS_:
000234   0008     return                   	RETURN	
                                           ; exit point of _dec_to_ascii
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _SP_send_error
                                           ;   _SP_send_error
                                           ;7 compiler assigned registers:
                                           ;   r0x102A
                                           ;   r0x102B
                                           ;   r0x102C
                                           ;   r0x102D
                                           ;   r0x102E
                                           ;   STK01
                                           ;   STK00
                                           ;; Starting pCode block
                                           S_main__circBufPush	code
                                           _circBufPush:
                                           ; 2 exit points
                                           ;	.line	166; "main.c"	int circBufPush(uint8_t data){
000320   1283     bcf     0x03, 0x5        	BANKSEL	r0x102A
000321   1303     bcf     0x03, 0x6        
000322   00a7     movwf   0x27             	MOVWF	r0x102A
                                           ;	.line	167; "main.c"	uint8_t next = buf_head + 1;
000323   1683     bsf     0x03, 0x5        	BANKSEL	_buf_head
000324   1303     bcf     0x03, 0x6        
000325   0a2b     incf    0x2b, 0x0        	INCF	_buf_head,W
000326   1283     bcf     0x03, 0x5        	BANKSEL	r0x102B
000327   1303     bcf     0x03, 0x6        
000328   00a8     movwf   0x28             	MOVWF	r0x102B
                                           ;;unsigned compare: left < lit(0x10=16), size=1
                                           ;	.line	168; "main.c"	if (next >= BUF_SIZE)
000329   3010     movlw   0x10             	MOVLW	0x10
                                           ;	.line	169; "main.c"	next = 0;
00032a   0228     subwf   0x28, 0x0        	SUBWF	r0x102B,W
                                           ;	.line	172; "main.c"	if (next == buf_tail){
00032b   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00032c   01a8     clrf    0x28             	CLRF	r0x102B
00032d   1683     bsf     0x03, 0x5        	BANKSEL	_buf_tail
00032e   1303     bcf     0x03, 0x6        
00032f   082c     movf    0x2c, 0x0        	MOVF	_buf_tail,W
000330   1283     bcf     0x03, 0x5        	BANKSEL	r0x102B
000331   1303     bcf     0x03, 0x6        
000332   0628     xorwf   0x28, 0x0        	XORWF	r0x102B,W
000333   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000334   2b47     goto    0x0347           	GOTO	_00194_DS_
                                           ;	.line	173; "main.c"	SP_send_error(buf_err);
000335   3004     movlw   0x04             	MOVLW	high (_buf_err + 0)
000336   00aa     movwf   0x2a             	MOVWF	r0x102C
000337   30a7     movlw   0xa7             	MOVLW	(_buf_err + 0)
000338   00a9     movwf   0x29             	MOVWF	r0x102D
000339   3080     movlw   0x80             	MOVLW	0x80
00033a   00ab     movwf   0x2b             	MOVWF	r0x102E
00033b   0829     movf    0x29, 0x0        	MOVF	r0x102D,W
00033c   00fe     movwf   0x7e             	MOVWF	STK01
00033d   082a     movf    0x2a, 0x0        	MOVF	r0x102C,W
00033e   00ff     movwf   0x7f             	MOVWF	STK00
00033f   082b     movf    0x2b, 0x0        	MOVF	r0x102E,W
000340   118a     bcf     0x0a, 0x3        	PAGESEL	_SP_send_error
000341   23af     call    0x03af           	CALL	_SP_send_error
000342   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	174; "main.c"	return -1;  // quit with an error
000343   30ff     movlw   0xff             	MOVLW	0xff
000344   00ff     movwf   0x7f             	MOVWF	STK00
000345   30ff     movlw   0xff             	MOVLW	0xff
000346   2b6b     goto    0x036b           	GOTO	_00195_DS_
                                           _00194_DS_:
                                           ;	.line	177; "main.c"	buf[buf_head] = data;
000347   1683     bsf     0x03, 0x5        	BANKSEL	_buf_head
000348   1303     bcf     0x03, 0x6        
000349   082b     movf    0x2b, 0x0        	MOVF	_buf_head,W
00034a   3e47     addlw   0x47             	ADDLW	(_buf + 0)
00034b   1283     bcf     0x03, 0x5        	BANKSEL	r0x102D
00034c   1303     bcf     0x03, 0x6        
00034d   00a9     movwf   0x29             	MOVWF	r0x102D
00034e   3000     movlw   0x00             	MOVLW	high (_buf + 0)
00034f   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000350   3e01     addlw   0x01             	ADDLW	0x01
000351   00aa     movwf   0x2a             	MOVWF	r0x102C
000352   0829     movf    0x29, 0x0        	MOVF	r0x102D,W
000353   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000354   1303     bcf     0x03, 0x6        
000355   0084     movwf   0x04             	MOVWF	FSR
000356   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000357   1283     bcf     0x03, 0x5        	BANKSEL	r0x102C
000358   1303     bcf     0x03, 0x6        
000359   182a     btfsc   0x2a, 0x0        	BTFSC	r0x102C,0
00035a   1783     bsf     0x03, 0x7        	BSF	STATUS,7
00035b   0827     movf    0x27, 0x0        	MOVF	r0x102A,W
00035c   1283     bcf     0x03, 0x5        	BANKSEL	INDF
00035d   1303     bcf     0x03, 0x6        
00035e   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	178; "main.c"	buf_head = next;
00035f   1283     bcf     0x03, 0x5        	BANKSEL	r0x102B
000360   1303     bcf     0x03, 0x6        
000361   0828     movf    0x28, 0x0        	MOVF	r0x102B,W
000362   1683     bsf     0x03, 0x5        	BANKSEL	_buf_head
000363   1303     bcf     0x03, 0x6        
000364   00ab     movwf   0x2b             	MOVWF	_buf_head
                                           ;	.line	179; "main.c"	TXIE = 1;       //Enables the EUSART transmit interrupt
000365   1683     bsf     0x03, 0x5        	BANKSEL	_PIE1bits
000366   1303     bcf     0x03, 0x6        
000367   160c     bsf     0x0c, 0x4        	BSF	_PIE1bits,4
                                           ;	.line	180; "main.c"	return 0;
000368   3000     movlw   0x00             	MOVLW	0x00
000369   00ff     movwf   0x7f             	MOVWF	STK00
00036a   3000     movlw   0x00             	MOVLW	0x00
                                           _00195_DS_:
00036b   0008     return                   	RETURN	
                                           ; exit point of _circBufPush
                                           
                                           
                                           ;	code size estimation:
                                           ;	  452+  158 =   610 instructions ( 1536 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.0 #9615 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"init.c"
                                           	list	p=16f690
                                           	radix dec
                                           	include "p16f690.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F690 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_PWM1CONbits
                                           	extern	_ECCPASbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_OSCCONbits
                                           	extern	_OSCTUNEbits
                                           	extern	_MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSPSTATbits
                                           	extern	_WPUbits
                                           	extern	_WPUAbits
                                           	extern	_IOCbits
                                           	extern	_IOCAbits
                                           	extern	_WDTCONbits
                                           	extern	_TXSTAbits
                                           	extern	_SPBRGbits
                                           	extern	_SPBRGHbits
                                           	extern	_BAUDCTLbits
                                           	extern	_ADCON1bits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_VRCONbits
                                           	extern	_CM1CON0bits
                                           	extern	_CM2CON0bits
                                           	extern	_CM2CON1bits
                                           	extern	_ANSELbits
                                           	extern	_ANSELHbits
                                           	extern	_EECON1bits
                                           	extern	_PSTRCONbits
                                           	extern	_SRCONbits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_PWM1CON
                                           	extern	_ECCPAS
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_OSCCON
                                           	extern	_OSCTUNE
                                           	extern	_PR2
                                           	extern	_MSK
                                           	extern	_SSPADD
                                           	extern	_SSPMSK
                                           	extern	_SSPSTAT
                                           	extern	_WPU
                                           	extern	_WPUA
                                           	extern	_IOC
                                           	extern	_IOCA
                                           	extern	_WDTCON
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_BAUDCTL
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDAT
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_VRCON
                                           	extern	_CM1CON0
                                           	extern	_CM2CON0
                                           	extern	_CM2CON1
                                           	extern	_ANSEL
                                           	extern	_ANSELH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_PSTRCON
                                           	extern	_SRCON
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_init
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_init	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;; Starting pCode block
                                           S_init__init	code
                                           _init:
                                           ; 2 exit points
                                           ;	.line	8; "init.c"	ADC2_TRIS = 1;
00044a   1683     bsf     0x03, 0x5        	BANKSEL	_TRISAbits
00044b   1303     bcf     0x03, 0x6        
00044c   1505     bsf     0x05, 0x2        	BSF	_TRISAbits,2
                                           ;	.line	9; "init.c"	ADC4_TRIS = 1;
00044d   1605     bsf     0x05, 0x4        	BSF	_TRISAbits,4
                                           ;	.line	11; "init.c"	RCIN_TRIS=1;            //Input
00044e   1687     bsf     0x07, 0x5        	BSF	_TRISCbits,5
                                           ;	.line	13; "init.c"	TX_TRIS=0;               // These need to be 0 for USART to work
00044f   1386     bcf     0x06, 0x7        	BCF	_TRISBbits,7
                                           ;	.line	14; "init.c"	RX_TRIS=1;               // These need to be 1 for USART to work
000450   1686     bsf     0x06, 0x5        	BSF	_TRISBbits,5
                                           ;	.line	15; "init.c"	ADCON1=0x50;             //ADC Settings
000451   3050     movlw   0x50             	MOVLW	0x50
000452   009f     movwf   0x1f             	MOVWF	_ADCON1
                                           ;	.line	16; "init.c"	ANS11=0;                 // Turn off Analog input it necessary to function serial port RX
000453   1283     bcf     0x03, 0x5        	BANKSEL	_ANSELHbits
000454   1703     bsf     0x03, 0x6        
000455   119f     bcf     0x1f, 0x3        	BCF	_ANSELHbits,3
                                           ;	.line	17; "init.c"	ANS10=0;
000456   111f     bcf     0x1f, 0x2        	BCF	_ANSELHbits,2
                                           ;	.line	18; "init.c"	ANS7=0;
000457   139e     bcf     0x1e, 0x7        	BCF	_ANSELbits,7
                                           ;	.line	19; "init.c"	ANS8=0;
000458   101f     bcf     0x1f, 0x0        	BCF	_ANSELHbits,0
                                           ;	.line	20; "init.c"	ANS9=0;
000459   109f     bcf     0x1f, 0x1        	BCF	_ANSELHbits,1
                                           ;	.line	21; "init.c"	ANS4=0;
00045a   121e     bcf     0x1e, 0x4        	BCF	_ANSELbits,4
                                           ;	.line	22; "init.c"	ANS2=1;                      //Zapnuti Analogovych vstupu
00045b   151e     bsf     0x1e, 0x2        	BSF	_ANSELbits,2
                                           ;	.line	23; "init.c"	ANS3=1;
00045c   159e     bsf     0x1e, 0x3        	BSF	_ANSELbits,3
                                           ;	.line	26; "init.c"	SPBRG=8;                // Baud Rate
00045d   3008     movlw   0x08             	MOVLW	0x08
00045e   1683     bsf     0x03, 0x5        	BANKSEL	_SPBRG
00045f   1303     bcf     0x03, 0x6        
000460   0099     movwf   0x19             	MOVWF	_SPBRG
                                           ;	.line	27; "init.c"	BRGH=1;                 // 115.2k
000461   1518     bsf     0x18, 0x2        	BSF	_TXSTAbits,2
                                           ;	.line	28; "init.c"	BRG16=1;
000462   159b     bsf     0x1b, 0x3        	BSF	_BAUDCTLbits,3
                                           ;	.line	30; "init.c"	TXEN=1;			// Enable transmission mode
000463   1698     bsf     0x18, 0x5        	BSF	_TXSTAbits,5
                                           ;	.line	31; "init.c"	SYNC=0;			// Disable Synchronous/Enable Asynchronous
000464   1218     bcf     0x18, 0x4        	BCF	_TXSTAbits,4
                                           ;	.line	32; "init.c"	SPEN=1;			// Enable serial port
000465   1283     bcf     0x03, 0x5        	BANKSEL	_RCSTAbits
000466   1303     bcf     0x03, 0x6        
000467   1798     bsf     0x18, 0x7        	BSF	_RCSTAbits,7
                                           ;	.line	46; "init.c"	CCP1CON = 5; // Setup ENHANCED CAPTURE MODULE
000468   3005     movlw   0x05             	MOVLW	0x05
000469   0097     movwf   0x17             	MOVWF	_CCP1CON
                                           ;	.line	47; "init.c"	CCP1IE = 0;     // ENHANCED CAPTURE MODULE Interrupt Disabled
00046a   1683     bsf     0x03, 0x5        	BANKSEL	_PIE1bits
00046b   1303     bcf     0x03, 0x6        
00046c   110c     bcf     0x0c, 0x2        	BCF	_PIE1bits,2
                                           ;	.line	53; "init.c"	T1CON = 0;  // TIMER1 presccaler 1
00046d   1283     bcf     0x03, 0x5        	BANKSEL	_T1CON
00046e   1303     bcf     0x03, 0x6        
00046f   0190     clrf    0x10             	CLRF	_T1CON
                                           ;	.line	55; "init.c"	PEIE = 1;       // Enable peripheral interrupts.
000470   170b     bsf     0x0b, 0x6        	BSF	_INTCONbits,6
                                           ;	.line	56; "init.c"	GIE = 1;	// Enable all interrupts.
000471   178b     bsf     0x0b, 0x7        	BSF	_INTCONbits,7
                                           ;	.line	59; "init.c"	TMR1H = 0;
000472   018f     clrf    0x0f             	CLRF	_TMR1H
                                           ;	.line	60; "init.c"	TMR1L = 0;
000473   018e     clrf    0x0e             	CLRF	_TMR1L
                                           ;	.line	61; "init.c"	CCP1IE = 1;
000474   1683     bsf     0x03, 0x5        	BANKSEL	_PIE1bits
000475   1303     bcf     0x03, 0x6        
000476   150c     bsf     0x0c, 0x2        	BSF	_PIE1bits,2
                                           ;	.line	62; "init.c"	TMR1ON = 1;
000477   1283     bcf     0x03, 0x5        	BANKSEL	_T1CONbits
000478   1303     bcf     0x03, 0x6        
000479   1410     bsf     0x10, 0x0        	BSF	_T1CONbits,0
00047a   0008     return                   	RETURN	
                                           ; exit point of _init
                                           
                                           
                                           ;	code size estimation:
                                           ;	   33+    8 =    41 instructions (   98 byte)
                                           
                                           	end
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F690 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST

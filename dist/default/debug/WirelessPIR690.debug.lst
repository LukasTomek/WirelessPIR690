gplink-1.4.0 #1107 (May  9 2015)
Copyright (c) 1998-2014 gputils project
Listing File Generated: 1-5-2017  21:15:55
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.0 #9615 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"main.c"
                                           	list	p=16f690
                                           	radix dec
                                           	include "p16f690.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F690 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; config word(s)
                                           ;--------------------------------------------------------
002007   3fd4     addlw   0xd4             	__config 0x3fd4
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_init
                                           	extern	__moduint
                                           	extern	__divuint
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_PWM1CONbits
                                           	extern	_ECCPASbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_OSCCONbits
                                           	extern	_OSCTUNEbits
                                           	extern	_MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSPSTATbits
                                           	extern	_WPUbits
                                           	extern	_WPUAbits
                                           	extern	_IOCbits
                                           	extern	_IOCAbits
                                           	extern	_WDTCONbits
                                           	extern	_TXSTAbits
                                           	extern	_SPBRGbits
                                           	extern	_SPBRGHbits
                                           	extern	_BAUDCTLbits
                                           	extern	_ADCON1bits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_VRCONbits
                                           	extern	_CM1CON0bits
                                           	extern	_CM2CON0bits
                                           	extern	_CM2CON1bits
                                           	extern	_ANSELbits
                                           	extern	_ANSELHbits
                                           	extern	_EECON1bits
                                           	extern	_PSTRCONbits
                                           	extern	_SRCONbits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_PWM1CON
                                           	extern	_ECCPAS
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_OSCCON
                                           	extern	_OSCTUNE
                                           	extern	_PR2
                                           	extern	_MSK
                                           	extern	_SSPADD
                                           	extern	_SSPMSK
                                           	extern	_SSPSTAT
                                           	extern	_WPU
                                           	extern	_WPUA
                                           	extern	_IOC
                                           	extern	_IOCA
                                           	extern	_WDTCON
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_BAUDCTL
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDAT
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_VRCON
                                           	extern	_CM1CON0
                                           	extern	_CM2CON0
                                           	extern	_CM2CON1
                                           	extern	_ANSEL
                                           	extern	_ANSELH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_PSTRCON
                                           	extern	_SRCON
                                           	extern	___sdcc_saved_fsr
                                           	extern	__gptrget1
                                           	extern	__sdcc_gsinit_startup
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_SP_send_error
                                           	global	_SP_send
                                           	global	_dec_to_ascii
                                           	global	_circBufPush
                                           	global	_receive_intr
                                           	global	_main
                                           	global	_bitfield
                                           	global	_w
                                           	global	_t
                                           	global	_w1
                                           	global	_t1
                                           	global	_buf
                                           	global	_buf_head
                                           	global	_buf_tail
                                           	global	_int_error_cnt
                                           	global	_strV0
                                           	global	_strV1
                                           	global	_strVF
                                           	global	_strw
                                           	global	_strt
                                           	global	_strw1
                                           	global	_strt1
                                           	global	_tab
                                           	global	_enter
                                           	global	_sync
                                           	global	_int_err
                                           	global	_buf_err
                                           
                                           	global PSAVE
                                           	global SSAVE
                                           	global WSAVE
                                           	global STK12
                                           	global STK11
                                           	global STK10
                                           	global STK09
                                           	global STK08
                                           	global STK07
                                           	global STK06
                                           	global STK05
                                           	global STK04
                                           	global STK03
                                           	global STK02
                                           	global STK01
                                           	global STK00
                                           
                                           sharebank udata_ovr 0x0070
                                           PSAVE	res 1
                                           SSAVE	res 1
                                           WSAVE	res 1
                                           STK12	res 1
                                           STK11	res 1
                                           STK10	res 1
                                           STK09	res 1
                                           STK08	res 1
                                           STK07	res 1
                                           STK06	res 1
                                           STK05	res 1
                                           STK04	res 1
                                           STK03	res 1
                                           STK02	res 1
                                           STK01	res 1
                                           STK00	res 1
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           UD_main_0	udata
                                           _bitfield	res	1
                                           
                                           UD_main_1	udata
                                           _buf	res	16
                                           
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_main_0	udata
                                           r0x103C	res	1
                                           r0x103D	res	1
                                           r0x103E	res	1
                                           r0x1038	res	1
                                           r0x103A	res	1
                                           r0x1039	res	1
                                           r0x103B	res	1
                                           r0x1025	res	1
                                           r0x1026	res	1
                                           r0x1028	res	1
                                           r0x1027	res	1
                                           r0x1029	res	1
                                           r0x1033	res	1
                                           r0x1032	res	1
                                           r0x1034	res	1
                                           r0x1037	res	1
                                           r0x102C	res	1
                                           r0x102B	res	1
                                           r0x102A	res	1
                                           r0x102D	res	1
                                           r0x102E	res	1
                                           r0x102F	res	1
                                           r0x1030	res	1
                                           r0x1031	res	1
                                           r0x101F	res	1
                                           r0x101E	res	1
                                           r0x101D	res	1
                                           r0x1020	res	1
                                           r0x1021	res	1
                                           r0x1022	res	1
                                           r0x1023	res	1
                                           r0x1024	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           
                                           ID_main_0	idata
                                           _w
                                           	db	0x00, 0x00
                                           
                                           
                                           ID_main_1	idata
                                           _t
                                           	db	0x00, 0x00
                                           
                                           
                                           ID_main_2	idata
                                           _w1
                                           	db	0x00, 0x00
                                           
                                           
                                           ID_main_3	idata
                                           _t1
                                           	db	0x00, 0x00
                                           
                                           
                                           ID_main_4	idata
                                           _buf_head
                                           	db	0x00
                                           
                                           
                                           ID_main_5	idata
                                           _buf_tail
                                           	db	0x00
                                           
                                           
                                           ID_main_6	idata
                                           _int_error_cnt
                                           	db	0x00
                                           
                                           
                                           ID_main_7	code
                                           _strV0
000432   3430     retlw   0x30             	retlw 0x30
000433   3420     retlw   0x20             	retlw 0x20
000434   340a     retlw   0x0a             	retlw 0x0a
000435   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_8	code
                                           _strV1
000436   3431     retlw   0x31             	retlw 0x31
000437   3420     retlw   0x20             	retlw 0x20
000438   340a     retlw   0x0a             	retlw 0x0a
000439   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_9	code
                                           _strVF
00043a   3446     retlw   0x46             	retlw 0x46
00043b   3420     retlw   0x20             	retlw 0x20
00043c   340a     retlw   0x0a             	retlw 0x0a
00043d   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_10	code
                                           _strw
00043e   3477     retlw   0x77             	retlw 0x77
00043f   343a     retlw   0x3a             	retlw 0x3a
000440   3420     retlw   0x20             	retlw 0x20
000441   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_11	code
                                           _strt
000442   3474     retlw   0x74             	retlw 0x74
000443   343a     retlw   0x3a             	retlw 0x3a
000444   3420     retlw   0x20             	retlw 0x20
000445   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_12	code
                                           _strw1
000428   3477     retlw   0x77             	retlw 0x77
000429   3431     retlw   0x31             	retlw 0x31
00042a   343a     retlw   0x3a             	retlw 0x3a
00042b   3420     retlw   0x20             	retlw 0x20
00042c   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_13	code
                                           _strt1
00042d   3474     retlw   0x74             	retlw 0x74
00042e   3431     retlw   0x31             	retlw 0x31
00042f   343a     retlw   0x3a             	retlw 0x3a
000430   3420     retlw   0x20             	retlw 0x20
000431   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_14	code
                                           _tab
00044e   3409     retlw   0x09             	retlw 0x09
00044f   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_15	code
                                           _enter
000450   340a     retlw   0x0a             	retlw 0x0a
000451   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_16	code
                                           _sync
000422   3453     retlw   0x53             	retlw 0x53
000423   3459     retlw   0x59             	retlw 0x59
000424   344e     retlw   0x4e             	retlw 0x4e
000425   3443     retlw   0x43             	retlw 0x43
000426   340a     retlw   0x0a             	retlw 0x0a
000427   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_17	code
                                           _int_err
000419   3449     retlw   0x49             	retlw 0x49
00041a   344e     retlw   0x4e             	retlw 0x4e
00041b   3454     retlw   0x54             	retlw 0x54
00041c   3420     retlw   0x20             	retlw 0x20
00041d   3445     retlw   0x45             	retlw 0x45
00041e   3452     retlw   0x52             	retlw 0x52
00041f   3452     retlw   0x52             	retlw 0x52
000420   340a     retlw   0x0a             	retlw 0x0a
000421   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_18	code
                                           _buf_err
000408   3442     retlw   0x42             	retlw 0x42
000409   3455     retlw   0x55             	retlw 0x55
00040a   3446     retlw   0x46             	retlw 0x46
00040b   3446     retlw   0x46             	retlw 0x46
00040c   3445     retlw   0x45             	retlw 0x45
00040d   3452     retlw   0x52             	retlw 0x52
00040e   3420     retlw   0x20             	retlw 0x20
00040f   344f     retlw   0x4f             	retlw 0x4f
000410   3457     retlw   0x57             	retlw 0x57
000411   3445     retlw   0x45             	retlw 0x45
000412   3452     retlw   0x52             	retlw 0x52
000413   3446     retlw   0x46             	retlw 0x46
000414   344c     retlw   0x4c             	retlw 0x4c
000415   344f     retlw   0x4f             	retlw 0x4f
000416   3457     retlw   0x57             	retlw 0x57
000417   340a     retlw   0x0a             	retlw 0x0a
000418   3400     retlw   0x00             	retlw 0x00
                                           
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; reset vector 
                                           ;--------------------------------------------------------
                                           STARTUP	code 0x0000
000000   0000     nop                      	nop
000001   118a     bcf     0x0a, 0x3        	pagesel __sdcc_gsinit_startup
000002   28cb     goto    0x00cb           	goto	__sdcc_gsinit_startup
                                           ;--------------------------------------------------------
                                           ; interrupt and initialization code
                                           ;--------------------------------------------------------
                                           c_interrupt	code	0x0004
                                           __sdcc_interrupt:
                                           ;***
                                           ;  pBlock Stats: dbName = I
                                           ;***
                                           ;functions called:
                                           ;   _SP_send_error
                                           ;   _SP_send_error
                                           ;5 compiler assigned registers:
                                           ;   r0x103C
                                           ;   r0x103D
                                           ;   r0x103E
                                           ;   STK01
                                           ;   STK00
                                           ;; Starting pCode block
                                           _receive_intr:
                                           ; 0 exit points
                                           ;	.line	84; "main.c"	void receive_intr() __interrupt 0 {
000004   00f2     movwf   0x72             	MOVWF	WSAVE
000005   0e03     swapf   0x03, 0x0        	SWAPF	STATUS,W
000006   0183     clrf    0x03             	CLRF	STATUS
000007   00f1     movwf   0x71             	MOVWF	SSAVE
000008   080a     movf    0x0a, 0x0        	MOVF	PCLATH,W
000009   018a     clrf    0x0a             	CLRF	PCLATH
00000a   00f0     movwf   0x70             	MOVWF	PSAVE
00000b   0804     movf    0x04, 0x0        	MOVF	FSR,W
00000c   1683     bsf     0x03, 0x5        	BANKSEL	___sdcc_saved_fsr
00000d   1303     bcf     0x03, 0x6        
00000e   00a8     movwf   0x28             	MOVWF	___sdcc_saved_fsr
                                           ;	.line	86; "main.c"	if(TXIF){
00000f   1283     bcf     0x03, 0x5        	BANKSEL	_PIR1bits
000010   1303     bcf     0x03, 0x6        
000011   1e0c     btfss   0x0c, 0x4        	BTFSS	_PIR1bits,4
000012   2863     goto    0x0063           	GOTO	_00111_DS_
                                           ;	.line	88; "main.c"	if (buf_head == buf_tail){
000013   1683     bsf     0x03, 0x5        	BANKSEL	_buf_tail
000014   1303     bcf     0x03, 0x6        
000015   0826     movf    0x26, 0x0        	MOVF	_buf_tail,W
000016   1683     bsf     0x03, 0x5        	BANKSEL	_buf_head
000017   1303     bcf     0x03, 0x6        
000018   0625     xorwf   0x25, 0x0        	XORWF	_buf_head,W
000019   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00001a   281f     goto    0x001f           	GOTO	_00108_DS_
                                           ;	.line	89; "main.c"	TXIE = 0;
00001b   1683     bsf     0x03, 0x5        	BANKSEL	_PIE1bits
00001c   1303     bcf     0x03, 0x6        
00001d   120c     bcf     0x0c, 0x4        	BCF	_PIE1bits,4
00001e   2863     goto    0x0063           	GOTO	_00111_DS_
                                           _00108_DS_:
                                           ;	.line	94; "main.c"	TXREG = buf[buf_tail];
00001f   1683     bsf     0x03, 0x5        	BANKSEL	_buf_tail
000020   1303     bcf     0x03, 0x6        
000021   0826     movf    0x26, 0x0        	MOVF	_buf_tail,W
000022   3e40     addlw   0x40             	ADDLW	(_buf + 0)
000023   1283     bcf     0x03, 0x5        	BANKSEL	r0x103C
000024   1303     bcf     0x03, 0x6        
000025   00a0     movwf   0x20             	MOVWF	r0x103C
000026   3000     movlw   0x00             	MOVLW	high (_buf + 0)
000027   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000028   3e01     addlw   0x01             	ADDLW	0x01
000029   00a1     movwf   0x21             	MOVWF	r0x103D
00002a   0820     movf    0x20, 0x0        	MOVF	r0x103C,W
00002b   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00002c   1303     bcf     0x03, 0x6        
00002d   0084     movwf   0x04             	MOVWF	FSR
00002e   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00002f   1283     bcf     0x03, 0x5        	BANKSEL	r0x103D
000030   1303     bcf     0x03, 0x6        
000031   1821     btfsc   0x21, 0x0        	BTFSC	r0x103D,0
000032   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000033   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000034   1303     bcf     0x03, 0x6        
000035   0800     movf    0x00, 0x0        	MOVF	INDF,W
000036   0099     movwf   0x19             	MOVWF	_TXREG
                                           ;	.line	95; "main.c"	buf[buf_tail] = 0;  // clear the data (optional)
000037   1283     bcf     0x03, 0x5        	BANKSEL	r0x103C
000038   1303     bcf     0x03, 0x6        
000039   0820     movf    0x20, 0x0        	MOVF	r0x103C,W
00003a   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00003b   1303     bcf     0x03, 0x6        
00003c   0084     movwf   0x04             	MOVWF	FSR
00003d   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00003e   1283     bcf     0x03, 0x5        	BANKSEL	r0x103D
00003f   1303     bcf     0x03, 0x6        
000040   1821     btfsc   0x21, 0x0        	BTFSC	r0x103D,0
000041   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000042   3000     movlw   0x00             	MOVLW	0x00
000043   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000044   1303     bcf     0x03, 0x6        
000045   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	97; "main.c"	next = buf_tail + 1;
000046   1683     bsf     0x03, 0x5        	BANKSEL	_buf_tail
000047   1303     bcf     0x03, 0x6        
000048   0826     movf    0x26, 0x0        	MOVF	_buf_tail,W
000049   1283     bcf     0x03, 0x5        	BANKSEL	r0x103C
00004a   1303     bcf     0x03, 0x6        
00004b   00a0     movwf   0x20             	MOVWF	r0x103C
00004c   01a1     clrf    0x21             	CLRF	r0x103D
00004d   0aa0     incf    0x20, 0x1        	INCF	r0x103C,F
00004e   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00004f   0aa1     incf    0x21, 0x1        	INCF	r0x103D,F
                                           ;;signed compare: left < lit(0x10=16), size=2, mask=ffff
                                           ;	.line	98; "main.c"	if(next >= BUF_SIZE)
000050   0821     movf    0x21, 0x0        	MOVF	r0x103D,W
000051   3e80     addlw   0x80             	ADDLW	0x80
000052   3e80     addlw   0x80             	ADDLW	0x80
000053   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000054   2857     goto    0x0057           	GOTO	_00139_DS_
000055   3010     movlw   0x10             	MOVLW	0x10
000056   0220     subwf   0x20, 0x0        	SUBWF	r0x103C,W
                                           _00139_DS_:
000057   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000058   285d     goto    0x005d           	GOTO	_00106_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffd407d8f20
                                           ;	.line	99; "main.c"	next = 0;
000059   1283     bcf     0x03, 0x5        	BANKSEL	r0x103C
00005a   1303     bcf     0x03, 0x6        
00005b   01a0     clrf    0x20             	CLRF	r0x103C
00005c   01a1     clrf    0x21             	CLRF	r0x103D
                                           _00106_DS_:
                                           ;	.line	101; "main.c"	buf_tail = next;
00005d   1283     bcf     0x03, 0x5        	BANKSEL	r0x103C
00005e   1303     bcf     0x03, 0x6        
00005f   0820     movf    0x20, 0x0        	MOVF	r0x103C,W
000060   1683     bsf     0x03, 0x5        	BANKSEL	_buf_tail
000061   1303     bcf     0x03, 0x6        
000062   00a6     movwf   0x26             	MOVWF	_buf_tail
                                           _00111_DS_:
                                           ;	.line	105; "main.c"	if(CCP1IF){
000063   1283     bcf     0x03, 0x5        	BANKSEL	_PIR1bits
000064   1303     bcf     0x03, 0x6        
000065   1d0c     btfss   0x0c, 0x2        	BTFSS	_PIR1bits,2
000066   28a6     goto    0x00a6           	GOTO	_00116_DS_
                                           ;	.line	108; "main.c"	if(CCP1M0){                     // if ECCP mode is Rising edge CCP1M0
000067   1c17     btfss   0x17, 0x0        	BTFSS	_CCP1CONbits,0
000068   2888     goto    0x0088           	GOTO	_00113_DS_
                                           ;	.line	109; "main.c"	CCP1M0 = FALING;                 // set falling edge
000069   1017     bcf     0x17, 0x0        	BCF	_CCP1CONbits,0
                                           ;	.line	110; "main.c"	TMR1H = 0;
00006a   018f     clrf    0x0f             	CLRF	_TMR1H
                                           ;	.line	111; "main.c"	TMR1L = 0;
00006b   018e     clrf    0x0e             	CLRF	_TMR1L
                                           ;	.line	112; "main.c"	t = 0x0000 | CCPR1H;        //ECCP result higher 8 bits
00006c   0816     movf    0x16, 0x0        	MOVF	_CCPR1H,W
00006d   1283     bcf     0x03, 0x5        	BANKSEL	r0x103C
00006e   1303     bcf     0x03, 0x6        
00006f   00a0     movwf   0x20             	MOVWF	r0x103C
000070   1283     bcf     0x03, 0x5        	BANKSEL	_t
000071   1303     bcf     0x03, 0x6        
000072   00ed     movwf   0x6d             	MOVWF	_t
000073   01ee     clrf    0x6e             	CLRF	(_t + 1)
                                           ;	.line	113; "main.c"	t = t << 8;
000074   086d     movf    0x6d, 0x0        	MOVF	_t,W
000075   00ee     movwf   0x6e             	MOVWF	(_t + 1)
000076   01ed     clrf    0x6d             	CLRF	_t
                                           ;	.line	114; "main.c"	t = t | CCPR1L;             //ECCP combined 16 bit number formation
000077   1283     bcf     0x03, 0x5        	BANKSEL	_CCPR1L
000078   1303     bcf     0x03, 0x6        
000079   0815     movf    0x15, 0x0        	MOVF	_CCPR1L,W
00007a   1283     bcf     0x03, 0x5        	BANKSEL	r0x103C
00007b   1303     bcf     0x03, 0x6        
00007c   00a0     movwf   0x20             	MOVWF	r0x103C
00007d   01a1     clrf    0x21             	CLRF	r0x103D
00007e   0820     movf    0x20, 0x0        	MOVF	r0x103C,W
00007f   1283     bcf     0x03, 0x5        	BANKSEL	_t
000080   1303     bcf     0x03, 0x6        
000081   04ed     iorwf   0x6d, 0x1        	IORWF	_t,F
000082   3000     movlw   0x00             	MOVLW	0x00
000083   04ee     iorwf   0x6e, 0x1        	IORWF	(_t + 1),F
                                           ;	.line	115; "main.c"	bitfield.Capture = TRUE;
000084   1683     bsf     0x03, 0x5        	BANKSEL	_bitfield
000085   1303     bcf     0x03, 0x6        
000086   1424     bsf     0x24, 0x0        	BSF	_bitfield,0
000087   28a3     goto    0x00a3           	GOTO	_00114_DS_
                                           _00113_DS_:
                                           ;	.line	118; "main.c"	CCP1M0 = RISING;
000088   1283     bcf     0x03, 0x5        	BANKSEL	_CCP1CONbits
000089   1303     bcf     0x03, 0x6        
00008a   1417     bsf     0x17, 0x0        	BSF	_CCP1CONbits,0
                                           ;	.line	119; "main.c"	w = 0x0000 | CCPR1H;        //ECCP result higher 8 bits
00008b   0816     movf    0x16, 0x0        	MOVF	_CCPR1H,W
00008c   1283     bcf     0x03, 0x5        	BANKSEL	r0x103C
00008d   1303     bcf     0x03, 0x6        
00008e   00a0     movwf   0x20             	MOVWF	r0x103C
00008f   1283     bcf     0x03, 0x5        	BANKSEL	_w
000090   1303     bcf     0x03, 0x6        
000091   00eb     movwf   0x6b             	MOVWF	_w
000092   01ec     clrf    0x6c             	CLRF	(_w + 1)
                                           ;	.line	120; "main.c"	w = w << 8;
000093   086b     movf    0x6b, 0x0        	MOVF	_w,W
000094   00ec     movwf   0x6c             	MOVWF	(_w + 1)
000095   01eb     clrf    0x6b             	CLRF	_w
                                           ;	.line	121; "main.c"	w = w | CCPR1L;             //ECCP combined 16 bit number formation
000096   1283     bcf     0x03, 0x5        	BANKSEL	_CCPR1L
000097   1303     bcf     0x03, 0x6        
000098   0815     movf    0x15, 0x0        	MOVF	_CCPR1L,W
000099   1283     bcf     0x03, 0x5        	BANKSEL	r0x103C
00009a   1303     bcf     0x03, 0x6        
00009b   00a0     movwf   0x20             	MOVWF	r0x103C
00009c   01a1     clrf    0x21             	CLRF	r0x103D
00009d   0820     movf    0x20, 0x0        	MOVF	r0x103C,W
00009e   1283     bcf     0x03, 0x5        	BANKSEL	_w
00009f   1303     bcf     0x03, 0x6        
0000a0   04eb     iorwf   0x6b, 0x1        	IORWF	_w,F
0000a1   3000     movlw   0x00             	MOVLW	0x00
0000a2   04ec     iorwf   0x6c, 0x1        	IORWF	(_w + 1),F
                                           _00114_DS_:
                                           ;	.line	125; "main.c"	CCP1IF = 0;                     //Clear interrupt flag
0000a3   1283     bcf     0x03, 0x5        	BANKSEL	_PIR1bits
0000a4   1303     bcf     0x03, 0x6        
0000a5   110c     bcf     0x0c, 0x2        	BCF	_PIR1bits,2
                                           _00116_DS_:
                                           ;	.line	127; "main.c"	int_error_cnt++;
0000a6   1683     bsf     0x03, 0x5        	BANKSEL	_int_error_cnt
0000a7   1303     bcf     0x03, 0x6        
0000a8   0aa7     incf    0x27, 0x1        	INCF	_int_error_cnt,F
                                           ;;swapping arguments (AOP_TYPEs 1/3)
                                           ;;unsigned compare: left >= lit(0x65=101), size=1
                                           ;	.line	128; "main.c"	if (int_error_cnt > 100)
0000a9   3065     movlw   0x65             	MOVLW	0x65
0000aa   0227     subwf   0x27, 0x0        	SUBWF	_int_error_cnt,W
0000ab   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0000ac   28bd     goto    0x00bd           	GOTO	_00119_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffd407d8f20
                                           ;	.line	129; "main.c"	SP_send_error(int_err);
0000ad   3004     movlw   0x04             	MOVLW	high (_int_err + 0)
0000ae   1283     bcf     0x03, 0x5        	BANKSEL	r0x103D
0000af   1303     bcf     0x03, 0x6        
0000b0   00a1     movwf   0x21             	MOVWF	r0x103D
0000b1   3019     movlw   0x19             	MOVLW	(_int_err + 0)
0000b2   00a0     movwf   0x20             	MOVWF	r0x103C
0000b3   3080     movlw   0x80             	MOVLW	0x80
0000b4   00a2     movwf   0x22             	MOVWF	r0x103E
0000b5   0820     movf    0x20, 0x0        	MOVF	r0x103C,W
0000b6   00fe     movwf   0x7e             	MOVWF	STK01
0000b7   0821     movf    0x21, 0x0        	MOVF	r0x103D,W
0000b8   00ff     movwf   0x7f             	MOVWF	STK00
0000b9   0822     movf    0x22, 0x0        	MOVF	r0x103E,W
0000ba   118a     bcf     0x0a, 0x3        	PAGESEL	_SP_send_error
0000bb   2310     call    0x0310           	CALL	_SP_send_error
0000bc   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           _00119_DS_:
0000bd   1683     bsf     0x03, 0x5        	BANKSEL	___sdcc_saved_fsr
0000be   1303     bcf     0x03, 0x6        
0000bf   0828     movf    0x28, 0x0        	MOVF	___sdcc_saved_fsr,W
0000c0   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0000c1   1303     bcf     0x03, 0x6        
0000c2   0084     movwf   0x04             	MOVWF	FSR
0000c3   0870     movf    0x70, 0x0        	MOVF	PSAVE,W
0000c4   008a     movwf   0x0a             	MOVWF	PCLATH
0000c5   0183     clrf    0x03             	CLRF	STATUS
0000c6   0e71     swapf   0x71, 0x0        	SWAPF	SSAVE,W
0000c7   0083     movwf   0x03             	MOVWF	STATUS
0000c8   0ef2     swapf   0x72, 0x1        	SWAPF	WSAVE,F
0000c9   0e72     swapf   0x72, 0x0        	SWAPF	WSAVE,W
                                           END_OF_INTERRUPT:
0000ca   0009     retfie                   	RETFIE	
                                           
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_main	code
                                           ;***
                                           ;  pBlock Stats: dbName = M
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _init
                                           ;   _dec_to_ascii
                                           ;   _SP_send
                                           ;   _dec_to_ascii
                                           ;   _SP_send
                                           ;   _init
                                           ;   _dec_to_ascii
                                           ;   _SP_send
                                           ;   _dec_to_ascii
                                           ;   _SP_send
                                           ;6 compiler assigned registers:
                                           ;   r0x1038
                                           ;   STK00
                                           ;   r0x1039
                                           ;   r0x103A
                                           ;   r0x103B
                                           ;   STK01
                                           ;; Starting pCode block
                                           S_main__main	code
                                           _main:
                                           ; 2 exit points
                                           ;	.line	135; "main.c"	init();
000167   118a     bcf     0x0a, 0x3        	PAGESEL	_init
000168   23ab     call    0x03ab           	CALL	_init
000169   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	136; "main.c"	while(1)
00016a   1283     bcf     0x03, 0x5        	BANKSEL	r0x1038
00016b   1303     bcf     0x03, 0x6        
00016c   01a3     clrf    0x23             	CLRF	r0x1038
                                           _00155_DS_:
                                           ;	.line	139; "main.c"	if (bitfield.Capture){            
00016d   1683     bsf     0x03, 0x5        	BANKSEL	_bitfield
00016e   1303     bcf     0x03, 0x6        
00016f   1c24     btfss   0x24, 0x0        	BTFSS	_bitfield,0
000170   29f4     goto    0x01f4           	GOTO	_00153_DS_
                                           ;;swapping arguments (AOP_TYPEs 1/3)
                                           ;;unsigned compare: left >= lit(0x759=1881), size=2
                                           ;	.line	143; "main.c"	if (t > MIN_T && t < MAX_T && t1 > MIN_T && t1 < MAX_T){
000171   3007     movlw   0x07             	MOVLW	0x07
000172   1283     bcf     0x03, 0x5        	BANKSEL	_t
000173   1303     bcf     0x03, 0x6        
000174   026e     subwf   0x6e, 0x0        	SUBWF	(_t + 1),W
000175   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000176   2979     goto    0x0179           	GOTO	_00183_DS_
000177   3059     movlw   0x59             	MOVLW	0x59
000178   026d     subwf   0x6d, 0x0        	SUBWF	_t,W
                                           _00183_DS_:
000179   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00017a   299c     goto    0x019c           	GOTO	_00145_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffd407d8f20
                                           ;;unsigned compare: left < lit(0x79E=1950), size=2
00017b   3007     movlw   0x07             	MOVLW	0x07
00017c   1283     bcf     0x03, 0x5        	BANKSEL	_t
00017d   1303     bcf     0x03, 0x6        
00017e   026e     subwf   0x6e, 0x0        	SUBWF	(_t + 1),W
00017f   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000180   2983     goto    0x0183           	GOTO	_00184_DS_
000181   309e     movlw   0x9e             	MOVLW	0x9e
000182   026d     subwf   0x6d, 0x0        	SUBWF	_t,W
                                           _00184_DS_:
000183   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000184   299c     goto    0x019c           	GOTO	_00145_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffd407d8f20
                                           ;;swapping arguments (AOP_TYPEs 1/3)
                                           ;;unsigned compare: left >= lit(0x759=1881), size=2
000185   3007     movlw   0x07             	MOVLW	0x07
000186   1683     bsf     0x03, 0x5        	BANKSEL	_t1
000187   1303     bcf     0x03, 0x6        
000188   0223     subwf   0x23, 0x0        	SUBWF	(_t1 + 1),W
000189   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00018a   298d     goto    0x018d           	GOTO	_00185_DS_
00018b   3059     movlw   0x59             	MOVLW	0x59
00018c   0222     subwf   0x22, 0x0        	SUBWF	_t1,W
                                           _00185_DS_:
00018d   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00018e   299c     goto    0x019c           	GOTO	_00145_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffd407d8f20
                                           ;;unsigned compare: left < lit(0x79E=1950), size=2
00018f   3007     movlw   0x07             	MOVLW	0x07
000190   1683     bsf     0x03, 0x5        	BANKSEL	_t1
000191   1303     bcf     0x03, 0x6        
000192   0223     subwf   0x23, 0x0        	SUBWF	(_t1 + 1),W
000193   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000194   2997     goto    0x0197           	GOTO	_00186_DS_
000195   309e     movlw   0x9e             	MOVLW	0x9e
000196   0222     subwf   0x22, 0x0        	SUBWF	_t1,W
                                           _00186_DS_:
000197   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000198   299c     goto    0x019c           	GOTO	_00145_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffd407d8f20
                                           ;	.line	144; "main.c"	bitfield.Hint = TRUE;
000199   1683     bsf     0x03, 0x5        	BANKSEL	_bitfield
00019a   1303     bcf     0x03, 0x6        
00019b   1524     bsf     0x24, 0x2        	BSF	_bitfield,2
                                           ;;unsigned compare: left < lit(0x64=100), size=1
                                           _00145_DS_:
                                           ;	.line	146; "main.c"	if (i < 100 && bitfield.Hint){
00019c   3064     movlw   0x64             	MOVLW	0x64
00019d   1283     bcf     0x03, 0x5        	BANKSEL	r0x1038
00019e   1303     bcf     0x03, 0x6        
00019f   0223     subwf   0x23, 0x0        	SUBWF	r0x1038,W
0001a0   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0001a1   29d9     goto    0x01d9           	GOTO	_00150_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffd407d8f20
0001a2   1683     bsf     0x03, 0x5        	BANKSEL	_bitfield
0001a3   1303     bcf     0x03, 0x6        
0001a4   1d24     btfss   0x24, 0x2        	BTFSS	_bitfield,2
0001a5   29d9     goto    0x01d9           	GOTO	_00150_DS_
                                           ;	.line	147; "main.c"	dec_to_ascii(w);
0001a6   1283     bcf     0x03, 0x5        	BANKSEL	_w
0001a7   1303     bcf     0x03, 0x6        
0001a8   086b     movf    0x6b, 0x0        	MOVF	_w,W
0001a9   00ff     movwf   0x7f             	MOVWF	STK00
0001aa   086c     movf    0x6c, 0x0        	MOVF	(_w + 1),W
0001ab   118a     bcf     0x0a, 0x3        	PAGESEL	_dec_to_ascii
0001ac   22d7     call    0x02d7           	CALL	_dec_to_ascii
0001ad   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	148; "main.c"	SP_send(tab);
0001ae   3004     movlw   0x04             	MOVLW	high (_tab + 0)
0001af   1283     bcf     0x03, 0x5        	BANKSEL	r0x1039
0001b0   1303     bcf     0x03, 0x6        
0001b1   00a5     movwf   0x25             	MOVWF	r0x1039
0001b2   304e     movlw   0x4e             	MOVLW	(_tab + 0)
0001b3   00a4     movwf   0x24             	MOVWF	r0x103A
0001b4   3080     movlw   0x80             	MOVLW	0x80
0001b5   00a6     movwf   0x26             	MOVWF	r0x103B
0001b6   0824     movf    0x24, 0x0        	MOVF	r0x103A,W
0001b7   00fe     movwf   0x7e             	MOVWF	STK01
0001b8   0825     movf    0x25, 0x0        	MOVF	r0x1039,W
0001b9   00ff     movwf   0x7f             	MOVWF	STK00
0001ba   0826     movf    0x26, 0x0        	MOVF	r0x103B,W
0001bb   118a     bcf     0x0a, 0x3        	PAGESEL	_SP_send
0001bc   23dc     call    0x03dc           	CALL	_SP_send
0001bd   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	149; "main.c"	dec_to_ascii(t);
0001be   1283     bcf     0x03, 0x5        	BANKSEL	_t
0001bf   1303     bcf     0x03, 0x6        
0001c0   086d     movf    0x6d, 0x0        	MOVF	_t,W
0001c1   00ff     movwf   0x7f             	MOVWF	STK00
0001c2   086e     movf    0x6e, 0x0        	MOVF	(_t + 1),W
0001c3   118a     bcf     0x0a, 0x3        	PAGESEL	_dec_to_ascii
0001c4   22d7     call    0x02d7           	CALL	_dec_to_ascii
0001c5   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	150; "main.c"	SP_send(enter);
0001c6   3004     movlw   0x04             	MOVLW	high (_enter + 0)
0001c7   1283     bcf     0x03, 0x5        	BANKSEL	r0x1039
0001c8   1303     bcf     0x03, 0x6        
0001c9   00a5     movwf   0x25             	MOVWF	r0x1039
0001ca   3050     movlw   0x50             	MOVLW	(_enter + 0)
0001cb   00a4     movwf   0x24             	MOVWF	r0x103A
0001cc   3080     movlw   0x80             	MOVLW	0x80
0001cd   00a6     movwf   0x26             	MOVWF	r0x103B
0001ce   0824     movf    0x24, 0x0        	MOVF	r0x103A,W
0001cf   00fe     movwf   0x7e             	MOVWF	STK01
0001d0   0825     movf    0x25, 0x0        	MOVF	r0x1039,W
0001d1   00ff     movwf   0x7f             	MOVWF	STK00
0001d2   0826     movf    0x26, 0x0        	MOVF	r0x103B,W
0001d3   118a     bcf     0x0a, 0x3        	PAGESEL	_SP_send
0001d4   23dc     call    0x03dc           	CALL	_SP_send
0001d5   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	151; "main.c"	i++;
0001d6   1283     bcf     0x03, 0x5        	BANKSEL	r0x1038
0001d7   1303     bcf     0x03, 0x6        
0001d8   0aa3     incf    0x23, 0x1        	INCF	r0x1038,F
                                           _00150_DS_:
                                           ;	.line	153; "main.c"	t1 = t;
0001d9   1283     bcf     0x03, 0x5        	BANKSEL	_t
0001da   1303     bcf     0x03, 0x6        
0001db   086d     movf    0x6d, 0x0        	MOVF	_t,W
0001dc   1683     bsf     0x03, 0x5        	BANKSEL	_t1
0001dd   1303     bcf     0x03, 0x6        
0001de   00a2     movwf   0x22             	MOVWF	_t1
0001df   1283     bcf     0x03, 0x5        	BANKSEL	_t
0001e0   1303     bcf     0x03, 0x6        
0001e1   086e     movf    0x6e, 0x0        	MOVF	(_t + 1),W
0001e2   1683     bsf     0x03, 0x5        	BANKSEL	_t1
0001e3   1303     bcf     0x03, 0x6        
0001e4   00a3     movwf   0x23             	MOVWF	(_t1 + 1)
                                           ;	.line	154; "main.c"	w1 = w;
0001e5   1283     bcf     0x03, 0x5        	BANKSEL	_w
0001e6   1303     bcf     0x03, 0x6        
0001e7   086b     movf    0x6b, 0x0        	MOVF	_w,W
0001e8   1683     bsf     0x03, 0x5        	BANKSEL	_w1
0001e9   1303     bcf     0x03, 0x6        
0001ea   00a0     movwf   0x20             	MOVWF	_w1
0001eb   1283     bcf     0x03, 0x5        	BANKSEL	_w
0001ec   1303     bcf     0x03, 0x6        
0001ed   086c     movf    0x6c, 0x0        	MOVF	(_w + 1),W
0001ee   1683     bsf     0x03, 0x5        	BANKSEL	_w1
0001ef   1303     bcf     0x03, 0x6        
0001f0   00a1     movwf   0x21             	MOVWF	(_w1 + 1)
                                           ;	.line	155; "main.c"	bitfield.Capture = FALSE;
0001f1   1683     bsf     0x03, 0x5        	BANKSEL	_bitfield
0001f2   1303     bcf     0x03, 0x6        
0001f3   1024     bcf     0x24, 0x0        	BCF	_bitfield,0
                                           _00153_DS_:
                                           ;	.line	158; "main.c"	int_error_cnt = 0;
0001f4   1683     bsf     0x03, 0x5        	BANKSEL	_int_error_cnt
0001f5   1303     bcf     0x03, 0x6        
0001f6   01a7     clrf    0x27             	CLRF	_int_error_cnt
0001f7   296d     goto    0x016d           	GOTO	_00155_DS_
0001f8   0008     return                   	RETURN	
                                           ; exit point of _main
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   __gptrget1
                                           ;   __gptrget1
                                           ;10 compiler assigned registers:
                                           ;   r0x101D
                                           ;   STK00
                                           ;   r0x101E
                                           ;   STK01
                                           ;   r0x101F
                                           ;   r0x1020
                                           ;   r0x1021
                                           ;   r0x1022
                                           ;   r0x1023
                                           ;   r0x1024
                                           ;; Starting pCode block
                                           S_main__SP_send_error	code
                                           _SP_send_error:
                                           ; 2 exit points
                                           ;	.line	200; "main.c"	void SP_send_error(char str[])
000310   1283     bcf     0x03, 0x5        	BANKSEL	r0x101D
000311   1303     bcf     0x03, 0x6        
000312   00ba     movwf   0x3a             	MOVWF	r0x101D
000313   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000314   00b9     movwf   0x39             	MOVWF	r0x101E
000315   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000316   00b8     movwf   0x38             	MOVWF	r0x101F
                                           ;	.line	203; "main.c"	GIE = FALSE;	// Disable all interrupts.
000317   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
000318   1303     bcf     0x03, 0x6        
000319   138b     bcf     0x0b, 0x7        	BCF	_INTCONbits,7
                                           ;	.line	204; "main.c"	for(i=0; str[i] != '\0'; i++)
00031a   1283     bcf     0x03, 0x5        	BANKSEL	r0x1020
00031b   1303     bcf     0x03, 0x6        
00031c   01bb     clrf    0x3b             	CLRF	r0x1020
                                           _00224_DS_:
00031d   1283     bcf     0x03, 0x5        	BANKSEL	r0x1020
00031e   1303     bcf     0x03, 0x6        
00031f   083b     movf    0x3b, 0x0        	MOVF	r0x1020,W
000320   0738     addwf   0x38, 0x0        	ADDWF	r0x101F,W
000321   00bc     movwf   0x3c             	MOVWF	r0x1021
000322   0839     movf    0x39, 0x0        	MOVF	r0x101E,W
000323   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000324   3e01     addlw   0x01             	ADDLW	0x01
000325   00bd     movwf   0x3d             	MOVWF	r0x1022
000326   083a     movf    0x3a, 0x0        	MOVF	r0x101D,W
000327   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000328   3e01     addlw   0x01             	ADDLW	0x01
000329   00be     movwf   0x3e             	MOVWF	r0x1023
00032a   083c     movf    0x3c, 0x0        	MOVF	r0x1021,W
00032b   00fe     movwf   0x7e             	MOVWF	STK01
00032c   083d     movf    0x3d, 0x0        	MOVF	r0x1022,W
00032d   00ff     movwf   0x7f             	MOVWF	STK00
00032e   083e     movf    0x3e, 0x0        	MOVF	r0x1023,W
00032f   118a     bcf     0x0a, 0x3        	PAGESEL	__gptrget1
000330   2345     call    0x0345           	CALL	__gptrget1
000331   118a     bcf     0x0a, 0x3        	PAGESEL	$
000332   1283     bcf     0x03, 0x5        	BANKSEL	r0x1024
000333   1303     bcf     0x03, 0x6        
000334   00bf     movwf   0x3f             	MOVWF	r0x1024
000335   083f     movf    0x3f, 0x0        	MOVF	r0x1024,W
000336   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000337   2b44     goto    0x0344           	GOTO	_00226_DS_
                                           ;	.line	206; "main.c"	TXREG=str[i];	// Add a character to the output buffer
000338   083f     movf    0x3f, 0x0        	MOVF	r0x1024,W
000339   1283     bcf     0x03, 0x5        	BANKSEL	_TXREG
00033a   1303     bcf     0x03, 0x6        
00033b   0099     movwf   0x19             	MOVWF	_TXREG
                                           _00219_DS_:
                                           ;	.line	207; "main.c"	while(!TXIF);	// Wait while the output buffer is full
00033c   1283     bcf     0x03, 0x5        	BANKSEL	_PIR1bits
00033d   1303     bcf     0x03, 0x6        
00033e   1e0c     btfss   0x0c, 0x4        	BTFSS	_PIR1bits,4
00033f   2b3c     goto    0x033c           	GOTO	_00219_DS_
                                           ;	.line	204; "main.c"	for(i=0; str[i] != '\0'; i++)
000340   1283     bcf     0x03, 0x5        	BANKSEL	r0x1020
000341   1303     bcf     0x03, 0x6        
000342   0abb     incf    0x3b, 0x1        	INCF	r0x1020,F
000343   2b1d     goto    0x031d           	GOTO	_00224_DS_
                                           _00226_DS_:
000344   0008     return                   	RETURN	
                                           ; exit point of _SP_send_error
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   __gptrget1
                                           ;   _circBufPush
                                           ;   __gptrget1
                                           ;   _circBufPush
                                           ;10 compiler assigned registers:
                                           ;   r0x102A
                                           ;   STK00
                                           ;   r0x102B
                                           ;   STK01
                                           ;   r0x102C
                                           ;   r0x102D
                                           ;   r0x102E
                                           ;   r0x102F
                                           ;   r0x1030
                                           ;   r0x1031
                                           ;; Starting pCode block
                                           S_main__SP_send	code
                                           _SP_send:
                                           ; 2 exit points
                                           ;	.line	192; "main.c"	void SP_send(char str[]){
0003dc   1283     bcf     0x03, 0x5        	BANKSEL	r0x102A
0003dd   1303     bcf     0x03, 0x6        
0003de   00b2     movwf   0x32             	MOVWF	r0x102A
0003df   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0003e0   00b1     movwf   0x31             	MOVWF	r0x102B
0003e1   087e     movf    0x7e, 0x0        	MOVF	STK01,W
0003e2   00b0     movwf   0x30             	MOVWF	r0x102C
                                           ;	.line	194; "main.c"	for(i=0; str[i] != '\0'; i++)
0003e3   01b3     clrf    0x33             	CLRF	r0x102D
                                           _00212_DS_:
0003e4   1283     bcf     0x03, 0x5        	BANKSEL	r0x102D
0003e5   1303     bcf     0x03, 0x6        
0003e6   0833     movf    0x33, 0x0        	MOVF	r0x102D,W
0003e7   0730     addwf   0x30, 0x0        	ADDWF	r0x102C,W
0003e8   00b4     movwf   0x34             	MOVWF	r0x102E
0003e9   0831     movf    0x31, 0x0        	MOVF	r0x102B,W
0003ea   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0003eb   3e01     addlw   0x01             	ADDLW	0x01
0003ec   00b5     movwf   0x35             	MOVWF	r0x102F
0003ed   0832     movf    0x32, 0x0        	MOVF	r0x102A,W
0003ee   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0003ef   3e01     addlw   0x01             	ADDLW	0x01
0003f0   00b6     movwf   0x36             	MOVWF	r0x1030
0003f1   0834     movf    0x34, 0x0        	MOVF	r0x102E,W
0003f2   00fe     movwf   0x7e             	MOVWF	STK01
0003f3   0835     movf    0x35, 0x0        	MOVF	r0x102F,W
0003f4   00ff     movwf   0x7f             	MOVWF	STK00
0003f5   0836     movf    0x36, 0x0        	MOVF	r0x1030,W
0003f6   118a     bcf     0x0a, 0x3        	PAGESEL	__gptrget1
0003f7   2345     call    0x0345           	CALL	__gptrget1
0003f8   118a     bcf     0x0a, 0x3        	PAGESEL	$
0003f9   1283     bcf     0x03, 0x5        	BANKSEL	r0x1031
0003fa   1303     bcf     0x03, 0x6        
0003fb   00b7     movwf   0x37             	MOVWF	r0x1031
0003fc   0837     movf    0x37, 0x0        	MOVF	r0x1031,W
0003fd   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0003fe   2c07     goto    0x0407           	GOTO	_00214_DS_
                                           ;	.line	196; "main.c"	circBufPush(str[i]);
0003ff   0837     movf    0x37, 0x0        	MOVF	r0x1031,W
000400   118a     bcf     0x0a, 0x3        	PAGESEL	_circBufPush
000401   2248     call    0x0248           	CALL	_circBufPush
000402   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	194; "main.c"	for(i=0; str[i] != '\0'; i++)
000403   1283     bcf     0x03, 0x5        	BANKSEL	r0x102D
000404   1303     bcf     0x03, 0x6        
000405   0ab3     incf    0x33, 0x1        	INCF	r0x102D,F
000406   2be4     goto    0x03e4           	GOTO	_00212_DS_
                                           _00214_DS_:
000407   0008     return                   	RETURN	
                                           ; exit point of _SP_send
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   __moduint
                                           ;   __divuint
                                           ;   _circBufPush
                                           ;   __moduint
                                           ;   __divuint
                                           ;   _circBufPush
                                           ;9 compiler assigned registers:
                                           ;   r0x1032
                                           ;   STK00
                                           ;   r0x1033
                                           ;   r0x1034
                                           ;   STK02
                                           ;   STK01
                                           ;   r0x1035
                                           ;   r0x1036
                                           ;   r0x1037
                                           ;; Starting pCode block
                                           S_main__dec_to_ascii	code
                                           _dec_to_ascii:
                                           ; 2 exit points
                                           ;	.line	179; "main.c"	void dec_to_ascii(unsigned short dec){
0002d7   1283     bcf     0x03, 0x5        	BANKSEL	r0x1032
0002d8   1303     bcf     0x03, 0x6        
0002d9   00ad     movwf   0x2d             	MOVWF	r0x1032
0002da   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0002db   00ac     movwf   0x2c             	MOVWF	r0x1033
                                           ;	.line	183; "main.c"	for (i = 0 ; dec != 0 || i == 0; i++)
0002dc   01ae     clrf    0x2e             	CLRF	r0x1034
                                           _00203_DS_:
0002dd   1283     bcf     0x03, 0x5        	BANKSEL	r0x1033
0002de   1303     bcf     0x03, 0x6        
0002df   082c     movf    0x2c, 0x0        	MOVF	r0x1033,W
0002e0   042d     iorwf   0x2d, 0x0        	IORWF	r0x1032,W
0002e1   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0002e2   2ae6     goto    0x02e6           	GOTO	_00202_DS_
0002e3   082e     movf    0x2e, 0x0        	MOVF	r0x1034,W
0002e4   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0002e5   2b0f     goto    0x030f           	GOTO	_00205_DS_
                                           _00202_DS_:
                                           ;	.line	185; "main.c"	number = (dec % 10);
0002e6   300a     movlw   0x0a             	MOVLW	0x0a
0002e7   00fd     movwf   0x7d             	MOVWF	STK02
0002e8   3000     movlw   0x00             	MOVLW	0x00
0002e9   00fe     movwf   0x7e             	MOVWF	STK01
0002ea   1283     bcf     0x03, 0x5        	BANKSEL	r0x1033
0002eb   1303     bcf     0x03, 0x6        
0002ec   082c     movf    0x2c, 0x0        	MOVF	r0x1033,W
0002ed   00ff     movwf   0x7f             	MOVWF	STK00
0002ee   082d     movf    0x2d, 0x0        	MOVF	r0x1032,W
0002ef   118a     bcf     0x0a, 0x3        	PAGESEL	__moduint
0002f0   2294     call    0x0294           	CALL	__moduint
0002f1   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;;1	MOVWF	r0x1035
0002f2   087f     movf    0x7f, 0x0        	MOVF	STK00,W
                                           ;;1	MOVWF	r0x1036
0002f3   1283     bcf     0x03, 0x5        	BANKSEL	r0x1037
0002f4   1303     bcf     0x03, 0x6        
0002f5   00af     movwf   0x2f             	MOVWF	r0x1037
                                           ;	.line	186; "main.c"	dec /= 10;
0002f6   300a     movlw   0x0a             	MOVLW	0x0a
0002f7   00fd     movwf   0x7d             	MOVWF	STK02
0002f8   3000     movlw   0x00             	MOVLW	0x00
0002f9   00fe     movwf   0x7e             	MOVWF	STK01
0002fa   082c     movf    0x2c, 0x0        	MOVF	r0x1033,W
0002fb   00ff     movwf   0x7f             	MOVWF	STK00
0002fc   082d     movf    0x2d, 0x0        	MOVF	r0x1032,W
0002fd   118a     bcf     0x0a, 0x3        	PAGESEL	__divuint
0002fe   21f9     call    0x01f9           	CALL	__divuint
0002ff   118a     bcf     0x0a, 0x3        	PAGESEL	$
000300   1283     bcf     0x03, 0x5        	BANKSEL	r0x1032
000301   1303     bcf     0x03, 0x6        
000302   00ad     movwf   0x2d             	MOVWF	r0x1032
000303   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000304   00ac     movwf   0x2c             	MOVWF	r0x1033
                                           ;	.line	187; "main.c"	number += 48;
000305   3030     movlw   0x30             	MOVLW	0x30
000306   07af     addwf   0x2f, 0x1        	ADDWF	r0x1037,F
                                           ;	.line	188; "main.c"	circBufPush(number);
000307   082f     movf    0x2f, 0x0        	MOVF	r0x1037,W
000308   118a     bcf     0x0a, 0x3        	PAGESEL	_circBufPush
000309   2248     call    0x0248           	CALL	_circBufPush
00030a   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	183; "main.c"	for (i = 0 ; dec != 0 || i == 0; i++)
00030b   1283     bcf     0x03, 0x5        	BANKSEL	r0x1034
00030c   1303     bcf     0x03, 0x6        
00030d   0aae     incf    0x2e, 0x1        	INCF	r0x1034,F
00030e   2add     goto    0x02dd           	GOTO	_00203_DS_
                                           _00205_DS_:
00030f   0008     return                   	RETURN	
                                           ; exit point of _dec_to_ascii
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _SP_send_error
                                           ;   _SP_send_error
                                           ;7 compiler assigned registers:
                                           ;   r0x1025
                                           ;   r0x1026
                                           ;   r0x1027
                                           ;   r0x1028
                                           ;   r0x1029
                                           ;   STK01
                                           ;   STK00
                                           ;; Starting pCode block
                                           S_main__circBufPush	code
                                           _circBufPush:
                                           ; 2 exit points
                                           ;	.line	162; "main.c"	int circBufPush(uint8_t data){
000248   1283     bcf     0x03, 0x5        	BANKSEL	r0x1025
000249   1303     bcf     0x03, 0x6        
00024a   00a7     movwf   0x27             	MOVWF	r0x1025
                                           ;	.line	163; "main.c"	uint8_t next = buf_head + 1;
00024b   1683     bsf     0x03, 0x5        	BANKSEL	_buf_head
00024c   1303     bcf     0x03, 0x6        
00024d   0a25     incf    0x25, 0x0        	INCF	_buf_head,W
00024e   1283     bcf     0x03, 0x5        	BANKSEL	r0x1026
00024f   1303     bcf     0x03, 0x6        
000250   00a8     movwf   0x28             	MOVWF	r0x1026
                                           ;;unsigned compare: left < lit(0x10=16), size=1
                                           ;	.line	164; "main.c"	if (next >= BUF_SIZE)
000251   3010     movlw   0x10             	MOVLW	0x10
                                           ;	.line	165; "main.c"	next = 0;
000252   0228     subwf   0x28, 0x0        	SUBWF	r0x1026,W
                                           ;	.line	168; "main.c"	if (next == buf_tail){
000253   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000254   01a8     clrf    0x28             	CLRF	r0x1026
000255   1683     bsf     0x03, 0x5        	BANKSEL	_buf_tail
000256   1303     bcf     0x03, 0x6        
000257   0826     movf    0x26, 0x0        	MOVF	_buf_tail,W
000258   1283     bcf     0x03, 0x5        	BANKSEL	r0x1026
000259   1303     bcf     0x03, 0x6        
00025a   0628     xorwf   0x28, 0x0        	XORWF	r0x1026,W
00025b   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00025c   2a6f     goto    0x026f           	GOTO	_00194_DS_
                                           ;	.line	169; "main.c"	SP_send_error(buf_err);
00025d   3004     movlw   0x04             	MOVLW	high (_buf_err + 0)
00025e   00aa     movwf   0x2a             	MOVWF	r0x1027
00025f   3008     movlw   0x08             	MOVLW	(_buf_err + 0)
000260   00a9     movwf   0x29             	MOVWF	r0x1028
000261   3080     movlw   0x80             	MOVLW	0x80
000262   00ab     movwf   0x2b             	MOVWF	r0x1029
000263   0829     movf    0x29, 0x0        	MOVF	r0x1028,W
000264   00fe     movwf   0x7e             	MOVWF	STK01
000265   082a     movf    0x2a, 0x0        	MOVF	r0x1027,W
000266   00ff     movwf   0x7f             	MOVWF	STK00
000267   082b     movf    0x2b, 0x0        	MOVF	r0x1029,W
000268   118a     bcf     0x0a, 0x3        	PAGESEL	_SP_send_error
000269   2310     call    0x0310           	CALL	_SP_send_error
00026a   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	170; "main.c"	return -1;  // quit with an error
00026b   30ff     movlw   0xff             	MOVLW	0xff
00026c   00ff     movwf   0x7f             	MOVWF	STK00
00026d   30ff     movlw   0xff             	MOVLW	0xff
00026e   2a93     goto    0x0293           	GOTO	_00195_DS_
                                           _00194_DS_:
                                           ;	.line	173; "main.c"	buf[buf_head] = data;
00026f   1683     bsf     0x03, 0x5        	BANKSEL	_buf_head
000270   1303     bcf     0x03, 0x6        
000271   0825     movf    0x25, 0x0        	MOVF	_buf_head,W
000272   3e40     addlw   0x40             	ADDLW	(_buf + 0)
000273   1283     bcf     0x03, 0x5        	BANKSEL	r0x1028
000274   1303     bcf     0x03, 0x6        
000275   00a9     movwf   0x29             	MOVWF	r0x1028
000276   3000     movlw   0x00             	MOVLW	high (_buf + 0)
000277   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000278   3e01     addlw   0x01             	ADDLW	0x01
000279   00aa     movwf   0x2a             	MOVWF	r0x1027
00027a   0829     movf    0x29, 0x0        	MOVF	r0x1028,W
00027b   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00027c   1303     bcf     0x03, 0x6        
00027d   0084     movwf   0x04             	MOVWF	FSR
00027e   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00027f   1283     bcf     0x03, 0x5        	BANKSEL	r0x1027
000280   1303     bcf     0x03, 0x6        
000281   182a     btfsc   0x2a, 0x0        	BTFSC	r0x1027,0
000282   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000283   0827     movf    0x27, 0x0        	MOVF	r0x1025,W
000284   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000285   1303     bcf     0x03, 0x6        
000286   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	174; "main.c"	buf_head = next;
000287   1283     bcf     0x03, 0x5        	BANKSEL	r0x1026
000288   1303     bcf     0x03, 0x6        
000289   0828     movf    0x28, 0x0        	MOVF	r0x1026,W
00028a   1683     bsf     0x03, 0x5        	BANKSEL	_buf_head
00028b   1303     bcf     0x03, 0x6        
00028c   00a5     movwf   0x25             	MOVWF	_buf_head
                                           ;	.line	175; "main.c"	TXIE = 1;       //Enables the EUSART transmit interrupt
00028d   1683     bsf     0x03, 0x5        	BANKSEL	_PIE1bits
00028e   1303     bcf     0x03, 0x6        
00028f   160c     bsf     0x0c, 0x4        	BSF	_PIE1bits,4
                                           ;	.line	176; "main.c"	return 0;
000290   3000     movlw   0x00             	MOVLW	0x00
000291   00ff     movwf   0x7f             	MOVWF	STK00
000292   3000     movlw   0x00             	MOVLW	0x00
                                           _00195_DS_:
000293   0008     return                   	RETURN	
                                           ; exit point of _circBufPush
                                           
                                           
                                           ;	code size estimation:
                                           ;	  365+  118 =   483 instructions ( 1202 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.0 #9615 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"init.c"
                                           	list	p=16f690
                                           	radix dec
                                           	include "p16f690.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F690 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_PWM1CONbits
                                           	extern	_ECCPASbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_OSCCONbits
                                           	extern	_OSCTUNEbits
                                           	extern	_MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSPSTATbits
                                           	extern	_WPUbits
                                           	extern	_WPUAbits
                                           	extern	_IOCbits
                                           	extern	_IOCAbits
                                           	extern	_WDTCONbits
                                           	extern	_TXSTAbits
                                           	extern	_SPBRGbits
                                           	extern	_SPBRGHbits
                                           	extern	_BAUDCTLbits
                                           	extern	_ADCON1bits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_VRCONbits
                                           	extern	_CM1CON0bits
                                           	extern	_CM2CON0bits
                                           	extern	_CM2CON1bits
                                           	extern	_ANSELbits
                                           	extern	_ANSELHbits
                                           	extern	_EECON1bits
                                           	extern	_PSTRCONbits
                                           	extern	_SRCONbits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_PWM1CON
                                           	extern	_ECCPAS
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_OSCCON
                                           	extern	_OSCTUNE
                                           	extern	_PR2
                                           	extern	_MSK
                                           	extern	_SSPADD
                                           	extern	_SSPMSK
                                           	extern	_SSPSTAT
                                           	extern	_WPU
                                           	extern	_WPUA
                                           	extern	_IOC
                                           	extern	_IOCA
                                           	extern	_WDTCON
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_BAUDCTL
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDAT
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_VRCON
                                           	extern	_CM1CON0
                                           	extern	_CM2CON0
                                           	extern	_CM2CON1
                                           	extern	_ANSEL
                                           	extern	_ANSELH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_PSTRCON
                                           	extern	_SRCON
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_init
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_init	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;; Starting pCode block
                                           S_init__init	code
                                           _init:
                                           ; 2 exit points
                                           ;	.line	8; "init.c"	ADC2_TRIS = 1;
0003ab   1683     bsf     0x03, 0x5        	BANKSEL	_TRISAbits
0003ac   1303     bcf     0x03, 0x6        
0003ad   1505     bsf     0x05, 0x2        	BSF	_TRISAbits,2
                                           ;	.line	9; "init.c"	ADC4_TRIS = 1;
0003ae   1605     bsf     0x05, 0x4        	BSF	_TRISAbits,4
                                           ;	.line	11; "init.c"	RCIN_TRIS=1;            //Input
0003af   1687     bsf     0x07, 0x5        	BSF	_TRISCbits,5
                                           ;	.line	13; "init.c"	TX_TRIS=0;               // These need to be 0 for USART to work
0003b0   1386     bcf     0x06, 0x7        	BCF	_TRISBbits,7
                                           ;	.line	14; "init.c"	RX_TRIS=1;               // These need to be 1 for USART to work
0003b1   1686     bsf     0x06, 0x5        	BSF	_TRISBbits,5
                                           ;	.line	15; "init.c"	ADCON1=0x50;             //ADC Settings
0003b2   3050     movlw   0x50             	MOVLW	0x50
0003b3   009f     movwf   0x1f             	MOVWF	_ADCON1
                                           ;	.line	16; "init.c"	ANS11=0;                 // Turn off Analog input it necessary to function serial port RX
0003b4   1283     bcf     0x03, 0x5        	BANKSEL	_ANSELHbits
0003b5   1703     bsf     0x03, 0x6        
0003b6   119f     bcf     0x1f, 0x3        	BCF	_ANSELHbits,3
                                           ;	.line	17; "init.c"	ANS10=0;
0003b7   111f     bcf     0x1f, 0x2        	BCF	_ANSELHbits,2
                                           ;	.line	18; "init.c"	ANS7=0;
0003b8   139e     bcf     0x1e, 0x7        	BCF	_ANSELbits,7
                                           ;	.line	19; "init.c"	ANS8=0;
0003b9   101f     bcf     0x1f, 0x0        	BCF	_ANSELHbits,0
                                           ;	.line	20; "init.c"	ANS9=0;
0003ba   109f     bcf     0x1f, 0x1        	BCF	_ANSELHbits,1
                                           ;	.line	21; "init.c"	ANS4=0;
0003bb   121e     bcf     0x1e, 0x4        	BCF	_ANSELbits,4
                                           ;	.line	22; "init.c"	ANS2=1;                      //Zapnuti Analogovych vstupu
0003bc   151e     bsf     0x1e, 0x2        	BSF	_ANSELbits,2
                                           ;	.line	23; "init.c"	ANS3=1;
0003bd   159e     bsf     0x1e, 0x3        	BSF	_ANSELbits,3
                                           ;	.line	26; "init.c"	SPBRG=8;                // Baud Rate
0003be   3008     movlw   0x08             	MOVLW	0x08
0003bf   1683     bsf     0x03, 0x5        	BANKSEL	_SPBRG
0003c0   1303     bcf     0x03, 0x6        
0003c1   0099     movwf   0x19             	MOVWF	_SPBRG
                                           ;	.line	27; "init.c"	BRGH=1;                 // 115.2k
0003c2   1518     bsf     0x18, 0x2        	BSF	_TXSTAbits,2
                                           ;	.line	28; "init.c"	BRG16=1;
0003c3   159b     bsf     0x1b, 0x3        	BSF	_BAUDCTLbits,3
                                           ;	.line	30; "init.c"	TXEN=1;			// Enable transmission mode
0003c4   1698     bsf     0x18, 0x5        	BSF	_TXSTAbits,5
                                           ;	.line	31; "init.c"	SYNC=0;			// Disable Synchronous/Enable Asynchronous
0003c5   1218     bcf     0x18, 0x4        	BCF	_TXSTAbits,4
                                           ;	.line	32; "init.c"	SPEN=1;			// Enable serial port
0003c6   1283     bcf     0x03, 0x5        	BANKSEL	_RCSTAbits
0003c7   1303     bcf     0x03, 0x6        
0003c8   1798     bsf     0x18, 0x7        	BSF	_RCSTAbits,7
                                           ;	.line	46; "init.c"	CCP1CON = 5; // Setup ENHANCED CAPTURE MODULE
0003c9   3005     movlw   0x05             	MOVLW	0x05
0003ca   0097     movwf   0x17             	MOVWF	_CCP1CON
                                           ;	.line	47; "init.c"	CCP1IE = 0;     // ENHANCED CAPTURE MODULE Disabled
0003cb   1683     bsf     0x03, 0x5        	BANKSEL	_PIE1bits
0003cc   1303     bcf     0x03, 0x6        
0003cd   110c     bcf     0x0c, 0x2        	BCF	_PIE1bits,2
                                           ;	.line	53; "init.c"	T1CON = 0;  // TIMER1 presccaler 1
0003ce   1283     bcf     0x03, 0x5        	BANKSEL	_T1CON
0003cf   1303     bcf     0x03, 0x6        
0003d0   0190     clrf    0x10             	CLRF	_T1CON
                                           ;	.line	55; "init.c"	PEIE = 1;       // Enable peripheral interrupts.
0003d1   170b     bsf     0x0b, 0x6        	BSF	_INTCONbits,6
                                           ;	.line	56; "init.c"	GIE = 1;	// Enable all interrupts.
0003d2   178b     bsf     0x0b, 0x7        	BSF	_INTCONbits,7
                                           ;	.line	59; "init.c"	TMR1H = 0;
0003d3   018f     clrf    0x0f             	CLRF	_TMR1H
                                           ;	.line	60; "init.c"	TMR1L = 0;
0003d4   018e     clrf    0x0e             	CLRF	_TMR1L
                                           ;	.line	61; "init.c"	CCP1IE = 1;
0003d5   1683     bsf     0x03, 0x5        	BANKSEL	_PIE1bits
0003d6   1303     bcf     0x03, 0x6        
0003d7   150c     bsf     0x0c, 0x2        	BSF	_PIE1bits,2
                                           ;	.line	62; "init.c"	TMR1ON = 1;
0003d8   1283     bcf     0x03, 0x5        	BANKSEL	_T1CONbits
0003d9   1303     bcf     0x03, 0x6        
0003da   1410     bsf     0x10, 0x0        	BSF	_T1CONbits,0
0003db   0008     return                   	RETURN	
                                           ; exit point of _init
                                           
                                           
                                           ;	code size estimation:
                                           ;	   33+    8 =    41 instructions (   98 byte)
                                           
                                           	end
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F690 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST

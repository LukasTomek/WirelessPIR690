gplink-1.4.0 #1107 (May  9 2015)
Copyright (c) 1998-2014 gputils project
Listing File Generated: 1-6-2017  19:28:11
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.0 #9615 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"main.c"
                                           	list	p=16f690
                                           	radix dec
                                           	include "p16f690.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F690 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; config word(s)
                                           ;--------------------------------------------------------
002007   3fd4     addlw   0xd4             	__config 0x3fd4
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_init
                                           	extern	__moduint
                                           	extern	__divuint
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_PWM1CONbits
                                           	extern	_ECCPASbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_OSCCONbits
                                           	extern	_OSCTUNEbits
                                           	extern	_MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSPSTATbits
                                           	extern	_WPUbits
                                           	extern	_WPUAbits
                                           	extern	_IOCbits
                                           	extern	_IOCAbits
                                           	extern	_WDTCONbits
                                           	extern	_TXSTAbits
                                           	extern	_SPBRGbits
                                           	extern	_SPBRGHbits
                                           	extern	_BAUDCTLbits
                                           	extern	_ADCON1bits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_VRCONbits
                                           	extern	_CM1CON0bits
                                           	extern	_CM2CON0bits
                                           	extern	_CM2CON1bits
                                           	extern	_ANSELbits
                                           	extern	_ANSELHbits
                                           	extern	_EECON1bits
                                           	extern	_PSTRCONbits
                                           	extern	_SRCONbits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_PWM1CON
                                           	extern	_ECCPAS
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_OSCCON
                                           	extern	_OSCTUNE
                                           	extern	_PR2
                                           	extern	_MSK
                                           	extern	_SSPADD
                                           	extern	_SSPMSK
                                           	extern	_SSPSTAT
                                           	extern	_WPU
                                           	extern	_WPUA
                                           	extern	_IOC
                                           	extern	_IOCA
                                           	extern	_WDTCON
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_BAUDCTL
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDAT
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_VRCON
                                           	extern	_CM1CON0
                                           	extern	_CM2CON0
                                           	extern	_CM2CON1
                                           	extern	_ANSEL
                                           	extern	_ANSELH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_PSTRCON
                                           	extern	_SRCON
                                           	extern	___sdcc_saved_fsr
                                           	extern	__gptrget1
                                           	extern	__sdcc_gsinit_startup
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_SP_send_error
                                           	global	_SP_send
                                           	global	_dec_to_ascii
                                           	global	_circBufPush
                                           	global	_receive_intr
                                           	global	_main
                                           	global	_bitfield
                                           	global	_w
                                           	global	_t
                                           	global	_w1
                                           	global	_t1
                                           	global	_buf
                                           	global	_buf_head
                                           	global	_buf_tail
                                           	global	_int_error_cnt
                                           	global	_strV0
                                           	global	_strV1
                                           	global	_strVF
                                           	global	_strw
                                           	global	_strt
                                           	global	_strw1
                                           	global	_strt1
                                           	global	_tab
                                           	global	_enter
                                           	global	_sync
                                           	global	_int_err
                                           	global	_buf_err
                                           
                                           	global PSAVE
                                           	global SSAVE
                                           	global WSAVE
                                           	global STK12
                                           	global STK11
                                           	global STK10
                                           	global STK09
                                           	global STK08
                                           	global STK07
                                           	global STK06
                                           	global STK05
                                           	global STK04
                                           	global STK03
                                           	global STK02
                                           	global STK01
                                           	global STK00
                                           
                                           sharebank udata_ovr 0x0070
                                           PSAVE	res 1
                                           SSAVE	res 1
                                           WSAVE	res 1
                                           STK12	res 1
                                           STK11	res 1
                                           STK10	res 1
                                           STK09	res 1
                                           STK08	res 1
                                           STK07	res 1
                                           STK06	res 1
                                           STK05	res 1
                                           STK04	res 1
                                           STK03	res 1
                                           STK02	res 1
                                           STK01	res 1
                                           STK00	res 1
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           UD_main_0	udata
                                           _bitfield	res	1
                                           
                                           UD_main_1	udata
                                           _buf	res	16
                                           
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_main_0	udata
                                           r0x1041	res	1
                                           r0x1042	res	1
                                           r0x1043	res	1
                                           r0x103F	res	1
                                           r0x103E	res	1
                                           r0x1040	res	1
                                           r0x1029	res	1
                                           r0x102A	res	1
                                           r0x102C	res	1
                                           r0x102B	res	1
                                           r0x102D	res	1
                                           r0x1037	res	1
                                           r0x1036	res	1
                                           r0x1038	res	1
                                           r0x1039	res	1
                                           r0x103A	res	1
                                           r0x103D	res	1
                                           r0x1030	res	1
                                           r0x102F	res	1
                                           r0x102E	res	1
                                           r0x1031	res	1
                                           r0x1032	res	1
                                           r0x1033	res	1
                                           r0x1034	res	1
                                           r0x1035	res	1
                                           r0x1023	res	1
                                           r0x1022	res	1
                                           r0x1021	res	1
                                           r0x1024	res	1
                                           r0x1025	res	1
                                           r0x1026	res	1
                                           r0x1027	res	1
                                           r0x1028	res	1
                                           _dec_to_ascii_number_1_20	res	4
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           
                                           ID_main_0	idata
                                           _w
                                           	db	0x00, 0x00
                                           
                                           
                                           ID_main_1	idata
                                           _t
                                           	db	0x00, 0x00
                                           
                                           
                                           ID_main_2	idata
                                           _w1
                                           	db	0x00, 0x00
                                           
                                           
                                           ID_main_3	idata
                                           _t1
                                           	db	0x00, 0x00
                                           
                                           
                                           ID_main_4	idata
                                           _buf_head
                                           	db	0x00
                                           
                                           
                                           ID_main_5	idata
                                           _buf_tail
                                           	db	0x00
                                           
                                           
                                           ID_main_6	idata
                                           _int_error_cnt
                                           	db	0x00
                                           
                                           
                                           ID_main_7	code
                                           _strV0
000444   3430     retlw   0x30             	retlw 0x30
000445   3420     retlw   0x20             	retlw 0x20
000446   340a     retlw   0x0a             	retlw 0x0a
000447   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_8	code
                                           _strV1
000448   3431     retlw   0x31             	retlw 0x31
000449   3420     retlw   0x20             	retlw 0x20
00044a   340a     retlw   0x0a             	retlw 0x0a
00044b   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_9	code
                                           _strVF
00044c   3446     retlw   0x46             	retlw 0x46
00044d   3420     retlw   0x20             	retlw 0x20
00044e   340a     retlw   0x0a             	retlw 0x0a
00044f   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_10	code
                                           _strw
000450   3477     retlw   0x77             	retlw 0x77
000451   343a     retlw   0x3a             	retlw 0x3a
000452   3420     retlw   0x20             	retlw 0x20
000453   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_11	code
                                           _strt
000454   3474     retlw   0x74             	retlw 0x74
000455   343a     retlw   0x3a             	retlw 0x3a
000456   3420     retlw   0x20             	retlw 0x20
000457   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_12	code
                                           _strw1
00043a   3477     retlw   0x77             	retlw 0x77
00043b   3431     retlw   0x31             	retlw 0x31
00043c   343a     retlw   0x3a             	retlw 0x3a
00043d   3420     retlw   0x20             	retlw 0x20
00043e   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_13	code
                                           _strt1
00043f   3474     retlw   0x74             	retlw 0x74
000440   3431     retlw   0x31             	retlw 0x31
000441   343a     retlw   0x3a             	retlw 0x3a
000442   3420     retlw   0x20             	retlw 0x20
000443   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_14	code
                                           _tab
000460   3409     retlw   0x09             	retlw 0x09
000461   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_15	code
                                           _enter
000462   340a     retlw   0x0a             	retlw 0x0a
000463   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_16	code
                                           _sync
000434   3453     retlw   0x53             	retlw 0x53
000435   3459     retlw   0x59             	retlw 0x59
000436   344e     retlw   0x4e             	retlw 0x4e
000437   3443     retlw   0x43             	retlw 0x43
000438   340a     retlw   0x0a             	retlw 0x0a
000439   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_17	code
                                           _int_err
00042b   3449     retlw   0x49             	retlw 0x49
00042c   344e     retlw   0x4e             	retlw 0x4e
00042d   3454     retlw   0x54             	retlw 0x54
00042e   3420     retlw   0x20             	retlw 0x20
00042f   3445     retlw   0x45             	retlw 0x45
000430   3452     retlw   0x52             	retlw 0x52
000431   3452     retlw   0x52             	retlw 0x52
000432   340a     retlw   0x0a             	retlw 0x0a
000433   3400     retlw   0x00             	retlw 0x00
                                           
                                           
                                           ID_main_18	code
                                           _buf_err
00041a   3442     retlw   0x42             	retlw 0x42
00041b   3455     retlw   0x55             	retlw 0x55
00041c   3446     retlw   0x46             	retlw 0x46
00041d   3446     retlw   0x46             	retlw 0x46
00041e   3445     retlw   0x45             	retlw 0x45
00041f   3452     retlw   0x52             	retlw 0x52
000420   3420     retlw   0x20             	retlw 0x20
000421   344f     retlw   0x4f             	retlw 0x4f
000422   3457     retlw   0x57             	retlw 0x57
000423   3445     retlw   0x45             	retlw 0x45
000424   3452     retlw   0x52             	retlw 0x52
000425   3446     retlw   0x46             	retlw 0x46
000426   344c     retlw   0x4c             	retlw 0x4c
000427   344f     retlw   0x4f             	retlw 0x4f
000428   3457     retlw   0x57             	retlw 0x57
000429   340a     retlw   0x0a             	retlw 0x0a
00042a   3400     retlw   0x00             	retlw 0x00
                                           
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; reset vector 
                                           ;--------------------------------------------------------
                                           STARTUP	code 0x0000
000000   0000     nop                      	nop
000001   118a     bcf     0x0a, 0x3        	pagesel __sdcc_gsinit_startup
000002   28d3     goto    0x00d3           	goto	__sdcc_gsinit_startup
                                           ;--------------------------------------------------------
                                           ; interrupt and initialization code
                                           ;--------------------------------------------------------
                                           c_interrupt	code	0x0004
                                           __sdcc_interrupt:
                                           ;***
                                           ;  pBlock Stats: dbName = I
                                           ;***
                                           ;functions called:
                                           ;   _SP_send_error
                                           ;   _SP_send_error
                                           ;5 compiler assigned registers:
                                           ;   r0x1041
                                           ;   r0x1042
                                           ;   r0x1043
                                           ;   STK01
                                           ;   STK00
                                           ;; Starting pCode block
                                           _receive_intr:
                                           ; 0 exit points
                                           ;	.line	84; "main.c"	void receive_intr() __interrupt 0 {
000004   00f2     movwf   0x72             	MOVWF	WSAVE
000005   0e03     swapf   0x03, 0x0        	SWAPF	STATUS,W
000006   0183     clrf    0x03             	CLRF	STATUS
000007   00f1     movwf   0x71             	MOVWF	SSAVE
000008   080a     movf    0x0a, 0x0        	MOVF	PCLATH,W
000009   018a     clrf    0x0a             	CLRF	PCLATH
00000a   00f0     movwf   0x70             	MOVWF	PSAVE
00000b   0804     movf    0x04, 0x0        	MOVF	FSR,W
00000c   1683     bsf     0x03, 0x5        	BANKSEL	___sdcc_saved_fsr
00000d   1303     bcf     0x03, 0x6        
00000e   00ac     movwf   0x2c             	MOVWF	___sdcc_saved_fsr
                                           ;	.line	86; "main.c"	if(TXIF){
00000f   1283     bcf     0x03, 0x5        	BANKSEL	_PIR1bits
000010   1303     bcf     0x03, 0x6        
000011   1e0c     btfss   0x0c, 0x4        	BTFSS	_PIR1bits,4
000012   2863     goto    0x0063           	GOTO	_00111_DS_
                                           ;	.line	88; "main.c"	if (buf_head == buf_tail){
000013   1683     bsf     0x03, 0x5        	BANKSEL	_buf_tail
000014   1303     bcf     0x03, 0x6        
000015   082a     movf    0x2a, 0x0        	MOVF	_buf_tail,W
000016   1683     bsf     0x03, 0x5        	BANKSEL	_buf_head
000017   1303     bcf     0x03, 0x6        
000018   0629     xorwf   0x29, 0x0        	XORWF	_buf_head,W
000019   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00001a   281f     goto    0x001f           	GOTO	_00108_DS_
                                           ;	.line	89; "main.c"	TXIE = 0;
00001b   1683     bsf     0x03, 0x5        	BANKSEL	_PIE1bits
00001c   1303     bcf     0x03, 0x6        
00001d   120c     bcf     0x0c, 0x4        	BCF	_PIE1bits,4
00001e   2863     goto    0x0063           	GOTO	_00111_DS_
                                           _00108_DS_:
                                           ;	.line	94; "main.c"	TXREG = buf[buf_tail];
00001f   1683     bsf     0x03, 0x5        	BANKSEL	_buf_tail
000020   1303     bcf     0x03, 0x6        
000021   082a     movf    0x2a, 0x0        	MOVF	_buf_tail,W
000022   3e45     addlw   0x45             	ADDLW	(_buf + 0)
000023   1283     bcf     0x03, 0x5        	BANKSEL	r0x1041
000024   1303     bcf     0x03, 0x6        
000025   00a0     movwf   0x20             	MOVWF	r0x1041
000026   3000     movlw   0x00             	MOVLW	high (_buf + 0)
000027   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000028   3e01     addlw   0x01             	ADDLW	0x01
000029   00a1     movwf   0x21             	MOVWF	r0x1042
00002a   0820     movf    0x20, 0x0        	MOVF	r0x1041,W
00002b   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00002c   1303     bcf     0x03, 0x6        
00002d   0084     movwf   0x04             	MOVWF	FSR
00002e   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00002f   1283     bcf     0x03, 0x5        	BANKSEL	r0x1042
000030   1303     bcf     0x03, 0x6        
000031   1821     btfsc   0x21, 0x0        	BTFSC	r0x1042,0
000032   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000033   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000034   1303     bcf     0x03, 0x6        
000035   0800     movf    0x00, 0x0        	MOVF	INDF,W
000036   0099     movwf   0x19             	MOVWF	_TXREG
                                           ;	.line	95; "main.c"	buf[buf_tail] = 0;  // clear the data (optional)
000037   1283     bcf     0x03, 0x5        	BANKSEL	r0x1041
000038   1303     bcf     0x03, 0x6        
000039   0820     movf    0x20, 0x0        	MOVF	r0x1041,W
00003a   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00003b   1303     bcf     0x03, 0x6        
00003c   0084     movwf   0x04             	MOVWF	FSR
00003d   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00003e   1283     bcf     0x03, 0x5        	BANKSEL	r0x1042
00003f   1303     bcf     0x03, 0x6        
000040   1821     btfsc   0x21, 0x0        	BTFSC	r0x1042,0
000041   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000042   3000     movlw   0x00             	MOVLW	0x00
000043   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000044   1303     bcf     0x03, 0x6        
000045   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	97; "main.c"	next = buf_tail + 1;
000046   1683     bsf     0x03, 0x5        	BANKSEL	_buf_tail
000047   1303     bcf     0x03, 0x6        
000048   082a     movf    0x2a, 0x0        	MOVF	_buf_tail,W
000049   1283     bcf     0x03, 0x5        	BANKSEL	r0x1041
00004a   1303     bcf     0x03, 0x6        
00004b   00a0     movwf   0x20             	MOVWF	r0x1041
00004c   01a1     clrf    0x21             	CLRF	r0x1042
00004d   0aa0     incf    0x20, 0x1        	INCF	r0x1041,F
00004e   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00004f   0aa1     incf    0x21, 0x1        	INCF	r0x1042,F
                                           ;;signed compare: left < lit(0x10=16), size=2, mask=ffff
                                           ;	.line	98; "main.c"	if(next >= BUF_SIZE)
000050   0821     movf    0x21, 0x0        	MOVF	r0x1042,W
000051   3e80     addlw   0x80             	ADDLW	0x80
000052   3e80     addlw   0x80             	ADDLW	0x80
000053   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000054   2857     goto    0x0057           	GOTO	_00139_DS_
000055   3010     movlw   0x10             	MOVLW	0x10
000056   0220     subwf   0x20, 0x0        	SUBWF	r0x1041,W
                                           _00139_DS_:
000057   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000058   285d     goto    0x005d           	GOTO	_00106_DS_
                                           ;;genSkipc:3257: created from rifx:0x7fffe35b3b10
                                           ;	.line	99; "main.c"	next = 0;
000059   1283     bcf     0x03, 0x5        	BANKSEL	r0x1041
00005a   1303     bcf     0x03, 0x6        
00005b   01a0     clrf    0x20             	CLRF	r0x1041
00005c   01a1     clrf    0x21             	CLRF	r0x1042
                                           _00106_DS_:
                                           ;	.line	101; "main.c"	buf_tail = next;
00005d   1283     bcf     0x03, 0x5        	BANKSEL	r0x1041
00005e   1303     bcf     0x03, 0x6        
00005f   0820     movf    0x20, 0x0        	MOVF	r0x1041,W
000060   1683     bsf     0x03, 0x5        	BANKSEL	_buf_tail
000061   1303     bcf     0x03, 0x6        
000062   00aa     movwf   0x2a             	MOVWF	_buf_tail
                                           _00111_DS_:
                                           ;	.line	105; "main.c"	if(CCP1IF){
000063   1283     bcf     0x03, 0x5        	BANKSEL	_PIR1bits
000064   1303     bcf     0x03, 0x6        
000065   1d0c     btfss   0x0c, 0x2        	BTFSS	_PIR1bits,2
000066   28ae     goto    0x00ae           	GOTO	_00116_DS_
                                           ;	.line	106; "main.c"	CCP1IE = FALSE;
000067   1683     bsf     0x03, 0x5        	BANKSEL	_PIE1bits
000068   1303     bcf     0x03, 0x6        
000069   110c     bcf     0x0c, 0x2        	BCF	_PIE1bits,2
                                           ;	.line	108; "main.c"	if(CCP1M0){                     // if ECCP mode is Rising edge CCP1M0
00006a   1283     bcf     0x03, 0x5        	BANKSEL	_CCP1CONbits
00006b   1303     bcf     0x03, 0x6        
00006c   1c17     btfss   0x17, 0x0        	BTFSS	_CCP1CONbits,0
00006d   288d     goto    0x008d           	GOTO	_00113_DS_
                                           ;	.line	109; "main.c"	CCP1M0 = FALING;                 // set falling edge
00006e   1017     bcf     0x17, 0x0        	BCF	_CCP1CONbits,0
                                           ;	.line	110; "main.c"	TMR1H = 0;
00006f   018f     clrf    0x0f             	CLRF	_TMR1H
                                           ;	.line	111; "main.c"	TMR1L = 0;
000070   018e     clrf    0x0e             	CLRF	_TMR1L
                                           ;	.line	112; "main.c"	t = 0x0000 | CCPR1H;        //ECCP result higher 8 bits
000071   0816     movf    0x16, 0x0        	MOVF	_CCPR1H,W
000072   1283     bcf     0x03, 0x5        	BANKSEL	r0x1041
000073   1303     bcf     0x03, 0x6        
000074   00a0     movwf   0x20             	MOVWF	r0x1041
000075   1683     bsf     0x03, 0x5        	BANKSEL	_t
000076   1303     bcf     0x03, 0x6        
000077   00a2     movwf   0x22             	MOVWF	_t
000078   01a3     clrf    0x23             	CLRF	(_t + 1)
                                           ;	.line	113; "main.c"	t = t << 8;
000079   0822     movf    0x22, 0x0        	MOVF	_t,W
00007a   00a3     movwf   0x23             	MOVWF	(_t + 1)
00007b   01a2     clrf    0x22             	CLRF	_t
                                           ;	.line	114; "main.c"	t = t | CCPR1L;             //ECCP combined 16 bit number formation
00007c   1283     bcf     0x03, 0x5        	BANKSEL	_CCPR1L
00007d   1303     bcf     0x03, 0x6        
00007e   0815     movf    0x15, 0x0        	MOVF	_CCPR1L,W
00007f   1283     bcf     0x03, 0x5        	BANKSEL	r0x1041
000080   1303     bcf     0x03, 0x6        
000081   00a0     movwf   0x20             	MOVWF	r0x1041
000082   01a1     clrf    0x21             	CLRF	r0x1042
000083   0820     movf    0x20, 0x0        	MOVF	r0x1041,W
000084   1683     bsf     0x03, 0x5        	BANKSEL	_t
000085   1303     bcf     0x03, 0x6        
000086   04a2     iorwf   0x22, 0x1        	IORWF	_t,F
000087   3000     movlw   0x00             	MOVLW	0x00
000088   04a3     iorwf   0x23, 0x1        	IORWF	(_t + 1),F
                                           ;	.line	115; "main.c"	bitfield.Capture = TRUE;
000089   1683     bsf     0x03, 0x5        	BANKSEL	_bitfield
00008a   1303     bcf     0x03, 0x6        
00008b   1428     bsf     0x28, 0x0        	BSF	_bitfield,0
00008c   28a8     goto    0x00a8           	GOTO	_00114_DS_
                                           _00113_DS_:
                                           ;	.line	118; "main.c"	CCP1M0 = RISING;
00008d   1283     bcf     0x03, 0x5        	BANKSEL	_CCP1CONbits
00008e   1303     bcf     0x03, 0x6        
00008f   1417     bsf     0x17, 0x0        	BSF	_CCP1CONbits,0
                                           ;	.line	119; "main.c"	w = 0x0000 | CCPR1H;        //ECCP result higher 8 bits
000090   0816     movf    0x16, 0x0        	MOVF	_CCPR1H,W
000091   1283     bcf     0x03, 0x5        	BANKSEL	r0x1041
000092   1303     bcf     0x03, 0x6        
000093   00a0     movwf   0x20             	MOVWF	r0x1041
000094   1683     bsf     0x03, 0x5        	BANKSEL	_w
000095   1303     bcf     0x03, 0x6        
000096   00a0     movwf   0x20             	MOVWF	_w
000097   01a1     clrf    0x21             	CLRF	(_w + 1)
                                           ;	.line	120; "main.c"	w = w << 8;
000098   0820     movf    0x20, 0x0        	MOVF	_w,W
000099   00a1     movwf   0x21             	MOVWF	(_w + 1)
00009a   01a0     clrf    0x20             	CLRF	_w
                                           ;	.line	121; "main.c"	w = w | CCPR1L;             //ECCP combined 16 bit number formation
00009b   1283     bcf     0x03, 0x5        	BANKSEL	_CCPR1L
00009c   1303     bcf     0x03, 0x6        
00009d   0815     movf    0x15, 0x0        	MOVF	_CCPR1L,W
00009e   1283     bcf     0x03, 0x5        	BANKSEL	r0x1041
00009f   1303     bcf     0x03, 0x6        
0000a0   00a0     movwf   0x20             	MOVWF	r0x1041
0000a1   01a1     clrf    0x21             	CLRF	r0x1042
0000a2   0820     movf    0x20, 0x0        	MOVF	r0x1041,W
0000a3   1683     bsf     0x03, 0x5        	BANKSEL	_w
0000a4   1303     bcf     0x03, 0x6        
0000a5   04a0     iorwf   0x20, 0x1        	IORWF	_w,F
0000a6   3000     movlw   0x00             	MOVLW	0x00
0000a7   04a1     iorwf   0x21, 0x1        	IORWF	(_w + 1),F
                                           _00114_DS_:
                                           ;	.line	124; "main.c"	CCP1IE = 1;
0000a8   1683     bsf     0x03, 0x5        	BANKSEL	_PIE1bits
0000a9   1303     bcf     0x03, 0x6        
0000aa   150c     bsf     0x0c, 0x2        	BSF	_PIE1bits,2
                                           ;	.line	125; "main.c"	CCP1IF = 0;                     //Clear interrupt flag
0000ab   1283     bcf     0x03, 0x5        	BANKSEL	_PIR1bits
0000ac   1303     bcf     0x03, 0x6        
0000ad   110c     bcf     0x0c, 0x2        	BCF	_PIR1bits,2
                                           _00116_DS_:
                                           ;	.line	127; "main.c"	int_error_cnt++;
0000ae   1683     bsf     0x03, 0x5        	BANKSEL	_int_error_cnt
0000af   1303     bcf     0x03, 0x6        
0000b0   0aab     incf    0x2b, 0x1        	INCF	_int_error_cnt,F
                                           ;;swapping arguments (AOP_TYPEs 1/3)
                                           ;;unsigned compare: left >= lit(0x65=101), size=1
                                           ;	.line	128; "main.c"	if (int_error_cnt > 100)
0000b1   3065     movlw   0x65             	MOVLW	0x65
0000b2   022b     subwf   0x2b, 0x0        	SUBWF	_int_error_cnt,W
0000b3   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0000b4   28c5     goto    0x00c5           	GOTO	_00119_DS_
                                           ;;genSkipc:3257: created from rifx:0x7fffe35b3b10
                                           ;	.line	129; "main.c"	SP_send_error(int_err);
0000b5   3004     movlw   0x04             	MOVLW	high (_int_err + 0)
0000b6   1283     bcf     0x03, 0x5        	BANKSEL	r0x1042
0000b7   1303     bcf     0x03, 0x6        
0000b8   00a1     movwf   0x21             	MOVWF	r0x1042
0000b9   302b     movlw   0x2b             	MOVLW	(_int_err + 0)
0000ba   00a0     movwf   0x20             	MOVWF	r0x1041
0000bb   3080     movlw   0x80             	MOVLW	0x80
0000bc   00a2     movwf   0x22             	MOVWF	r0x1043
0000bd   0820     movf    0x20, 0x0        	MOVF	r0x1041,W
0000be   00fe     movwf   0x7e             	MOVWF	STK01
0000bf   0821     movf    0x21, 0x0        	MOVF	r0x1042,W
0000c0   00ff     movwf   0x7f             	MOVWF	STK00
0000c1   0822     movf    0x22, 0x0        	MOVF	r0x1043,W
0000c2   118a     bcf     0x0a, 0x3        	PAGESEL	_SP_send_error
0000c3   2322     call    0x0322           	CALL	_SP_send_error
0000c4   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           _00119_DS_:
0000c5   1683     bsf     0x03, 0x5        	BANKSEL	___sdcc_saved_fsr
0000c6   1303     bcf     0x03, 0x6        
0000c7   082c     movf    0x2c, 0x0        	MOVF	___sdcc_saved_fsr,W
0000c8   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0000c9   1303     bcf     0x03, 0x6        
0000ca   0084     movwf   0x04             	MOVWF	FSR
0000cb   0870     movf    0x70, 0x0        	MOVF	PSAVE,W
0000cc   008a     movwf   0x0a             	MOVWF	PCLATH
0000cd   0183     clrf    0x03             	CLRF	STATUS
0000ce   0e71     swapf   0x71, 0x0        	SWAPF	SSAVE,W
0000cf   0083     movwf   0x03             	MOVWF	STATUS
0000d0   0ef2     swapf   0x72, 0x1        	SWAPF	WSAVE,F
0000d1   0e72     swapf   0x72, 0x0        	SWAPF	WSAVE,W
                                           END_OF_INTERRUPT:
0000d2   0009     retfie                   	RETFIE	
                                           
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_main	code
                                           ;***
                                           ;  pBlock Stats: dbName = M
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _init
                                           ;   _dec_to_ascii
                                           ;   _SP_send
                                           ;   _dec_to_ascii
                                           ;   _SP_send
                                           ;   _init
                                           ;   _dec_to_ascii
                                           ;   _SP_send
                                           ;   _dec_to_ascii
                                           ;   _SP_send
                                           ;5 compiler assigned registers:
                                           ;   STK00
                                           ;   r0x103E
                                           ;   r0x103F
                                           ;   r0x1040
                                           ;   STK01
                                           ;; Starting pCode block
                                           S_main__main	code
                                           _main:
                                           ; 2 exit points
                                           ;	.line	135; "main.c"	init();
0001ed   118a     bcf     0x0a, 0x3        	PAGESEL	_init
0001ee   23bd     call    0x03bd           	CALL	_init
0001ef   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           _00147_DS_:
                                           ;	.line	139; "main.c"	if (bitfield.Capture){
0001f0   1683     bsf     0x03, 0x5        	BANKSEL	_bitfield
0001f1   1303     bcf     0x03, 0x6        
0001f2   1c28     btfss   0x28, 0x0        	BTFSS	_bitfield,0
0001f3   2a3f     goto    0x023f           	GOTO	_00145_DS_
                                           ;	.line	140; "main.c"	dec_to_ascii(w);
0001f4   1683     bsf     0x03, 0x5        	BANKSEL	_w
0001f5   1303     bcf     0x03, 0x6        
0001f6   0820     movf    0x20, 0x0        	MOVF	_w,W
0001f7   00ff     movwf   0x7f             	MOVWF	STK00
0001f8   0821     movf    0x21, 0x0        	MOVF	(_w + 1),W
0001f9   118a     bcf     0x0a, 0x3        	PAGESEL	_dec_to_ascii
0001fa   216f     call    0x016f           	CALL	_dec_to_ascii
0001fb   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	141; "main.c"	SP_send(tab);
0001fc   3004     movlw   0x04             	MOVLW	high (_tab + 0)
0001fd   1283     bcf     0x03, 0x5        	BANKSEL	r0x103E
0001fe   1303     bcf     0x03, 0x6        
0001ff   00a4     movwf   0x24             	MOVWF	r0x103E
000200   3060     movlw   0x60             	MOVLW	(_tab + 0)
000201   00a3     movwf   0x23             	MOVWF	r0x103F
000202   3080     movlw   0x80             	MOVLW	0x80
000203   00a5     movwf   0x25             	MOVWF	r0x1040
000204   0823     movf    0x23, 0x0        	MOVF	r0x103F,W
000205   00fe     movwf   0x7e             	MOVWF	STK01
000206   0824     movf    0x24, 0x0        	MOVF	r0x103E,W
000207   00ff     movwf   0x7f             	MOVWF	STK00
000208   0825     movf    0x25, 0x0        	MOVF	r0x1040,W
000209   118a     bcf     0x0a, 0x3        	PAGESEL	_SP_send
00020a   23ee     call    0x03ee           	CALL	_SP_send
00020b   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	142; "main.c"	dec_to_ascii(t);
00020c   1683     bsf     0x03, 0x5        	BANKSEL	_t
00020d   1303     bcf     0x03, 0x6        
00020e   0822     movf    0x22, 0x0        	MOVF	_t,W
00020f   00ff     movwf   0x7f             	MOVWF	STK00
000210   0823     movf    0x23, 0x0        	MOVF	(_t + 1),W
000211   118a     bcf     0x0a, 0x3        	PAGESEL	_dec_to_ascii
000212   216f     call    0x016f           	CALL	_dec_to_ascii
000213   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	143; "main.c"	SP_send(enter);
000214   3004     movlw   0x04             	MOVLW	high (_enter + 0)
000215   1283     bcf     0x03, 0x5        	BANKSEL	r0x103E
000216   1303     bcf     0x03, 0x6        
000217   00a4     movwf   0x24             	MOVWF	r0x103E
000218   3062     movlw   0x62             	MOVLW	(_enter + 0)
000219   00a3     movwf   0x23             	MOVWF	r0x103F
00021a   3080     movlw   0x80             	MOVLW	0x80
00021b   00a5     movwf   0x25             	MOVWF	r0x1040
00021c   0823     movf    0x23, 0x0        	MOVF	r0x103F,W
00021d   00fe     movwf   0x7e             	MOVWF	STK01
00021e   0824     movf    0x24, 0x0        	MOVF	r0x103E,W
00021f   00ff     movwf   0x7f             	MOVWF	STK00
000220   0825     movf    0x25, 0x0        	MOVF	r0x1040,W
000221   118a     bcf     0x0a, 0x3        	PAGESEL	_SP_send
000222   23ee     call    0x03ee           	CALL	_SP_send
000223   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	157; "main.c"	t1 = t;
000224   1683     bsf     0x03, 0x5        	BANKSEL	_t
000225   1303     bcf     0x03, 0x6        
000226   0822     movf    0x22, 0x0        	MOVF	_t,W
000227   1683     bsf     0x03, 0x5        	BANKSEL	_t1
000228   1303     bcf     0x03, 0x6        
000229   00a6     movwf   0x26             	MOVWF	_t1
00022a   1683     bsf     0x03, 0x5        	BANKSEL	_t
00022b   1303     bcf     0x03, 0x6        
00022c   0823     movf    0x23, 0x0        	MOVF	(_t + 1),W
00022d   1683     bsf     0x03, 0x5        	BANKSEL	_t1
00022e   1303     bcf     0x03, 0x6        
00022f   00a7     movwf   0x27             	MOVWF	(_t1 + 1)
                                           ;	.line	158; "main.c"	w1 = w;
000230   1683     bsf     0x03, 0x5        	BANKSEL	_w
000231   1303     bcf     0x03, 0x6        
000232   0820     movf    0x20, 0x0        	MOVF	_w,W
000233   1683     bsf     0x03, 0x5        	BANKSEL	_w1
000234   1303     bcf     0x03, 0x6        
000235   00a4     movwf   0x24             	MOVWF	_w1
000236   1683     bsf     0x03, 0x5        	BANKSEL	_w
000237   1303     bcf     0x03, 0x6        
000238   0821     movf    0x21, 0x0        	MOVF	(_w + 1),W
000239   1683     bsf     0x03, 0x5        	BANKSEL	_w1
00023a   1303     bcf     0x03, 0x6        
00023b   00a5     movwf   0x25             	MOVWF	(_w1 + 1)
                                           ;	.line	159; "main.c"	bitfield.Capture = FALSE;
00023c   1683     bsf     0x03, 0x5        	BANKSEL	_bitfield
00023d   1303     bcf     0x03, 0x6        
00023e   1028     bcf     0x28, 0x0        	BCF	_bitfield,0
                                           _00145_DS_:
                                           ;	.line	162; "main.c"	int_error_cnt = 0;
00023f   1683     bsf     0x03, 0x5        	BANKSEL	_int_error_cnt
000240   1303     bcf     0x03, 0x6        
000241   01ab     clrf    0x2b             	CLRF	_int_error_cnt
000242   29f0     goto    0x01f0           	GOTO	_00147_DS_
000243   0008     return                   	RETURN	
                                           ; exit point of _main
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   __gptrget1
                                           ;   __gptrget1
                                           ;10 compiler assigned registers:
                                           ;   r0x1021
                                           ;   STK00
                                           ;   r0x1022
                                           ;   STK01
                                           ;   r0x1023
                                           ;   r0x1024
                                           ;   r0x1025
                                           ;   r0x1026
                                           ;   r0x1027
                                           ;   r0x1028
                                           ;; Starting pCode block
                                           S_main__SP_send_error	code
                                           _SP_send_error:
                                           ; 2 exit points
                                           ;	.line	221; "main.c"	void SP_send_error(char str[])
000322   1283     bcf     0x03, 0x5        	BANKSEL	r0x1021
000323   1303     bcf     0x03, 0x6        
000324   00bb     movwf   0x3b             	MOVWF	r0x1021
000325   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000326   00ba     movwf   0x3a             	MOVWF	r0x1022
000327   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000328   00b9     movwf   0x39             	MOVWF	r0x1023
                                           ;	.line	224; "main.c"	GIE = FALSE;	// Disable all interrupts.
000329   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
00032a   1303     bcf     0x03, 0x6        
00032b   138b     bcf     0x0b, 0x7        	BCF	_INTCONbits,7
                                           ;	.line	225; "main.c"	for(i=0; str[i] != '\0'; i++)
00032c   1283     bcf     0x03, 0x5        	BANKSEL	r0x1024
00032d   1303     bcf     0x03, 0x6        
00032e   01bc     clrf    0x3c             	CLRF	r0x1024
                                           _00193_DS_:
00032f   1283     bcf     0x03, 0x5        	BANKSEL	r0x1024
000330   1303     bcf     0x03, 0x6        
000331   083c     movf    0x3c, 0x0        	MOVF	r0x1024,W
000332   0739     addwf   0x39, 0x0        	ADDWF	r0x1023,W
000333   00bd     movwf   0x3d             	MOVWF	r0x1025
000334   083a     movf    0x3a, 0x0        	MOVF	r0x1022,W
000335   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000336   3e01     addlw   0x01             	ADDLW	0x01
000337   00be     movwf   0x3e             	MOVWF	r0x1026
000338   083b     movf    0x3b, 0x0        	MOVF	r0x1021,W
000339   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00033a   3e01     addlw   0x01             	ADDLW	0x01
00033b   00bf     movwf   0x3f             	MOVWF	r0x1027
00033c   083d     movf    0x3d, 0x0        	MOVF	r0x1025,W
00033d   00fe     movwf   0x7e             	MOVWF	STK01
00033e   083e     movf    0x3e, 0x0        	MOVF	r0x1026,W
00033f   00ff     movwf   0x7f             	MOVWF	STK00
000340   083f     movf    0x3f, 0x0        	MOVF	r0x1027,W
000341   118a     bcf     0x0a, 0x3        	PAGESEL	__gptrget1
000342   2357     call    0x0357           	CALL	__gptrget1
000343   118a     bcf     0x0a, 0x3        	PAGESEL	$
000344   1283     bcf     0x03, 0x5        	BANKSEL	r0x1028
000345   1303     bcf     0x03, 0x6        
000346   00c0     movwf   0x40             	MOVWF	r0x1028
000347   0840     movf    0x40, 0x0        	MOVF	r0x1028,W
000348   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000349   2b56     goto    0x0356           	GOTO	_00195_DS_
                                           ;	.line	227; "main.c"	TXREG=str[i];	// Add a character to the output buffer
00034a   0840     movf    0x40, 0x0        	MOVF	r0x1028,W
00034b   1283     bcf     0x03, 0x5        	BANKSEL	_TXREG
00034c   1303     bcf     0x03, 0x6        
00034d   0099     movwf   0x19             	MOVWF	_TXREG
                                           _00188_DS_:
                                           ;	.line	228; "main.c"	while(!TXIF);	// Wait while the output buffer is full
00034e   1283     bcf     0x03, 0x5        	BANKSEL	_PIR1bits
00034f   1303     bcf     0x03, 0x6        
000350   1e0c     btfss   0x0c, 0x4        	BTFSS	_PIR1bits,4
000351   2b4e     goto    0x034e           	GOTO	_00188_DS_
                                           ;	.line	225; "main.c"	for(i=0; str[i] != '\0'; i++)
000352   1283     bcf     0x03, 0x5        	BANKSEL	r0x1024
000353   1303     bcf     0x03, 0x6        
000354   0abc     incf    0x3c, 0x1        	INCF	r0x1024,F
000355   2b2f     goto    0x032f           	GOTO	_00193_DS_
                                           _00195_DS_:
000356   0008     return                   	RETURN	
                                           ; exit point of _SP_send_error
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   __gptrget1
                                           ;   _circBufPush
                                           ;   __gptrget1
                                           ;   _circBufPush
                                           ;10 compiler assigned registers:
                                           ;   r0x102E
                                           ;   STK00
                                           ;   r0x102F
                                           ;   STK01
                                           ;   r0x1030
                                           ;   r0x1031
                                           ;   r0x1032
                                           ;   r0x1033
                                           ;   r0x1034
                                           ;   r0x1035
                                           ;; Starting pCode block
                                           S_main__SP_send	code
                                           _SP_send:
                                           ; 2 exit points
                                           ;	.line	213; "main.c"	void SP_send(char str[]){
0003ee   1283     bcf     0x03, 0x5        	BANKSEL	r0x102E
0003ef   1303     bcf     0x03, 0x6        
0003f0   00b3     movwf   0x33             	MOVWF	r0x102E
0003f1   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0003f2   00b2     movwf   0x32             	MOVWF	r0x102F
0003f3   087e     movf    0x7e, 0x0        	MOVF	STK01,W
0003f4   00b1     movwf   0x31             	MOVWF	r0x1030
                                           ;	.line	215; "main.c"	for(i=0; str[i] != '\0'; i++)
0003f5   01b4     clrf    0x34             	CLRF	r0x1031
                                           _00181_DS_:
0003f6   1283     bcf     0x03, 0x5        	BANKSEL	r0x1031
0003f7   1303     bcf     0x03, 0x6        
0003f8   0834     movf    0x34, 0x0        	MOVF	r0x1031,W
0003f9   0731     addwf   0x31, 0x0        	ADDWF	r0x1030,W
0003fa   00b5     movwf   0x35             	MOVWF	r0x1032
0003fb   0832     movf    0x32, 0x0        	MOVF	r0x102F,W
0003fc   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0003fd   3e01     addlw   0x01             	ADDLW	0x01
0003fe   00b6     movwf   0x36             	MOVWF	r0x1033
0003ff   0833     movf    0x33, 0x0        	MOVF	r0x102E,W
000400   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000401   3e01     addlw   0x01             	ADDLW	0x01
000402   00b7     movwf   0x37             	MOVWF	r0x1034
000403   0835     movf    0x35, 0x0        	MOVF	r0x1032,W
000404   00fe     movwf   0x7e             	MOVWF	STK01
000405   0836     movf    0x36, 0x0        	MOVF	r0x1033,W
000406   00ff     movwf   0x7f             	MOVWF	STK00
000407   0837     movf    0x37, 0x0        	MOVF	r0x1034,W
000408   118a     bcf     0x0a, 0x3        	PAGESEL	__gptrget1
000409   2357     call    0x0357           	CALL	__gptrget1
00040a   118a     bcf     0x0a, 0x3        	PAGESEL	$
00040b   1283     bcf     0x03, 0x5        	BANKSEL	r0x1035
00040c   1303     bcf     0x03, 0x6        
00040d   00b8     movwf   0x38             	MOVWF	r0x1035
00040e   0838     movf    0x38, 0x0        	MOVF	r0x1035,W
00040f   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000410   2c19     goto    0x0419           	GOTO	_00183_DS_
                                           ;	.line	217; "main.c"	circBufPush(str[i]);
000411   0838     movf    0x38, 0x0        	MOVF	r0x1035,W
000412   118a     bcf     0x0a, 0x3        	PAGESEL	_circBufPush
000413   2293     call    0x0293           	CALL	_circBufPush
000414   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	215; "main.c"	for(i=0; str[i] != '\0'; i++)
000415   1283     bcf     0x03, 0x5        	BANKSEL	r0x1031
000416   1303     bcf     0x03, 0x6        
000417   0ab4     incf    0x34, 0x1        	INCF	r0x1031,F
000418   2bf6     goto    0x03f6           	GOTO	_00181_DS_
                                           _00183_DS_:
000419   0008     return                   	RETURN	
                                           ; exit point of _SP_send
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   __moduint
                                           ;   __divuint
                                           ;   _circBufPush
                                           ;   __moduint
                                           ;   __divuint
                                           ;   _circBufPush
                                           ;11 compiler assigned registers:
                                           ;   r0x1036
                                           ;   STK00
                                           ;   r0x1037
                                           ;   r0x1038
                                           ;   r0x1039
                                           ;   r0x103A
                                           ;   STK02
                                           ;   STK01
                                           ;   r0x103B
                                           ;   r0x103C
                                           ;   r0x103D
                                           ;; Starting pCode block
                                           S_main__dec_to_ascii	code
                                           _dec_to_ascii:
                                           ; 2 exit points
                                           ;	.line	195; "main.c"	void dec_to_ascii(unsigned short dec)
00016f   1283     bcf     0x03, 0x5        	BANKSEL	r0x1036
000170   1303     bcf     0x03, 0x6        
000171   00ac     movwf   0x2c             	MOVWF	r0x1036
000172   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000173   00ab     movwf   0x2b             	MOVWF	r0x1037
                                           ;	.line	200; "main.c"	for (i=0; dec!=0 || i==0; i++)
000174   01ad     clrf    0x2d             	CLRF	r0x1038
                                           _00167_DS_:
000175   1283     bcf     0x03, 0x5        	BANKSEL	r0x1037
000176   1303     bcf     0x03, 0x6        
000177   082b     movf    0x2b, 0x0        	MOVF	r0x1037,W
000178   042c     iorwf   0x2c, 0x0        	IORWF	r0x1036,W
000179   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00017a   297e     goto    0x017e           	GOTO	_00166_DS_
00017b   082d     movf    0x2d, 0x0        	MOVF	r0x1038,W
00017c   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00017d   29c6     goto    0x01c6           	GOTO	_00174_DS_
                                           _00166_DS_:
                                           ;	.line	202; "main.c"	number[i]=(dec % 10);
00017e   1283     bcf     0x03, 0x5        	BANKSEL	r0x1038
00017f   1303     bcf     0x03, 0x6        
000180   082d     movf    0x2d, 0x0        	MOVF	r0x1038,W
000181   3e41     addlw   0x41             	ADDLW	(_dec_to_ascii_number_1_20 + 0)
000182   00ae     movwf   0x2e             	MOVWF	r0x1039
000183   3000     movlw   0x00             	MOVLW	high (_dec_to_ascii_number_1_20 + 0)
000184   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000185   3e01     addlw   0x01             	ADDLW	0x01
000186   00af     movwf   0x2f             	MOVWF	r0x103A
000187   300a     movlw   0x0a             	MOVLW	0x0a
000188   00fd     movwf   0x7d             	MOVWF	STK02
000189   3000     movlw   0x00             	MOVLW	0x00
00018a   00fe     movwf   0x7e             	MOVWF	STK01
00018b   082b     movf    0x2b, 0x0        	MOVF	r0x1037,W
00018c   00ff     movwf   0x7f             	MOVWF	STK00
00018d   082c     movf    0x2c, 0x0        	MOVF	r0x1036,W
00018e   118a     bcf     0x0a, 0x3        	PAGESEL	__moduint
00018f   22df     call    0x02df           	CALL	__moduint
000190   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;;1	MOVWF	r0x103B
000191   087f     movf    0x7f, 0x0        	MOVF	STK00,W
                                           ;;1	MOVWF	r0x103C
000192   1283     bcf     0x03, 0x5        	BANKSEL	r0x103D
000193   1303     bcf     0x03, 0x6        
000194   00b0     movwf   0x30             	MOVWF	r0x103D
000195   082e     movf    0x2e, 0x0        	MOVF	r0x1039,W
000196   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000197   1303     bcf     0x03, 0x6        
000198   0084     movwf   0x04             	MOVWF	FSR
000199   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00019a   1283     bcf     0x03, 0x5        	BANKSEL	r0x103A
00019b   1303     bcf     0x03, 0x6        
00019c   182f     btfsc   0x2f, 0x0        	BTFSC	r0x103A,0
00019d   1783     bsf     0x03, 0x7        	BSF	STATUS,7
00019e   0830     movf    0x30, 0x0        	MOVF	r0x103D,W
00019f   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0001a0   1303     bcf     0x03, 0x6        
0001a1   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	203; "main.c"	dec /=10;
0001a2   300a     movlw   0x0a             	MOVLW	0x0a
0001a3   00fd     movwf   0x7d             	MOVWF	STK02
0001a4   3000     movlw   0x00             	MOVLW	0x00
0001a5   00fe     movwf   0x7e             	MOVWF	STK01
0001a6   1283     bcf     0x03, 0x5        	BANKSEL	r0x1037
0001a7   1303     bcf     0x03, 0x6        
0001a8   082b     movf    0x2b, 0x0        	MOVF	r0x1037,W
0001a9   00ff     movwf   0x7f             	MOVWF	STK00
0001aa   082c     movf    0x2c, 0x0        	MOVF	r0x1036,W
0001ab   118a     bcf     0x0a, 0x3        	PAGESEL	__divuint
0001ac   2244     call    0x0244           	CALL	__divuint
0001ad   118a     bcf     0x0a, 0x3        	PAGESEL	$
0001ae   1283     bcf     0x03, 0x5        	BANKSEL	r0x1036
0001af   1303     bcf     0x03, 0x6        
0001b0   00ac     movwf   0x2c             	MOVWF	r0x1036
0001b1   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0001b2   00ab     movwf   0x2b             	MOVWF	r0x1037
                                           ;	.line	204; "main.c"	number[i] +=48;
0001b3   3030     movlw   0x30             	MOVLW	0x30
0001b4   07b0     addwf   0x30, 0x1        	ADDWF	r0x103D,F
0001b5   082e     movf    0x2e, 0x0        	MOVF	r0x1039,W
0001b6   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0001b7   1303     bcf     0x03, 0x6        
0001b8   0084     movwf   0x04             	MOVWF	FSR
0001b9   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0001ba   1283     bcf     0x03, 0x5        	BANKSEL	r0x103A
0001bb   1303     bcf     0x03, 0x6        
0001bc   182f     btfsc   0x2f, 0x0        	BTFSC	r0x103A,0
0001bd   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0001be   0830     movf    0x30, 0x0        	MOVF	r0x103D,W
0001bf   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0001c0   1303     bcf     0x03, 0x6        
0001c1   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	200; "main.c"	for (i=0; dec!=0 || i==0; i++)
0001c2   1283     bcf     0x03, 0x5        	BANKSEL	r0x1038
0001c3   1303     bcf     0x03, 0x6        
0001c4   0aad     incf    0x2d, 0x1        	INCF	r0x1038,F
0001c5   2975     goto    0x0175           	GOTO	_00167_DS_
                                           _00174_DS_:
                                           ;	.line	206; "main.c"	while (i--)
0001c6   1283     bcf     0x03, 0x5        	BANKSEL	r0x1038
0001c7   1303     bcf     0x03, 0x6        
0001c8   082d     movf    0x2d, 0x0        	MOVF	r0x1038,W
0001c9   00ab     movwf   0x2b             	MOVWF	r0x1037
                                           _00162_DS_:
0001ca   1283     bcf     0x03, 0x5        	BANKSEL	r0x1037
0001cb   1303     bcf     0x03, 0x6        
0001cc   082b     movf    0x2b, 0x0        	MOVF	r0x1037,W
0001cd   00ac     movwf   0x2c             	MOVWF	r0x1036
0001ce   03ab     decf    0x2b, 0x1        	DECF	r0x1037,F
0001cf   082c     movf    0x2c, 0x0        	MOVF	r0x1036,W
0001d0   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0001d1   29ec     goto    0x01ec           	GOTO	_00169_DS_
                                           ;	.line	208; "main.c"	circBufPush(number[i]);	// Add a character to the output buffer
0001d2   082b     movf    0x2b, 0x0        	MOVF	r0x1037,W
0001d3   3e41     addlw   0x41             	ADDLW	(_dec_to_ascii_number_1_20 + 0)
0001d4   00ac     movwf   0x2c             	MOVWF	r0x1036
0001d5   3000     movlw   0x00             	MOVLW	high (_dec_to_ascii_number_1_20 + 0)
0001d6   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0001d7   3e01     addlw   0x01             	ADDLW	0x01
0001d8   00ad     movwf   0x2d             	MOVWF	r0x1038
0001d9   082c     movf    0x2c, 0x0        	MOVF	r0x1036,W
0001da   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0001db   1303     bcf     0x03, 0x6        
0001dc   0084     movwf   0x04             	MOVWF	FSR
0001dd   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0001de   1283     bcf     0x03, 0x5        	BANKSEL	r0x1038
0001df   1303     bcf     0x03, 0x6        
0001e0   182d     btfsc   0x2d, 0x0        	BTFSC	r0x1038,0
0001e1   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0001e2   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0001e3   1303     bcf     0x03, 0x6        
0001e4   0800     movf    0x00, 0x0        	MOVF	INDF,W
0001e5   1283     bcf     0x03, 0x5        	BANKSEL	r0x1039
0001e6   1303     bcf     0x03, 0x6        
0001e7   00ae     movwf   0x2e             	MOVWF	r0x1039
0001e8   118a     bcf     0x0a, 0x3        	PAGESEL	_circBufPush
0001e9   2293     call    0x0293           	CALL	_circBufPush
0001ea   118a     bcf     0x0a, 0x3        	PAGESEL	$
0001eb   29ca     goto    0x01ca           	GOTO	_00162_DS_
                                           _00169_DS_:
0001ec   0008     return                   	RETURN	
                                           ; exit point of _dec_to_ascii
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _SP_send_error
                                           ;   _SP_send_error
                                           ;7 compiler assigned registers:
                                           ;   r0x1029
                                           ;   r0x102A
                                           ;   r0x102B
                                           ;   r0x102C
                                           ;   r0x102D
                                           ;   STK01
                                           ;   STK00
                                           ;; Starting pCode block
                                           S_main__circBufPush	code
                                           _circBufPush:
                                           ; 2 exit points
                                           ;	.line	166; "main.c"	int circBufPush(uint8_t data){
000293   1283     bcf     0x03, 0x5        	BANKSEL	r0x1029
000294   1303     bcf     0x03, 0x6        
000295   00a6     movwf   0x26             	MOVWF	r0x1029
                                           ;	.line	167; "main.c"	uint8_t next = buf_head + 1;
000296   1683     bsf     0x03, 0x5        	BANKSEL	_buf_head
000297   1303     bcf     0x03, 0x6        
000298   0a29     incf    0x29, 0x0        	INCF	_buf_head,W
000299   1283     bcf     0x03, 0x5        	BANKSEL	r0x102A
00029a   1303     bcf     0x03, 0x6        
00029b   00a7     movwf   0x27             	MOVWF	r0x102A
                                           ;;unsigned compare: left < lit(0x10=16), size=1
                                           ;	.line	168; "main.c"	if (next >= BUF_SIZE)
00029c   3010     movlw   0x10             	MOVLW	0x10
                                           ;	.line	169; "main.c"	next = 0;
00029d   0227     subwf   0x27, 0x0        	SUBWF	r0x102A,W
                                           ;	.line	172; "main.c"	if (next == buf_tail){
00029e   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00029f   01a7     clrf    0x27             	CLRF	r0x102A
0002a0   1683     bsf     0x03, 0x5        	BANKSEL	_buf_tail
0002a1   1303     bcf     0x03, 0x6        
0002a2   082a     movf    0x2a, 0x0        	MOVF	_buf_tail,W
0002a3   1283     bcf     0x03, 0x5        	BANKSEL	r0x102A
0002a4   1303     bcf     0x03, 0x6        
0002a5   0627     xorwf   0x27, 0x0        	XORWF	r0x102A,W
0002a6   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0002a7   2aba     goto    0x02ba           	GOTO	_00155_DS_
                                           ;	.line	173; "main.c"	SP_send_error(buf_err);
0002a8   3004     movlw   0x04             	MOVLW	high (_buf_err + 0)
0002a9   00a9     movwf   0x29             	MOVWF	r0x102B
0002aa   301a     movlw   0x1a             	MOVLW	(_buf_err + 0)
0002ab   00a8     movwf   0x28             	MOVWF	r0x102C
0002ac   3080     movlw   0x80             	MOVLW	0x80
0002ad   00aa     movwf   0x2a             	MOVWF	r0x102D
0002ae   0828     movf    0x28, 0x0        	MOVF	r0x102C,W
0002af   00fe     movwf   0x7e             	MOVWF	STK01
0002b0   0829     movf    0x29, 0x0        	MOVF	r0x102B,W
0002b1   00ff     movwf   0x7f             	MOVWF	STK00
0002b2   082a     movf    0x2a, 0x0        	MOVF	r0x102D,W
0002b3   118a     bcf     0x0a, 0x3        	PAGESEL	_SP_send_error
0002b4   2322     call    0x0322           	CALL	_SP_send_error
0002b5   118a     bcf     0x0a, 0x3        	PAGESEL	$
                                           ;	.line	174; "main.c"	return -1;  // quit with an error
0002b6   30ff     movlw   0xff             	MOVLW	0xff
0002b7   00ff     movwf   0x7f             	MOVWF	STK00
0002b8   30ff     movlw   0xff             	MOVLW	0xff
0002b9   2ade     goto    0x02de           	GOTO	_00156_DS_
                                           _00155_DS_:
                                           ;	.line	177; "main.c"	buf[buf_head] = data;
0002ba   1683     bsf     0x03, 0x5        	BANKSEL	_buf_head
0002bb   1303     bcf     0x03, 0x6        
0002bc   0829     movf    0x29, 0x0        	MOVF	_buf_head,W
0002bd   3e45     addlw   0x45             	ADDLW	(_buf + 0)
0002be   1283     bcf     0x03, 0x5        	BANKSEL	r0x102C
0002bf   1303     bcf     0x03, 0x6        
0002c0   00a8     movwf   0x28             	MOVWF	r0x102C
0002c1   3000     movlw   0x00             	MOVLW	high (_buf + 0)
0002c2   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0002c3   3e01     addlw   0x01             	ADDLW	0x01
0002c4   00a9     movwf   0x29             	MOVWF	r0x102B
0002c5   0828     movf    0x28, 0x0        	MOVF	r0x102C,W
0002c6   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0002c7   1303     bcf     0x03, 0x6        
0002c8   0084     movwf   0x04             	MOVWF	FSR
0002c9   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0002ca   1283     bcf     0x03, 0x5        	BANKSEL	r0x102B
0002cb   1303     bcf     0x03, 0x6        
0002cc   1829     btfsc   0x29, 0x0        	BTFSC	r0x102B,0
0002cd   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0002ce   0826     movf    0x26, 0x0        	MOVF	r0x1029,W
0002cf   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0002d0   1303     bcf     0x03, 0x6        
0002d1   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	178; "main.c"	buf_head = next;
0002d2   1283     bcf     0x03, 0x5        	BANKSEL	r0x102A
0002d3   1303     bcf     0x03, 0x6        
0002d4   0827     movf    0x27, 0x0        	MOVF	r0x102A,W
0002d5   1683     bsf     0x03, 0x5        	BANKSEL	_buf_head
0002d6   1303     bcf     0x03, 0x6        
0002d7   00a9     movwf   0x29             	MOVWF	_buf_head
                                           ;	.line	179; "main.c"	TXIE = 1;       //Enables the EUSART transmit interrupt
0002d8   1683     bsf     0x03, 0x5        	BANKSEL	_PIE1bits
0002d9   1303     bcf     0x03, 0x6        
0002da   160c     bsf     0x0c, 0x4        	BSF	_PIE1bits,4
                                           ;	.line	180; "main.c"	return 0;
0002db   3000     movlw   0x00             	MOVLW	0x00
0002dc   00ff     movwf   0x7f             	MOVWF	STK00
0002dd   3000     movlw   0x00             	MOVLW	0x00
                                           _00156_DS_:
0002de   0008     return                   	RETURN	
                                           ; exit point of _circBufPush
                                           
                                           
                                           ;	code size estimation:
                                           ;	  369+  125 =   494 instructions ( 1238 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.0 #9615 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"init.c"
                                           	list	p=16f690
                                           	radix dec
                                           	include "p16f690.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F690 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_PWM1CONbits
                                           	extern	_ECCPASbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_OSCCONbits
                                           	extern	_OSCTUNEbits
                                           	extern	_MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSPSTATbits
                                           	extern	_WPUbits
                                           	extern	_WPUAbits
                                           	extern	_IOCbits
                                           	extern	_IOCAbits
                                           	extern	_WDTCONbits
                                           	extern	_TXSTAbits
                                           	extern	_SPBRGbits
                                           	extern	_SPBRGHbits
                                           	extern	_BAUDCTLbits
                                           	extern	_ADCON1bits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_VRCONbits
                                           	extern	_CM1CON0bits
                                           	extern	_CM2CON0bits
                                           	extern	_CM2CON1bits
                                           	extern	_ANSELbits
                                           	extern	_ANSELHbits
                                           	extern	_EECON1bits
                                           	extern	_PSTRCONbits
                                           	extern	_SRCONbits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_PWM1CON
                                           	extern	_ECCPAS
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_OSCCON
                                           	extern	_OSCTUNE
                                           	extern	_PR2
                                           	extern	_MSK
                                           	extern	_SSPADD
                                           	extern	_SSPMSK
                                           	extern	_SSPSTAT
                                           	extern	_WPU
                                           	extern	_WPUA
                                           	extern	_IOC
                                           	extern	_IOCA
                                           	extern	_WDTCON
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_BAUDCTL
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDAT
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_VRCON
                                           	extern	_CM1CON0
                                           	extern	_CM2CON0
                                           	extern	_CM2CON1
                                           	extern	_ANSEL
                                           	extern	_ANSELH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_PSTRCON
                                           	extern	_SRCON
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_init
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_init	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;; Starting pCode block
                                           S_init__init	code
                                           _init:
                                           ; 2 exit points
                                           ;	.line	8; "init.c"	ADC2_TRIS = 1;
0003bd   1683     bsf     0x03, 0x5        	BANKSEL	_TRISAbits
0003be   1303     bcf     0x03, 0x6        
0003bf   1505     bsf     0x05, 0x2        	BSF	_TRISAbits,2
                                           ;	.line	9; "init.c"	ADC4_TRIS = 1;
0003c0   1605     bsf     0x05, 0x4        	BSF	_TRISAbits,4
                                           ;	.line	11; "init.c"	RCIN_TRIS=1;            //Input
0003c1   1687     bsf     0x07, 0x5        	BSF	_TRISCbits,5
                                           ;	.line	13; "init.c"	TX_TRIS=0;               // These need to be 0 for USART to work
0003c2   1386     bcf     0x06, 0x7        	BCF	_TRISBbits,7
                                           ;	.line	14; "init.c"	RX_TRIS=1;               // These need to be 1 for USART to work
0003c3   1686     bsf     0x06, 0x5        	BSF	_TRISBbits,5
                                           ;	.line	15; "init.c"	ADCON1=0x50;             //ADC Settings
0003c4   3050     movlw   0x50             	MOVLW	0x50
0003c5   009f     movwf   0x1f             	MOVWF	_ADCON1
                                           ;	.line	16; "init.c"	ANS11=0;                 // Turn off Analog input it necessary to function serial port RX
0003c6   1283     bcf     0x03, 0x5        	BANKSEL	_ANSELHbits
0003c7   1703     bsf     0x03, 0x6        
0003c8   119f     bcf     0x1f, 0x3        	BCF	_ANSELHbits,3
                                           ;	.line	17; "init.c"	ANS10=0;
0003c9   111f     bcf     0x1f, 0x2        	BCF	_ANSELHbits,2
                                           ;	.line	18; "init.c"	ANS7=0;
0003ca   139e     bcf     0x1e, 0x7        	BCF	_ANSELbits,7
                                           ;	.line	19; "init.c"	ANS8=0;
0003cb   101f     bcf     0x1f, 0x0        	BCF	_ANSELHbits,0
                                           ;	.line	20; "init.c"	ANS9=0;
0003cc   109f     bcf     0x1f, 0x1        	BCF	_ANSELHbits,1
                                           ;	.line	21; "init.c"	ANS4=0;
0003cd   121e     bcf     0x1e, 0x4        	BCF	_ANSELbits,4
                                           ;	.line	22; "init.c"	ANS2=1;                      //Zapnuti Analogovych vstupu
0003ce   151e     bsf     0x1e, 0x2        	BSF	_ANSELbits,2
                                           ;	.line	23; "init.c"	ANS3=1;
0003cf   159e     bsf     0x1e, 0x3        	BSF	_ANSELbits,3
                                           ;	.line	26; "init.c"	SPBRG=8;                // Baud Rate
0003d0   3008     movlw   0x08             	MOVLW	0x08
0003d1   1683     bsf     0x03, 0x5        	BANKSEL	_SPBRG
0003d2   1303     bcf     0x03, 0x6        
0003d3   0099     movwf   0x19             	MOVWF	_SPBRG
                                           ;	.line	27; "init.c"	BRGH=1;                 // 115.2k
0003d4   1518     bsf     0x18, 0x2        	BSF	_TXSTAbits,2
                                           ;	.line	28; "init.c"	BRG16=1;
0003d5   159b     bsf     0x1b, 0x3        	BSF	_BAUDCTLbits,3
                                           ;	.line	30; "init.c"	TXEN=1;			// Enable transmission mode
0003d6   1698     bsf     0x18, 0x5        	BSF	_TXSTAbits,5
                                           ;	.line	31; "init.c"	SYNC=0;			// Disable Synchronous/Enable Asynchronous
0003d7   1218     bcf     0x18, 0x4        	BCF	_TXSTAbits,4
                                           ;	.line	32; "init.c"	SPEN=1;			// Enable serial port
0003d8   1283     bcf     0x03, 0x5        	BANKSEL	_RCSTAbits
0003d9   1303     bcf     0x03, 0x6        
0003da   1798     bsf     0x18, 0x7        	BSF	_RCSTAbits,7
                                           ;	.line	46; "init.c"	CCP1CON = 5; // Setup ENHANCED CAPTURE MODULE
0003db   3005     movlw   0x05             	MOVLW	0x05
0003dc   0097     movwf   0x17             	MOVWF	_CCP1CON
                                           ;	.line	47; "init.c"	CCP1IE = 0;     // ENHANCED CAPTURE MODULE Interrupt Disabled
0003dd   1683     bsf     0x03, 0x5        	BANKSEL	_PIE1bits
0003de   1303     bcf     0x03, 0x6        
0003df   110c     bcf     0x0c, 0x2        	BCF	_PIE1bits,2
                                           ;	.line	53; "init.c"	T1CON = 0;  // TIMER1 presccaler 1
0003e0   1283     bcf     0x03, 0x5        	BANKSEL	_T1CON
0003e1   1303     bcf     0x03, 0x6        
0003e2   0190     clrf    0x10             	CLRF	_T1CON
                                           ;	.line	55; "init.c"	PEIE = 1;       // Enable peripheral interrupts.
0003e3   170b     bsf     0x0b, 0x6        	BSF	_INTCONbits,6
                                           ;	.line	56; "init.c"	GIE = 1;	// Enable all interrupts.
0003e4   178b     bsf     0x0b, 0x7        	BSF	_INTCONbits,7
                                           ;	.line	59; "init.c"	TMR1H = 0;
0003e5   018f     clrf    0x0f             	CLRF	_TMR1H
                                           ;	.line	60; "init.c"	TMR1L = 0;
0003e6   018e     clrf    0x0e             	CLRF	_TMR1L
                                           ;	.line	61; "init.c"	CCP1IE = 1;
0003e7   1683     bsf     0x03, 0x5        	BANKSEL	_PIE1bits
0003e8   1303     bcf     0x03, 0x6        
0003e9   150c     bsf     0x0c, 0x2        	BSF	_PIE1bits,2
                                           ;	.line	62; "init.c"	TMR1ON = 1;
0003ea   1283     bcf     0x03, 0x5        	BANKSEL	_T1CONbits
0003eb   1303     bcf     0x03, 0x6        
0003ec   1410     bsf     0x10, 0x0        	BSF	_T1CONbits,0
0003ed   0008     return                   	RETURN	
                                           ; exit point of _init
                                           
                                           
                                           ;	code size estimation:
                                           ;	   33+    8 =    41 instructions (   98 byte)
                                           
                                           	end
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F690 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
